<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅梦博客</title>
  
  
  <link href="https://drfengling.github.io/atom.xml" rel="self"/>
  
  <link href="https://drfengling.github.io/"/>
  <updated>2023-11-06T03:27:59.415Z</updated>
  <id>https://drfengling.github.io/</id>
  
  <author>
    <name>浅梦风凌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AspNet开发1</title>
    <link href="https://drfengling.github.io/qm/c33edf33.html"/>
    <id>https://drfengling.github.io/qm/c33edf33.html</id>
    <published>2023-01-04T02:27:03.000Z</published>
    <updated>2023-11-06T03:27:59.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="ASP-NET网页语法"><a href="#ASP-NET网页语法" class="headerlink" title="ASP.NET网页语法"></a>ASP.NET网页语法</h4><h3 id="ASP-NET网页扩展名"><a href="#ASP-NET网页扩展名" class="headerlink" title="ASP.NET网页扩展名"></a>ASP.NET网页扩展名</h3><p>文件                扩展名<br>Web用户控件      .ascx<br>HTML页        .htm<br>XML页        .xml<br>母版页        .master<br>Web服务        .asmx<br>全局应用程序类    .asax<br>Web配置文件    .config<br>网站地图        .sitemap<br>外观文件        .skin<br>样式表        .css</p><h3 id="页面指令"><a href="#页面指令" class="headerlink" title="页面指令"></a>页面指令</h3><p>ASP.NET页面中前几行一般是&lt;%@…%&gt;这样的代码,这叫做页面指令,用来定义ASP.NET页分析器和编译器使用的特定于该页的一些定义.在.aspx文件中使用的页面指令一般有以下几种:<br>1.&lt;%@Page%&gt;<br>2.&lt;%@Import Namespace=”Value”%&gt;<br>3.&lt;%@OutputCache%&gt;<br>4.&lt;%@Implements Interface=”接口名称”%&gt;<br>5.&lt;%@Register%&gt;</p><h3 id="ASPX文件内容注释"><a href="#ASPX文件内容注释" class="headerlink" title="ASPX文件内容注释"></a>ASPX文件内容注释</h3><p>服务端注释&lt;%-注释内容-%&gt;,允许开发人员在ASP.Net应用程序文件的任何部分(除了<script>代码块内部)嵌入代码注释.<br>如果<script>代码块中的代码需要注释,则使用HTML代码中的注释(<!--注释内容//-->)</p><h3 id="服务器端文件包含"><a href="#服务器端文件包含" class="headerlink" title="服务器端文件包含"></a>服务器端文件包含</h3><p>服务器端文件包含用于将指定文件的内容插入ASP.NET文件中,这些文件包含网页(.aspx文件),用户控件文件(.ascx文件)和Global.ascx文件.包含文件是在编译之前被包含的文件按原始格式插入到原始位置,相当于两个文件组合为一个文件,两个文件的内容必须符合.aspx文件的要求.<br>语法:</p><!-- #include file|virtual="filename"--><p>例如,使用服务器端包含指令语法调用将在Asp.net页上创建页眉的文件,这里使用的是相对路径</p><html><body><!-- #Include virtual="/include/header.ascx" --></body></html>### HTML服务器控件语法默认情况下,Asp.net文件中的HTML元素作为文本进行处理,页面开发人员无法在服务器端访问文件中的HTML元素,要使这些元素可以被服务器端访问,必须将HTML元素作为服务器控件进行分析和处理,这可以通过为HTML元素添加runat="server"属性来完成,服务器端通过HTML元素的id属性引用该控件语法:<控件名 id="名称" ...runbat="server">例如:<body><form id="form1" runbat="server"><input id="btnRed" type="button" value="Red" onclick="return btnRed_onClick()"/></form></body>### ASP.NET服务器控件语法ASP.NET服务器控件比HTML服务器控件具有更多内置功能,web服务器控件不仅包含窗体控件(如按钮和文本框),而且还包括特殊用途的控件(如日历,菜单和树视图控件).Web服务器控件不仅包括窗体控件(如按钮和文本框),而且还包括特殊用途的控件(如日历,菜单和树视图控件),Web服务器控件与Html服务器控件相比更为抽象,因为其对象模型不一定反映HTML语法.语法如下:<asp:控件名 ID="名称" ...组件的其他属性... runbat="server"/>例如:<form id="form1" runbat="server"><div><asp:Button ID="btnTest" runbat="server" Text="服务器按钮控件"/></div></form>### 代码块语法代码块语法是定义网页呈现时所执行的内嵌代码.定义内嵌代码的语法标记元素为:<%内嵌代码%>例如:<form id="form1" runbat="server"><%if(DateTime.Now.Hour<12)%>上午好<%else%>下午好</form>#### 制作一个ASP.NET网站### 设计Web页面1.加入Asp.net网页2.布局Asp.net网页3.添加服务器控件### 添加Asp.net文件夹文件夹        说明Bin        包含程序所需的所有已编译程序集(.dll文件).应用程序中自动引用Bin文件夹中的代码所表示的任何类APP_Code    包含页使用的类(如.cs .vb .jsl文件)的源代码App_GlobalResources包含编译到具有全局范围的程序集中的资源(.resx和.resources文件)App_LocalResources 包含与应用程序中的特定页,用户控件或母版页关联的资源(.resx和.resources文件)App_WebReferences 包含用于定义在应用程序中使用的Web引用的引用协定文件(.wsdl),架构(.xsd)和发现文档文件(.disco和.discomap文件)App_Browers    包含Asp.net用于标识个别浏览器并确定其功能的浏览器定义(.browser)文件主题        包含用于定义Asp.NET网页额和控件外观的文件集合(.skin和.css,图像文件及一般资源)<h5 id="ASP-NET开发实例大全-提高卷"><a href="#ASP-NET开发实例大全-提高卷" class="headerlink" title="ASP.NET开发实例大全 提高卷"></a>ASP.NET开发实例大全 提高卷</h5><h4 id="ASP-NET网络开发常备技术"><a href="#ASP-NET网络开发常备技术" class="headerlink" title="ASP.NET网络开发常备技术"></a>ASP.NET网络开发常备技术</h4><p>1.1.正则表达式<br>001.使用正则表达式验证电话号码<br>关键技术<br>本实例主要用到Regex类的IsMatch方法用于指示正则表达式使用pattern参数中指定的正则表达式是否在输入字符串中找到匹配项<br>1.input:字符串对象,表示要搜索匹配项的字符串<br>2.pattern:字符串对象,表示要匹配的正则表达式模式<br>3.bool:方法返回布尔值,如果正则表达式找到匹配项,则返回true,否则false<br>设计过程<br>1.打开vs,新建一个网站,命名为Validatephone，默认主页为Default.aspx.<br>2.在Default.aspx页面中添加一个TextBox控件,用于输入电话号码,添加一个Button,用于验证电话号码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=<span class="string">&quot;C#&quot;</span> AutoEventWireup=<span class="string">&quot;true&quot;</span> CodeFile=<span class="string">&quot;Default.aspx.cs&quot;</span> Inherits=<span class="string">&quot;_Default&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html xmlns=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">head</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form <span class="built_in">id</span>=<span class="string">&quot;form1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;asp:Label ID=<span class="string">&quot;Label1&quot;</span> Font-Size=<span class="string">&quot;16px&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;电话号码:&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line"></span><br><span class="line">        &lt;asp:TextBox ID=<span class="string">&quot;TextBox1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;asp:Label ID=<span class="string">&quot;Label2&quot;</span> Font-Size=<span class="string">&quot;16px&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;号码格式:&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line"></span><br><span class="line">        XXXX-XXXXXXXX&lt;br /&gt;</span><br><span class="line">        &lt;asp:Button ID=<span class="string">&quot;Button1&quot;</span>  runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;电话验证&quot;</span> OnClick=<span class="string">&quot;Button1_Click&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public partial class _Default : System.Web.UI.Page</span><br><span class="line">&#123;</span><br><span class="line">    protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void Button1_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(isTelePhone(TextBox1.Text.Trim()))&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public bool isTelePhone(string str_telephone) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_telephone,@<span class="string">&quot;^(\d&#123;3,4&#125;-)?\d&#123;6,8&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中“^”用于匹配行首,如果正则表达式匹配以First开头的行,则正则表达式如下:<br>^First<br>002.使用正则表达式验证输入密码条件<br>关键技术<br>[A-Za-z]表示匹配一个大写或小写的字母;+表示最少匹配一个大写或小写字母,[0-9]表示匹配一个数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;使用正则表达式验证密码输入条件&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               密码必须由数字和26个英文字母组成的密码字符</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                密码: </span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;248px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button1&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button1_Click&quot;</span> Text=<span class="string">&quot;验证密码&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button1_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsPassword(TextBox1.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label1.Text = <span class="string">&quot;密码格式正确!&quot;</span>;</span><br><span class="line">            Label1.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label1.Text = <span class="string">&quot;密码格式错误!&quot;</span>;</span><br><span class="line">            Label1.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> public bool IsPassword(string str_password) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_password,@<span class="string">&quot;[A-Za-z]+[0-9]&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中匹配位置的元字符“$”<br>正则表达式中”$”用于匹配行尾,如果正则表达式匹配以End结尾的行,则正则表达式如下:<br>End$<br>003.使用正则表达式验证邮政编码<br>关键技术<br>“^\d{6}$”其中^表示匹配行开始,\d表示匹配数字,{6}是限定符,表示匹配6个数字,$表示匹配行结束.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;3.使用正则表达式验证邮政编码&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               邮政编码:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox3&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;248px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button3&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button3_Click&quot;</span> Text=<span class="string">&quot;验证邮政编码&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label3&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button3_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsPostalCode(TextBox3.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label3.Text = <span class="string">&quot;邮政编码格式正确!&quot;</span>;</span><br><span class="line">            Label3.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label3.Text = <span class="string">&quot;邮政编码格式错误!&quot;</span>;</span><br><span class="line">            Label3.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> public bool IsPostalCode(string str_postalCode) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_postalCode,@<span class="string">&quot;^\d&#123;6&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中匹配字符的元字符“\w”和“\W”<br>正则表达式中“\w”用于匹配单词字符,单词字符包括汉字,字母,数字和下划线;”\W”用于匹配任意的非单词字符.<br>004.使用正则表达式验证手机号<br>“^[1][3-5]\d{9}$”正则表达式,其中[1]表示匹配一个数字1;[3-5]表示匹配数字3,4,5中的任何一个数字,\d表示匹配数字,{9}是限定符,表示匹配9个数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">           &lt;h2&gt;4.使用正则表达式验证手机号&lt;/h2&gt;</span><br><span class="line">           &lt;p&gt;</span><br><span class="line">              手机号:</span><br><span class="line">               &lt;asp:TextBox ID=<span class="string">&quot;TextBox4&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">           &lt;/p&gt;</span><br><span class="line">          </span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               &lt;asp:Button ID=<span class="string">&quot;Button4&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button4_Click&quot;</span> Text=<span class="string">&quot;手机号验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">           &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;asp:Label ID=<span class="string">&quot;Label4&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line">protected void Button4_Click(object sender, EventArgs e)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span> (isUsePhone(TextBox4.Text))</span><br><span class="line">       &#123;</span><br><span class="line">           Label4.Text = <span class="string">&quot;手机号格式正确!&quot;</span>;</span><br><span class="line">           Label4.ForeColor = Color.Green;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           Label4.Text = <span class="string">&quot;手机号格式错误!&quot;</span>;</span><br><span class="line">           Label4.ForeColor = Color.Red;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">public bool isUsePhone(string str_usePhone) &#123;</span><br><span class="line"></span><br><span class="line">       //^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\d&#123;8&#125;$</span><br><span class="line">       //^[1]((3[\d])|(4[5,6,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[1-3,5-8])|(9[1,8,9]))\d&#123;8&#125;$</span><br><span class="line">       <span class="built_in">return</span> Regex.IsMatch(str_usePhone, @<span class="string">&quot;^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\d&#123;8&#125;$&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中匹配字符的元字符”\s”和”\S”.<br>正则表达式中”\s”用于匹配任意的空白字符,包括换行符,空格,制表符等,”\S”用于匹配任意的非空白字符.<br>005.使用正则表达式验证身份证号<br>关键技术<br>“(^\d{18}$)|(^\d{15}$)”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;5.使用正则表达式验证身份证号&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               身份证号:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox5&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button5&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button5_Click&quot;</span> Text=<span class="string">&quot;身份证号验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label5&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button5_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isIDCard(TextBox5.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label5.Text = <span class="string">&quot;身份证号格式正确!&quot;</span>;</span><br><span class="line">            Label5.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label5.Text = <span class="string">&quot;身份证号格式错误!&quot;</span>;</span><br><span class="line">            Label5.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> public bool isIDCard(string str_IDCard) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_IDCard,@<span class="string">&quot;(^\d&#123;18&#125;$)|(^\d&#123;15&#125;$)&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中匹配字符的元字符“\d”和“\D”<br>“\d”用于匹配任意的数字,数字包括了0,1,2,3,4,5,6,7,8,9;”\D”用于匹配任意的非数字字符<br>006.使用正则表达式验证两位小数<br>关键技术<br>“^[0-9]+.[0-9]{2}$”正则表达式,其中[0-9]+表示匹配一个或多个数字,.表示匹配小数点,[0-9]{2}表示匹配两个数字.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;6.使用正则表达式验证两位小数&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               小数:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox6&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button6&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button6_Click&quot;</span> Text=<span class="string">&quot;小数验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label6&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button6_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isXiaoShu(TextBox6.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label6.Text = <span class="string">&quot;小数格式正确!&quot;</span>;</span><br><span class="line">            Label6.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label6.Text = <span class="string">&quot;小数格式错误!&quot;</span>;</span><br><span class="line">            Label6.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">public bool isXiaoShu(string str_Xiaoshu) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_Xiaoshu,@<span class="string">&quot;^[0-9]+\.[0-9]&#123;2&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中匹配元字符”.”.<br>正则表达式中“.”用于匹配除换行符以外的任意字符,例如,正则表达式”^…$”匹配了字符串“abc”,同时也会匹配123和”_la“.<br>007.使用正则表达式验证一年的12个月份<br>关键技术<br>“^(0?[1-9]|1[0-2])$”正则表达式,其中0？表示匹配零个或1个”0“:[1-9]表示匹配数字1-9,1[0-2]表示匹配数字10，11，12</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;7.使用正则表达式验证一年的12个月份&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入月份信息:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox7&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button7&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button7_Click&quot;</span> Text=<span class="string">&quot;月份验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label7&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button7_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isMonth(TextBox7.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label7.Text = <span class="string">&quot;月份格式正确!&quot;</span>;</span><br><span class="line">            Label7.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label7.Text = <span class="string">&quot;月份格式错误!&quot;</span>;</span><br><span class="line">            Label7.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">public bool isMonth(string str_month) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_month,@<span class="string">&quot;^(0?[1-9]|1[0-2])$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中的限定符”!”<br>正则表达式中的每一个元字符都只能匹配一个字符,如果要匹配多个字符时,则需要使用限定符,限定符用于指定字符自身重复出现的次数<br>008.使用正则表达式验证一个月的31天<br>“^((0?[1-9])|[1-2][0-9]|3[0-1])$”其中0？表示匹配0个或1个0,[1-9]表示匹配数字1-9,（1|2）表示匹配1或2,30|31表示匹配数字30或31.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;8.使用正则表达式验证一个月的31天&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入天数信息:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox8&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button8&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button8_Click&quot;</span> Text=<span class="string">&quot;天数验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label8&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button8_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDay(TextBox8.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label8.Text = <span class="string">&quot;天数格式正确!&quot;</span>;</span><br><span class="line">            Label8.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label8.Text = <span class="string">&quot;天数格式错误!&quot;</span>;</span><br><span class="line">            Label8.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> public bool isDay(string str_day) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_day,@<span class="string">&quot;^((0?[1-9])|[1-2][0-9]|3[0-1])$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中的”?”限定符.<br>正则表达式中的”?”限定符用于限定指定的字符出现0次或1次.<br>^abc?$<br>上面的正则表达式可以匹配字符串abc和ab.表达式c?表示字母c可以出现1次或不出现.<br>009.使用正则表达式验证数字输入<br>关键技术<br>”^[0-9]*$“，[0-9]*表示匹配0个至多个数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">   &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;9.使用正则表达式验证数字输入&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入数字:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox9&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button9&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button9_Click&quot;</span> Text=<span class="string">&quot;数字验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label9&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button9_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isNumber(TextBox9.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label9.Text = <span class="string">&quot;数字格式正确!&quot;</span>;</span><br><span class="line">            Label9.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label9.Text = <span class="string">&quot;数字格式错误!&quot;</span>;</span><br><span class="line">            Label9.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">public bool isNumber(string str_number) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_number,@<span class="string">&quot;^[0-9]*$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>正则表达式中的“<em>”限定符<br>用于限定指定字符至少出现0次<br>^abc</em>$<br>上面的正则表达式可以匹配字符串ab,abc,abcc等.表达式c*表示字母c可以出现0次或无数次.<br>010.使用正则表达式验证密码长度<br>关键技术<br>“^\d[6,18]$”正则表达式,其中\d{6,18}表示匹配6-18个数字.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">   &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;10.使用正则表达式验证密码长度&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入密码:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox10&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button10&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button10_Click&quot;</span> Text=<span class="string">&quot;密码验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label10&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button10_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsPasswLength(TextBox10.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label10.Text = <span class="string">&quot;密码格式正确!&quot;</span>;</span><br><span class="line">            Label10.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label10.Text = <span class="string">&quot;密码格式错误!&quot;</span>;</span><br><span class="line">            Label10.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">public bool IsPasswLength(string str_Length) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_Length,@<span class="string">&quot;^\d&#123;6,18&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>011.使用正则表达式验证非零正整数<br>“^+?[1-9][0-9]*$”，其中+?表示匹配零个或一个正号”+”，[0-9]*表示匹配零个或多个数字.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">           &lt;h2&gt;11.使用正则表达式验证非零正整数&lt;/h2&gt;</span><br><span class="line">           &lt;p&gt;</span><br><span class="line">              输入数值:</span><br><span class="line">               &lt;asp:TextBox ID=<span class="string">&quot;TextBox11&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">           &lt;/p&gt;</span><br><span class="line">          </span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               &lt;asp:Button ID=<span class="string">&quot;Button11&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button11_Click&quot;</span> Text=<span class="string">&quot;正数验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">           &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;asp:Label ID=<span class="string">&quot;Label11&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line">protected void Button11_Click(object sender, EventArgs e)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span> (IsIntNumber(TextBox11.Text))</span><br><span class="line">       &#123;</span><br><span class="line">           Label11.Text = <span class="string">&quot;密码格式正确!&quot;</span>;</span><br><span class="line">           Label11.ForeColor = Color.Green;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           Label11.Text = <span class="string">&quot;密码格式错误!&quot;</span>;</span><br><span class="line">           Label11.ForeColor = Color.Red;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">public bool IsIntNumber(string int_Number) &#123;</span><br><span class="line">       <span class="built_in">return</span> Regex.IsMatch(int_Number,@<span class="string">&quot;^\+?[1-9][0-9]*$&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中的“{n}”限定符.<br>正则表达式中的“{n}”限定符用于限定指定的字符出现n次.<br>^c{5}$<br>上面的正则表达式表示可以匹配字符串ccccc,字母c可出现5次<br>012.使用正则表达式验证非零负整数<br>同上,+变-<br>秘笈心法<br>正则表达式中的“{n,}”限定符<br>正则表达式中的“{n,}”限定符用于限定指定的字符至少出现n次.<br>^c{5,}$<br>上面的正则表达式可以匹配字符串ccccc和cccccc等.表达式c{5,}表示字母c可以出现5次或5次以上<br>013.使用正则表达式验证大写字母<br>“^[A-Z]+$”正则表达式,其中[A-Z]表示匹配一个或多个大写字母<br>秘笈心法<br>Char结构的IsUpper方法<br>如果为大写返回true，否则false.<br>014.使用正则表达式验证小写字母<br>同上 A-Z变a-z<br>秘笈心法<br>Char结构的IsLower依次判断每个字符是否为小写,是true,否false.<br>015.使用正则表达式检查字符串中重复出现的词<br>关键技术<br>Regex类的Matches方法用于在输入字符串中搜索pattern参数中提供的正则表达式的匹配项<br>public static MatchCollection Matches(string input,string pattern,RegexOptions options)<br>Matches方法中的参数说明<br>参数        说明<br>input        要搜索匹配项的字符串<br>pattern        要匹配的正则表达式模式<br>options        RegexOption枚举值的按位”或”组合<br>MatchCollection    方法返回找到的成功匹配的集合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;15.使用正则表达式验证字符串中重复出现的词&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label13&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; The the quick brown for jumped over the lary dog dog. &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button12&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button12_Click&quot;</span> Text=<span class="string">&quot;列出字符串中重复出现的词&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label12&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button12_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!GetSameWords(Label13.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label12.Text = <span class="string">&quot;没有重复单词!&quot;</span>;</span><br><span class="line">            Label12.ForeColor = Color.Green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label12.Text = <span class="string">&quot;有单词重复!&quot;</span>;</span><br><span class="line">            Label12.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">public bool GetSameWords(string str_words) &#123;</span><br><span class="line">        MatchCollection matches = Regex.Matches(str_words,@<span class="string">&quot;\b(?&lt;word&gt;\w+)\s+(\k&lt;word&gt;)\b&quot;</span>,RegexOptions.Compiled|RegexOptions.IgnoreCase);</span><br><span class="line">        <span class="keyword">if</span> (matches.Count!=0)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach (Match match <span class="keyword">in</span> matches)</span><br><span class="line">            &#123;</span><br><span class="line">                string word = match.Groups[<span class="string">&quot;word&quot;</span>].Value;</span><br><span class="line">                Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;重复单词:&quot;</span>+word.ToString()+<span class="string">&quot;&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;没有重复的单词&#x27;);&lt;/script&gt;&quot;</span>) ;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>正则表达式中的”{n,m}”限定符<br>正则表达式中的”{n,m}”限定符用于限定指定的字符至少出现n次,最多出现m次<br>^c{2,3}$<br>上面的正则表达式可以匹配字符串cc或ccc,表达式c{2,3}表示字母c至少可以出现2次,最多出现3次<br>016.使用正则表达式替换字符串<br>关键技术<br>Regex类的的Replace方法用于在指定的输入字符串中,使用指定的替换字符串替换与指定正则表达式匹配的所有字符串<br>public static string Replace(string input,string pattern,string replacement)<br>input        要搜索匹配的字符串<br>replacement    替换字符串<br>pattern        要匹配的正则表达式模式<br>string        方法返回被替换后的字符串对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;16.使用正则表达式替换字符串&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label14&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 被替换的字符串: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">             </span><br><span class="line">                 &lt;asp:TextBox ID=<span class="string">&quot;TextBox12&quot;</span> Text=<span class="string">&quot;1a2b3c4d5e6f7g8h9&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;215px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label16&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 字母替换为: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">               </span><br><span class="line">                  &lt;asp:TextBox ID=<span class="string">&quot;TextBox13&quot;</span> Text=<span class="string">&quot;9&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;242px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button13&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button13_Click&quot;</span> Text=<span class="string">&quot;替换&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label15&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button13_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        Label15.Text = ReplaceWords(TextBox12.Text,TextBox13.Text);</span><br><span class="line">    &#125;</span><br><span class="line">public string ReplaceWords(string str_words,string replace_words) &#123;</span><br><span class="line">        string str = Regex.Replace(str_words,@<span class="string">&quot;[A-Za-z]\*?&quot;</span>,replace_words);</span><br><span class="line">        string showstr = $<span class="string">&quot;替换前字符:&#123;str_words&#125;,替换的字符:&#123;replace_words&#125;,替换后的字符:&#123;str&#125;&quot;</span>;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>+showstr+<span class="string">&quot;&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span> showstr;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>字符串对象的Replace方法可以方便的替换字符串对象中指定的字符或字符串<br>017.使用正则表达式拆分字符串<br>关键技术<br>Regex类的split方法用于正则表达式模式定义位置拆分输入字符串<br>public static string[] Split(string input,string pattern)<br>input    字符串对象,表示要拆分的字符串<br>pattern    字符串对象,表示要匹配的正则表达式模式<br>string[]    方法返回字符串数组,表示拆分后的字符串数组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;17.使用正则表达式拆分字符串&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label17&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 被拆分的字符串: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">             </span><br><span class="line">                 &lt;asp:TextBox ID=<span class="string">&quot;TextBox14&quot;</span> Text=<span class="string">&quot;1a2b3c4d5e6f7g8h9&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;215px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label18&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 拆分后字符: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">               </span><br><span class="line">                  &lt;asp:TextBox ID=<span class="string">&quot;TextBox15&quot;</span> Text=<span class="string">&quot;&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;242px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button14&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button14_Click&quot;</span> Text=<span class="string">&quot;拆分&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label19&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button14_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        Label19.Text = SplitWords(TextBox12.Text, TextBox13.Text);</span><br><span class="line">    &#125;</span><br><span class="line">public string SplitWords(string str_words, string replace_words)</span><br><span class="line">    &#123;</span><br><span class="line">        string text=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        string[] str = Regex.Split(str_words, @<span class="string">&quot;[1-9]\*?&quot;</span>);</span><br><span class="line">        foreach (var item <span class="keyword">in</span> str)</span><br><span class="line">        &#123;</span><br><span class="line">            text += item;</span><br><span class="line">        &#125;</span><br><span class="line">        string showstr = $<span class="string">&quot;拆分前字符:&#123;str_words&#125;,拆分后的字符:&#123;text&#125;&quot;</span>;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + showstr + <span class="string">&quot;&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">return</span> showstr;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>字符串对象的split方法<br>018.使用正则表达式验证输入字母<br>“^[A-Za-z]+$”表示匹配一个或多个大写或小写字母<br>秘笈心法<br>Char结构的IsLetter方法依次判断用户输入字符串中的每一个字符是否为字母,如果为字母返回true，否则为false<br>019.使用正则表达式验证中文汉字输入<br>关键技术<br>“^[\u4e00-\u9fa5]{1,}$”表示匹配一个或多个汉字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;19.使用正则表达式验证汉字输入&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入汉字:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox16&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button15&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button15_Click&quot;</span> Text=<span class="string">&quot;汉字验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label20&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> public bool isChinese(string str_chinese) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_chinese,@<span class="string">&quot;^[\u4e00-\u9fa5]&#123;1,&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> protected void Button15_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isChinese(TextBox16.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label20.Text = <span class="string">&quot;输入的是汉字!&quot;</span>;</span><br><span class="line">            Label20.ForeColor = Color.Green;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label20.Text = <span class="string">&quot;输入格式不正确!&quot;</span>;</span><br><span class="line">            Label20.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + Label20.Text + <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>Char结构的IsDigit方法用来验证是否为10进制数字,可以用for循环遍历字符串中的字符,依次判断每一个字符是否为数字,如果是数字则方法返回true,否则返回false.<br>020.使用正则表达式验证输入字符串<br>关键技术<br>.匹配除换行符外的任意字符..{8,}表示匹配除换行符以外的8个或8个以上字符.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;20.使用正则表达式验证字符串输入&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入字符串:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox17&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button16&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button16_Click&quot;</span> Text=<span class="string">&quot;字符串验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label21&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button16_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isStr(TextBox17.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label21.Text = <span class="string">&quot;输入的是字符串!&quot;</span>;</span><br><span class="line">            Label21.ForeColor = Color.Green;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label21.Text = <span class="string">&quot;输入格式不正确!&quot;</span>;</span><br><span class="line">            Label21.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + Label21.Text + <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">public bool isStr(string str) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str, @<span class="string">&quot;^.&#123;8,&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>字符串对象的Length方法<br>021.使用正则表达式验证E-mail格式<br>“^((\w.)+)@(([0-9]{1,3}.[0-9]{1,3}))|((\w+.)+)@([a-zA-Z]{2,4}|[0-9]{1,3})(.[a-zA-Z]{2,4})$”<br>([a-zA-Z]{2,4}|[0-9]{1,3})(.[a-zA-Z]{2,4})表示匹配服务器域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;21.使用正则表达式验证E-mail格式&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入E-mail地址:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox18&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button17&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button17_Click&quot;</span> Text=<span class="string">&quot;E-mail验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label22&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button17_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmail(TextBox18.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label22.Text = <span class="string">&quot;输入的是邮箱!&quot;</span>;</span><br><span class="line">            Label22.ForeColor = Color.Green;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label22.Text = <span class="string">&quot;输入格式不正确!&quot;</span>;</span><br><span class="line">            Label22.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + Label22.Text + <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">public bool isEmail(string str_email) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_email, @<span class="string">&quot;^(([\w\.]+)@(([0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;))|((\w+\.?)+)@([a-zA-Z]&#123;2,4&#125;|[0-9]&#123;1,3&#125;)(\.[a-zA-Z]&#123;2,4&#125;))$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>在使用正则表达式中,经常会有验证带有小数点的字符串,.表示在正则表达式除了换行符外的任意字符.那么要怎样才可以匹配字符“.”,可以使用转义字符“\”实现,”.“<br>022.使用正则表达式验证IP地址<br>关键技术<br>“（25[0-5]|2[0-4]\d|[1]\d{2}|[1-9]?\d）”表示匹配数字0-255</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;22.使用正则表达式验证IP地址&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入IP地址:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox19&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button18&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button18_Click&quot;</span> Text=<span class="string">&quot;IP验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label23&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> protected void Button18_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isIP(TextBox19.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label23.Text = <span class="string">&quot;输入的是IP!&quot;</span>;</span><br><span class="line">            Label23.ForeColor = Color.Green;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label23.Text = <span class="string">&quot;输入格式不正确!&quot;</span>;</span><br><span class="line">            Label23.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + Label23.Text + <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">public bool isIP(string str_IP)</span><br><span class="line">    &#123;</span><br><span class="line">        string num = @<span class="string">&quot;(25[0-5]|2[0-4]\d|[1]\d&#123;2&#125;|[1-9]?\d)&quot;</span>;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_IP,$<span class="string">&quot;^&#123;num&#125;\\.&#123;num&#125;\\.&#123;num&#125;\\.&#123;num&#125;$&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>使用split代替正则表达式验证IP地址<br>首先调用Split方法根据字符.拆分IP地址字符串为字符串数组,字符串转换为数值类型判断数值范围即可<br>023.使用正则表达式验证URL<br>关键技术<br>“http(s)?://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]<em>)?”,[\w-]+.表示匹配一个或多个以单词字符和连接符号“-”组成的字符串开头的,i以字符.结尾的字符串,(/[\w-./?%&amp;=]</em>)?表示匹配出现零次或一次由单词字符“-”“/”“.””?” “%” “&amp;” “=”组成的长度至少为1的字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;23.使用正则表达式验证网址&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               输入网络地址:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox20&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button19&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button19_Click&quot;</span> Text=<span class="string">&quot;网址验证&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label24&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void Button19_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isInternet(TextBox20.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            Label24.Text = <span class="string">&quot;输入的是网址!&quot;</span>;</span><br><span class="line">            Label24.ForeColor = Color.Green;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Label24.Text = <span class="string">&quot;输入格式不正确!&quot;</span>;</span><br><span class="line">            Label24.ForeColor = Color.Red;</span><br><span class="line">        &#125;</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span> + Label24.Text + <span class="string">&quot;&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">public bool isInternet(string str_IE) &#123;</span><br><span class="line">        <span class="built_in">return</span> Regex.IsMatch(str_IE, @<span class="string">&quot;http(s)?:([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>1.2.网站信息的站内搜索<br>024.一般搜索<br>关键技术<br>Like运算符用于确定给定的字符串是否与指定模式匹配,模式可以包含常规字符和通配符字符.模式匹配过程中,常规字符必须与字符串中指定的字符完全匹配,但是,通配符可使用字符串的任意片段进行匹配.<br>例如,要查询tb_info表中信息名称包含有C的记录.<br>select * from tb_info where InfoName like ‘%C%’<br>% 包含零个或更多任意字符串,例如,like “%a%”表示查找在字符串任何位置包含a的值</p><ul><li>任何单个字符,例如,like ‘a_b’表示查找以a开头,以b结尾的值,并且在这两个字符之间有任意一个字符.<br>[]  属于指定范围或集合中的任何单个字符.例如,[af]表示属于指定范围([a-f])或集合([abcdef])中的任何单个字符<br>[^] 不属于指定范围或集合的任何单个字符.例如,[^af]表示不属于指定范围(a-f)或集合([abcdef])的任何单个字符<br>Default.aspx页面用到的控件及用途<br>HTML/Table        布局页面<br>标准/Label    labInfoID    信息ID<pre><code>  labInfoName信息名称  labInfoType信息类型  labInfoContent信息内容  labPage    当前页码  labBackPage总页码</code></pre>标准/Button    btnSearch搜索<br>标准/TextBox    txtSKWord搜索关键字<br>标准/DropDownList    ddlSCondition 搜索条件<pre><code>  ddlInfoType 信息类型</code></pre>标准/LinkButton    InkBtnOne 第一页<pre><code>  InkbtnUp      上一页  InkbtnNext 下一页  InkbtnBack 最后一页</code></pre>数据/DataList    dlInfo    显示搜索结果<br>本实例主要用到了DataList空间分页技术.首先自定义一个dllDataBind方法,该方法有sqlstr,table和dkf三个参数,分别表示要执行的SQL语句,数据表名和DataList控件要绑定的数据表主键字段名.dlDataBind方法用来从数据库中查找出相关记录并计算出计算总数,然后对DataList控件进行数据绑定,<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">           &lt;h2&gt;24.一般搜索&lt;/h2&gt;</span><br><span class="line">           &lt;p&gt;</span><br><span class="line">             搜索条件:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">             </span><br><span class="line">               &lt;asp:DropDownList ID=<span class="string">&quot;ddlInfoType&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;158px&quot;</span>&gt;</span><br><span class="line">                   &lt;asp:ListItem&gt;ErrorCode&lt;/asp:ListItem&gt;</span><br><span class="line">                   &lt;asp:ListItem&gt;RunStatus&lt;/asp:ListItem&gt;</span><br><span class="line">                   &lt;asp:ListItem&gt;ErrorInfo&lt;/asp:ListItem&gt;</span><br><span class="line">               &lt;/asp:DropDownList&gt;</span><br><span class="line">              &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">              搜索关键字:</span><br><span class="line"></span><br><span class="line">               &lt;asp:TextBox ID=<span class="string">&quot;txtSKWord&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;164px&quot;</span> Text=<span class="string">&quot;软件关闭&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line"></span><br><span class="line">               &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"></span><br><span class="line">               &lt;asp:Button ID=<span class="string">&quot;btnSearch&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;搜索&quot;</span> Width=<span class="string">&quot;95px&quot;</span> OnClick=<span class="string">&quot;btnSearch_Click&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">           &lt;/p&gt;</span><br><span class="line">          </span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                搜索结果:</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">                &lt;asp:DataList ID=<span class="string">&quot;dllInfo&quot;</span> runat=<span class="string">&quot;server&quot;</span> CellPadding=<span class="string">&quot;4&quot;</span> ForeColor=<span class="string">&quot;#333333&quot;</span> Width=<span class="string">&quot;760px&quot;</span>&gt;</span><br><span class="line">                    &lt;AlternatingItemStyle BackColor=<span class="string">&quot;White&quot;</span> /&gt;</span><br><span class="line">                    &lt;FooterStyle BackColor=<span class="string">&quot;#507CD1&quot;</span> Font-Bold=<span class="string">&quot;True&quot;</span> ForeColor=<span class="string">&quot;White&quot;</span> /&gt;</span><br><span class="line">                    &lt;HeaderStyle BackColor=<span class="string">&quot;#507CD1&quot;</span> Font-Bold=<span class="string">&quot;True&quot;</span> ForeColor=<span class="string">&quot;White&quot;</span> /&gt;</span><br><span class="line">                    &lt;ItemStyle BackColor=<span class="string">&quot;#EFF3FB&quot;</span> /&gt;</span><br><span class="line">                    &lt;ItemTemplate&gt;</span><br><span class="line">                        &lt;asp:Label ID=<span class="string">&quot;Label24&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;信息ID:&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                         &lt;asp:Label ID=<span class="string">&quot;labInfoID&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&#x27;&lt;%# DataBinder.Eval(Container.DataItem,&quot;ID&quot;) %&gt; &#x27;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                          &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                         &lt;asp:Label ID=<span class="string">&quot;Label25&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;信息名称:&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                         &lt;asp:Label ID=<span class="string">&quot;labInfoName&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&#x27;&lt;%# DataBinder.Eval(Container.DataItem,&quot;ModuleCode&quot;) %&gt; &#x27;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                         &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                         &lt;asp:Label ID=<span class="string">&quot;Label26&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;信息类别:&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                         &lt;asp:Label ID=<span class="string">&quot;labInfoType&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&#x27;&lt;%# DataBinder.Eval(Container.DataItem,&quot;ErrorCode&quot;) %&gt; &#x27;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                        &lt;p&gt;</span><br><span class="line">                            信息内容:</span><br><span class="line">                            &lt;/p&gt;</span><br><span class="line">                         &lt;p&gt;</span><br><span class="line">                            &lt;asp:Label ID=<span class="string">&quot;labInfoContent&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&#x27;&lt;%# DataBinder.Eval(Container.DataItem,&quot;ErrorInfo&quot;) %&gt; &#x27;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                            &lt;/p&gt;</span><br><span class="line">                    &lt;/ItemTemplate&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;SelectedItemStyle BackColor=<span class="string">&quot;#D1DDF1&quot;</span> Font-Bold=<span class="string">&quot;True&quot;</span> ForeColor=<span class="string">&quot;#333333&quot;</span> /&gt;</span><br><span class="line">                &lt;/asp:DataList&gt;</span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">               </span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">               </span><br><span class="line">                </span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">           &lt;p&gt;</span><br><span class="line">                </span><br><span class="line">              当前页码为:</span><br><span class="line">                </span><br><span class="line">               </span><br><span class="line">                </span><br><span class="line">                &lt;asp:Label ID=<span class="string">&quot;labPage&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;1&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                </span><br><span class="line">               </span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                </span><br><span class="line">               </span><br><span class="line">                总页码为:</span><br><span class="line"></span><br><span class="line">                &lt;asp:Label ID=<span class="string">&quot;labBackPage&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;5&quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line"></span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"></span><br><span class="line">                &lt;asp:LinkButton ID=<span class="string">&quot;InkbtnOne&quot;</span> Text=<span class="string">&quot;第一页&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;&lt;/asp:LinkButton&gt; </span><br><span class="line">               &amp;nbsp;&amp;nbsp;&amp;nbsp; </span><br><span class="line">               &lt;asp:LinkButton ID=<span class="string">&quot;InkbtnUp&quot;</span> Text=<span class="string">&quot;上一页&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;&lt;/asp:LinkButton&gt;</span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">               &lt;asp:LinkButton ID=<span class="string">&quot;InkbtnNext&quot;</span> Text=<span class="string">&quot;下一页&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;&lt;/asp:LinkButton&gt;</span><br><span class="line"></span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;asp:LinkButton ID=<span class="string">&quot;InkbtnBack&quot;</span> Text=<span class="string">&quot;最后一页&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;&lt;/asp:LinkButton&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line">protected void btnSearch_Click(object sender, EventArgs e)</span><br><span class="line">   &#123;</span><br><span class="line">       this.dllInfoBind();</span><br><span class="line">   &#125;</span><br><span class="line">   SqlConnection sqlconn;</span><br><span class="line">   public void dllDataBind(string sqlstr, string table, string dkf,int psize)</span><br><span class="line">   &#123;</span><br><span class="line">       int curpage = Convert.ToInt32(this.labPage.Text);</span><br><span class="line">       PagedDataSource ps = new PagedDataSource();</span><br><span class="line">       <span class="keyword">if</span> (sqlconn.State==ConnectionState.Closed)</span><br><span class="line">       &#123;</span><br><span class="line">           sqlconn.Open();</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">       SqlDataAdapter MyAdapter= new SqlDataAdapter(sqlstr,sqlconn);</span><br><span class="line">       DataSet ds=new DataSet();</span><br><span class="line">       MyAdapter.Fill(ds,table);</span><br><span class="line">       ps.DataSource = ds.Tables[table].DefaultView;</span><br><span class="line">       ps.AllowPaging= <span class="literal">false</span>;//是否可以分页</span><br><span class="line">       ps.PageSize = ps.PageCount;//显示的数量</span><br><span class="line">       ps.CurrentPageIndex= curpage-1;//取得当前页的页码</span><br><span class="line">       this.InkbtnUp.Enabled = <span class="literal">true</span>;</span><br><span class="line">       this.InkbtnOne.Enabled = <span class="literal">true</span>;</span><br><span class="line">       this.InkbtnNext.Enabled = <span class="literal">true</span>;</span><br><span class="line">       this.InkbtnBack.Enabled = <span class="literal">true</span>;</span><br><span class="line">       <span class="keyword">if</span> (curpage==1)</span><br><span class="line">       &#123;</span><br><span class="line">           this.InkbtnOne.Enabled = <span class="literal">false</span>;//不显示第一页按钮</span><br><span class="line">           this.InkbtnUp.Enabled= <span class="literal">false</span>;//不显示上一页按钮</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (curpage==ps.PageCount)</span><br><span class="line">       &#123;</span><br><span class="line">           this.InkbtnNext.Enabled = <span class="literal">false</span>;//不显示下一页按钮</span><br><span class="line">           this.InkbtnBack.Enabled= <span class="literal">false</span>;//不显示最后一页按钮</span><br><span class="line">       &#125;</span><br><span class="line">       this.labBackPage.Text=Convert.ToString(ps.PageCount);</span><br><span class="line">       this.dllInfo.DataSource= ps;</span><br><span class="line">       this.dllInfo.DataKeyField = dkf;</span><br><span class="line">       this.dllInfo.DataBind();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   public void <span class="function"><span class="title">dllInfoBind</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">           string sqlstr = $<span class="string">&quot;SELECT * FROM [ZHH].[dbo].[OEE_DT] where &#123;ddlInfoType.SelectedValue.Trim()&#125; like &#x27;%&#123;txtSKWord.Text.Trim()&#125;%&#x27;&quot;</span>;</span><br><span class="line">       sqlconn = new SqlConnection(<span class="string">&quot;Data Source=localhost;Initial Catalog=ZHH;Integrated Security=True&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span> (sqlconn.State==ConnectionState.Closed)</span><br><span class="line">           &#123;</span><br><span class="line">               sqlconn.Open();</span><br><span class="line">           &#125;</span><br><span class="line">           SqlCommand <span class="built_in">comm</span>=new SqlCommand(sqlstr, sqlconn);</span><br><span class="line">           DataSet ds=new DataSet();</span><br><span class="line">           SqlDataReader dr=comm.ExecuteReader();</span><br><span class="line">           <span class="keyword">if</span> (!dr.Read())</span><br><span class="line">           &#123;</span><br><span class="line">           dr.Close();</span><br><span class="line">           Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;没有你要查询的结果,请重新输入&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">               dllInfo.Visible = <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">           dr.Close();</span><br><span class="line">               this.dllDataBind(sqlstr, <span class="string">&quot;OEE_DT&quot;</span>,<span class="string">&quot;ID&quot;</span>,5);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>秘笈心法<br>运算符<br>&lt;&gt;不等于<br>!&gt; 不大于<br>页面定时刷新后跳转到其他页<br>可以在<head></head>中利用meta标签来定义.例如,页面停留5秒后自动刷新到URL网址<Meta http-equiv="Refresh" Content="5;Url=http://www.xia8.net">如何锁定Application对象由于Application对象属于网站的全局变量,因此经常会出现多人同时访问和修改对象的情况.为了避免两个会话同时修改Application对象,需要在修改前锁定Application对象,修改后再解锁Application对象.Application都西昂可以使用Lock方法实现加锁功能,j使用UnLock方法实现解锁功能.</li></ul><p>026.常用搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;26.常用搜索&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">              查询条件:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">              </span><br><span class="line">                &lt;asp:DropDownList ID=<span class="string">&quot;DropDownList1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;158px&quot;</span>&gt;</span><br><span class="line">                    &lt;asp:ListItem&gt;ErrorCode&lt;/asp:ListItem&gt;</span><br><span class="line">                    &lt;asp:ListItem&gt;RunStatus&lt;/asp:ListItem&gt;</span><br><span class="line">                    &lt;asp:ListItem&gt;ErrorInfo&lt;/asp:ListItem&gt;</span><br><span class="line">                &lt;/asp:DropDownList&gt;</span><br><span class="line">               &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">               搜索关键字:</span><br><span class="line"></span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox21&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;164px&quot;</span> Text=<span class="string">&quot;软件关闭&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line"></span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"></span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button20&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;搜索&quot;</span> Width=<span class="string">&quot;95px&quot;</span> OnClick=<span class="string">&quot;ComSearch_Click&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 搜索结果:</span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">             &lt;asp:GridView ID=<span class="string">&quot;gvGoodsInfo&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;722px&quot;</span>&gt;</span><br><span class="line">             &lt;/asp:GridView&gt;</span><br><span class="line">          </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">protected void ComSearch_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TextBox21.Text==<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            string sqlstr = <span class="string">&quot;SELECT * FROM [ZHH].[dbo].[OEE_DT]&quot;</span>;</span><br><span class="line">            gvDataBind(gvGoodsInfo, sqlstr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            string sqlstr = $<span class="string">&quot;SELECT * FROM [ZHH].[dbo].[OEE_DT] where &#123;DropDownList1.SelectedValue.Trim()&#125; like &#x27;%&#123;TextBox21.Text.Trim()&#125;%&#x27;&quot;</span>;</span><br><span class="line">            gvDataBind(gvGoodsInfo, sqlstr);</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void gvDataBind(GridView gvGoodsInfo, string sqlstr)</span><br><span class="line">    &#123;</span><br><span class="line">        sqlconn = new SqlConnection(<span class="string">&quot;Data Source=localhost;Initial Catalog=ZHH;Integrated Security=True&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (sqlconn.State==ConnectionState.Closed)</span><br><span class="line">        &#123;</span><br><span class="line">            sqlconn.Open();</span><br><span class="line">        &#125;</span><br><span class="line">        SqlDataAdapter myda = new SqlDataAdapter(sqlstr,sqlconn);</span><br><span class="line">        DataSet ds = new DataSet();</span><br><span class="line">        myda.Fill(ds);</span><br><span class="line">        gvGoodsInfo.DataSource = ds;</span><br><span class="line">        gvGoodsInfo.DataBind();</span><br><span class="line">        sqlconn.Close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>如何删除Application变量内容<br>由于Application对象长期占用服务器资源,因此应及时清理无用的Application变量;例如,在本秘笈心法中,将保存在Application对象中名为”小明”的变量删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">protected void Page_Load(object sender,EventArgs e)&#123;</span><br><span class="line">Application.Add(<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;小强&quot;</span>);</span><br><span class="line">Application.Add(<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">Application.RemoveAt(1); //删除姓名为<span class="string">&quot;小明&quot;</span>的Application变量</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;Applicaiton.Count;i++)&#123;</span><br><span class="line">Response.Write(<span class="string">&quot;姓名:&quot;</span>+Application[i]+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Application.Clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>027.在自己的网站中加入百度和Goole搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">     &lt;form action=<span class="string">&quot;https://www.baidu.com/s&quot;</span> target=<span class="string">&quot;_blank&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">         &lt;table bgcolor=<span class="string">&quot;#FFFFFF&quot;</span> border=<span class="string">&quot;0&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span> style=<span class="string">&quot;width:755px;height:59px;text-align:center&quot;</span>&gt;</span><br><span class="line">             &lt;<span class="built_in">tr</span>&gt;&lt;td&gt;</span><br><span class="line">                 &lt;a href=<span class="string">&quot;https://www.baidu.com/s?wd=%E7%99%BE%E5%BA%A6%E7%83%AD%E6%90%9C&amp;sa=ire_dl_gh_logo_texing&amp;rsv_dl=igh_logo_pcs&quot;</span>&gt;</span><br><span class="line">                 &lt;img src=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span> border=<span class="string">&quot;0&quot;</span> alt=<span class="string">&quot;Google&quot;</span></span><br><span class="line">                     align=<span class="string">&quot;absmiddle&quot;</span>/&gt;</span><br><span class="line">                 &lt;/a&gt;</span><br><span class="line">                 &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;wd&quot;</span> size=<span class="string">&quot;31&quot;</span> maxlength=<span class="string">&quot;255&quot;</span> value=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">                 &lt;input <span class="built_in">type</span>=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;ie&quot;</span> value=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">                  &lt;input <span class="built_in">type</span>=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;f&quot;</span> value=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">               </span><br><span class="line">                 &lt;input <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;btnG&quot;</span> value=<span class="string">&quot;百度一下&quot;</span>/&gt;</span><br><span class="line">                 &lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">             &lt;/table&gt;</span><br><span class="line">         &lt;/form&gt;</span><br><span class="line">        &lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.UI;</span><br><span class="line">using System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line">public partial class BaiduSearch : Page</span><br><span class="line">&#123;</span><br><span class="line">    protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Site.master</span><br><span class="line">&lt;li&gt;&lt;a runat=<span class="string">&quot;server&quot;</span> href=<span class="string">&quot;~/BaiduSearch&quot;</span>&gt;搜索&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>使用ViewState对象在同一个页面传值<br>ViewState对象用于在同一个页面内保存和还原状态信息.首先使用ViewState对象保存用户名mr,<br>例如:<br>ViewState[“UserName”]=”mr”;<br>然后将保存在ViewState的值赋给Label控件<br>this.Label1.Text=ViewState[“UserName”].ToString();<br>028.搜索引擎中智能匹配检索功能<br>关键技术<br>本实例的核心技术是通过Asp.NetAjaxControl Tookit中的AutoCompleteExtender控件实现的,AutoCompleteExtender控件实现自动输入功能,通过调用WebService或本页面对应的方法来获取提示数据,使用户能达到自动选择的功能<br>AutoCompleteExtender控件的主要属性及说明<br>TargetControlID    指定将被辅助完成自动输入的控件ID,这里的控件只能是TextBox.<br>ServicePath    指出提供服务的web服务路径,若不指出则ServiceMethod表示本页面对应的方法名<br>ServiceMethod    指出提供服务的方法名,例如,public string[] Method(string prefixText,int count),其中参数prefixText是用户输入的关键字,参数count是所需要获取提示数据的数量,两个参数都会自动传给WebService的ServiceMethod方法,返回值是用户所获的提示数据的来源数组<br>MinimumPrefixLength    指出开始提供提示服务时,TextBox控件应有的最小字符数,默认值为3<br>CompletionInterval        从服务器读取数据的时间间隔,默认为1000,单位为ms<br>EnableCaching    是否在客户端缓存数据,默认为true<br>CompletionSetCount    显示的条数,默认值为10<br>设计过程<br>新建一个Ajax网站,在Default.aspx页中主要添加一个ScriptManager控件,用于管理web页面中的Ajax控件,添加一个AutoCompleteExtender控件,用于实现自动完成功能,添加一个TextBox控件,用于接收输入检索关键字.<br>2.创建一个web服务,将其命名为KeyFind.asmx.该服务主要用于完成智能检索功能.在KeyFind.asmx web服务的keyFind.cs文件下实现如下代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Data.OleDb;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.Services;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// KeyFind 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">[WebService(Namespace = <span class="string">&quot;http://tempuri.org/&quot;</span>)]</span><br><span class="line">[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]</span><br><span class="line">// 若要允许使用 ASP.NET AJAX 从脚本中调用此 Web 服务，请取消注释以下行。 </span><br><span class="line"> [System.Web.Script.Services.ScriptService]</span><br><span class="line">public class KeyFind : System.Web.Services.WebService</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">KeyFind</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        //如果使用设计的组件，请取消注释以下行 </span><br><span class="line">        //InitializeComponent(); </span><br><span class="line">    &#125;</span><br><span class="line">    private string[] autoCompleteWordList = null;</span><br><span class="line">    //参数prefixText表示用户输入的前缀,count表示返回的个数</span><br><span class="line">    [WebMethod]</span><br><span class="line">    public string[] GetCompleteDepart(string prefixText, int count)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (string.IsNullOrEmpty(prefixText) == <span class="literal">true</span> || count &lt;= 0) <span class="built_in">return</span> null;</span><br><span class="line">        <span class="keyword">if</span> (autoCompleteWordList==null)</span><br><span class="line">        &#123;</span><br><span class="line">             SqlConnection conn = new SqlConnection(@<span class="string">&quot;Data Source=localhost;Initial Catalog=ZHH;Integrated Security=True&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (conn.State == ConnectionState.Closed)</span><br><span class="line">            &#123;</span><br><span class="line">                conn.Open();</span><br><span class="line">            &#125;</span><br><span class="line">            SqlDataAdapter da = new SqlDataAdapter(<span class="string">&quot;SELECT *  FROM [ZHH].[dbo].[OEE_DT] where ErrorInfo like &#x27;%&quot;</span>+prefixText+<span class="string">&quot;%&#x27; order by Datetime&quot;</span>,conn);</span><br><span class="line">            DataSet ds=new DataSet();</span><br><span class="line">            da.Fill(ds);</span><br><span class="line">            string[] temp = new string[ds.Tables[0].Rows.Count];</span><br><span class="line">            int i = 0;</span><br><span class="line">            foreach (DataRow dr <span class="keyword">in</span> ds.Tables[0].Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                temp[i] = dr[<span class="string">&quot;ErrorInfo&quot;</span>].ToString();</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            Array.Sort(temp,new CaseInsensitiveComparer());</span><br><span class="line">            autoCompleteWordList = temp;//将临时数组的内容赋给返回数组</span><br><span class="line">            <span class="keyword">if</span> (conn.State==ConnectionState.Open)</span><br><span class="line">            &#123;</span><br><span class="line">                conn.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //定义二叉树搜索的起点</span><br><span class="line">        int index=Array.BinarySearch(autoCompleteWordList, prefixText,new CaseInsensitiveComparer());</span><br><span class="line">        <span class="keyword">if</span> (index&lt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            index = -index;//修正起点</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int matchCount = 0;//搜索符合条件的数据</span><br><span class="line">        <span class="keyword">for</span> (matchCount = 0; matchCount &lt; count&amp;&amp; matchCount+index&lt;autoCompleteWordList.Length;matchCount++)</span><br><span class="line">        &#123;//查看开头字符串相同的项</span><br><span class="line">            <span class="keyword">if</span> (autoCompleteWordList[index+matchCount].StartsWith(prefixText,StringComparison.CurrentCultureIgnoreCase)==<span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        string[] matchResultList= new string[matchCount];//处理搜索结果</span><br><span class="line">        <span class="keyword">if</span> (matchCount&gt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            Array.Copy(autoCompleteWordList,index,matchResultList,0,matchCount);//复制搜索结果</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> matchResultList;</span><br><span class="line">    &#125;</span><br><span class="line">    [WebMethod]</span><br><span class="line">    public string <span class="function"><span class="title">HelloWorld</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> &lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;28.搜索引擎中智能匹配检索功能</span><br><span class="line">            &lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">            </span><br><span class="line">                 &lt;asp:TextBox ID=<span class="string">&quot;TextBox22&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;300px&quot;</span> Height=<span class="string">&quot;24px&quot;</span> Text=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">                    </span><br><span class="line">                 &lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;ajaxToolkit:AutoCompleteExtender ID=<span class="string">&quot;AutoCompleteExtender1&quot;</span> runat=<span class="string">&quot;server&quot;</span> TargetControlID=<span class="string">&quot;TextBox22&quot;</span> ServicePath=<span class="string">&quot;KeyFind.asmx&quot;</span> CompletionSetCount=<span class="string">&quot;10&quot;</span> MinimumPrefixLength=<span class="string">&quot;1&quot;</span> ServiceMethod=<span class="string">&quot;GetCompleteDepart&quot;</span>&gt;</span><br><span class="line">                &lt;/ajaxToolkit:AutoCompleteExtender&gt;</span><br><span class="line">                </span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"></span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button21&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;搜索&quot;</span> Width=<span class="string">&quot;95px&quot;</span> OnClick=<span class="string">&quot;Search28_Click&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">               </span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">           </span><br><span class="line">           </span><br><span class="line">          </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>格式化输入数据为货币格式<br>主要用NumberFormatInfo类的CurrencyGroupSeparator属性格式化输入数据为货币格式.<br>CurrencyGrounpSeparator属性获取或设置在货币值中对小数点左边数字进行分组的字符串.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-4&quot;</span>&gt;</span><br><span class="line">            &lt;h2&gt;28.格式化输入数据为货币格式&lt;/h2&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label27&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 输入的数字: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">             </span><br><span class="line">                 &lt;asp:TextBox ID=<span class="string">&quot;TextBox23&quot;</span> Text=<span class="string">&quot;&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;215px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label28&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; 格式化货币: &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">               </span><br><span class="line">                  &lt;asp:TextBox ID=<span class="string">&quot;TextBox24&quot;</span> Text=<span class="string">&quot;&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;242px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">             </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                &lt;asp:Button ID=<span class="string">&quot;Button22&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button22_Click&quot;</span> Text=<span class="string">&quot;格式化货币&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;asp:Label ID=<span class="string">&quot;Label29&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot; &quot;</span>&gt;&lt;/asp:Label&gt;</span><br><span class="line">                 </span><br><span class="line">                 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">private void Button22_Click(object sender,EventArgs e)&#123;</span><br><span class="line">NumberFormatInfo nfi=new CultureInfo(<span class="string">&quot;zh-CN&quot;</span>,<span class="literal">false</span>).NumberFormat;</span><br><span class="line">nfi.CurrencyGroupSeparator=<span class="string">&quot;&quot;</span>;</span><br><span class="line">textBox24.Text=Convert.ToDouble(textBox23.text).Tostring(<span class="string">&quot;c&quot;</span>,nfi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 1.3.思维扩展的常用算法<br>029.链表算法——单向链表<br>链表是一种重要的数据结构,该结构由节点构成,每个节点包含两部分数据,第一部分是节点本身的数据,第二部分是指向下一个节点的指针,对于单向链表,链表中存在两个特殊的节点,分别为头节点和尾节点,头节点本身没有数据,只存储下一个节点的指针,尾节点只存储数据.<br>head    5471    4512    5674    8778<br>5471    数据4512    数据5674    数据8778    数据Null<br>本实例中为了描述节点,设计了一个节点类,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class ListNode</span><br><span class="line">&#123;</span><br><span class="line">    public ListNode(int NewValue)</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">        // TODO: 在此处添加构造函数逻辑</span><br><span class="line">        //</span><br><span class="line">        Value = NewValue;</span><br><span class="line">    &#125;</span><br><span class="line">    public ListNode Previous;//前一个</span><br><span class="line">    public ListNode Next;//后一个</span><br><span class="line">    public int Value;//值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中,私有成员Value用于存储节点本身的数据,Next用于存储下一个节点的指针,Previous用于存储上一个节点的指针,对于链表的操作,无非是进行节点的查找,插入和删除.<br>1.查找节点<br>在进行节点查找时,通常根据节点的数据查找节点.要实现节点的查找,首先需要解决的问题就是遍历链表中的所有节点,可以从链表头节点开始,利用循环的方式向下查找,如果当前节点指向的下一个节点不为空,则将下一个节点设置为当前节点.<br>2.插入节点<br>插入节点需要考虑两种情况:第一种情况是在链表尾节点插入节点,这种情况比较简单,只要将当前尾节点的Next(指向下一个节点的指针)指向新插入的节点即可.第二种情况是在链表的中间位置插入节点.首先需要确定在哪个节点后插入新的节点.这就需要由用户来确定,本实例中为了演示的需要,笔者将树视图控件中的当前选项设置尾当前节点,然后需要记录当前节点的下一个节点(避免发生”脱节”),可以定义一个临时的节点进行记录,将当前节点的下一个节点指向新添加的节点,再将新添加节点的下一个节点指向临时节点<br>3.删除节点<br>删除节点与插入节点类似,也需要考虑两种情况,第一种情况是删除尾节点,这种情况操作相对比较简单,首先找到尾节点之前的一个节点,将该节点指向的下一个节点设置为空,然后释放尾节点资源,第二种情况是删除链表中间部分的节点,首先需要找到当前节点的上一个节点,并定义一个临时节点PriorNode进行记录,然后再定义一个临时节点TempNode记录当前节点的下一个节点,最后将PriorNode的下一个节点指向TempNode,并释放当前节点<br>设计过程<br>1.创建一个类库,将其命名为UnilateralismChainTable,默认类名为Class1.<br>2.将Class1.cs文件重命名为Clist.cs<br>3.定义节点之后,开始类线性表的操作编程,在List类中,采用了Head,Tail,Current3个指针,使用Append,MoveFirst,MovePrevious,MoveNext,MoveLast,Delete,InsertAscending,Clear实现移动,添加,删除,升序插入,降序插入,清空链表操作,并用GetCurrentValue方法取得当前的值.<br>在构造函数中初始化,并定义指针变量,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class Clist &#123; </span><br><span class="line">        public <span class="function"><span class="title">Clist</span></span>() &#123;</span><br><span class="line">            ListCountValue = 0;</span><br><span class="line">            Head = null;</span><br><span class="line">            Tail = null;</span><br><span class="line">        &#125;</span><br><span class="line">        private ListNode Head;//头指针</span><br><span class="line">        private ListNode Tail;//尾指针</span><br><span class="line">        private ListNode Current;//当前指针</span><br><span class="line">        private int ListCountValue;//链表数据的个数</span><br><span class="line">        <span class="comment">#region 尾部添加数据</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        //尾部添加数据</span><br><span class="line">        public void Append(int DataValue) &#123;</span><br><span class="line">            ListNode NewNode = new ListNode(DataValue);</span><br><span class="line">            <span class="keyword">if</span> (IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Head = NewNode; </span><br><span class="line">                Tail=NewNode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Tail.Next = NewNode;</span><br><span class="line">                NewNode.Previois = Tail;</span><br><span class="line">                Tail = NewNode;</span><br><span class="line">            &#125;</span><br><span class="line">            Current = NewNode;</span><br><span class="line">            ListCountValue += 1;//链表数据个数加1</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 删除数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 删除当前数据的代码</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">Delete</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsNull())//若为空链表</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (IsBof())//若删除头</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = Current.Next;</span><br><span class="line">                    Current = Head;</span><br><span class="line">                    ListCountValue-= 1;</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof())//若删除尾</span><br><span class="line">                &#123;</span><br><span class="line">                    Tail = Current.Previois;</span><br><span class="line">                    Current = Tail;</span><br><span class="line">                    ListCountValue-= 1;</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Current.Previois.Next = Current.Next;//若删除中间数据</span><br><span class="line">                Current = Current.Previois;</span><br><span class="line">                ListCountValue-= 1;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 移动数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向后移动一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveNext</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsEof()) Current = Current.Next;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向前移动一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MovePrevious</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsBof()) Current = Current.Previois;</span><br><span class="line">        &#125;</span><br><span class="line">        //移动到第一个数据</span><br><span class="line">        public void <span class="function"><span class="title">MoveFirst</span></span>() &#123;</span><br><span class="line">            Current = Head;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 移动到最后一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveLast</span></span>() &#123;</span><br><span class="line">            Current = Tail;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否为空链表</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsNull</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListCountValue == 0)</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否到达尾部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsEof</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Current==Tail)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否为到达头部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsBof</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Current==Head)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 获取节点值</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public int <span class="function"><span class="title">GetCurrentValue</span></span>() &#123;</span><br><span class="line">            <span class="built_in">return</span> Current.Value;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 取得链表的数据个数</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public int ListCount</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> ListCountValue; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ///清空链表</span><br><span class="line">        public void <span class="function"><span class="title">Clear</span></span>() &#123; </span><br><span class="line">            MoveFirst();</span><br><span class="line">            <span class="keyword">while</span> (!IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Delete();//若不为空链表,从尾部删除</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 在当前位置前插入数据</span></span><br><span class="line">        public void Insert(int DataValue) &#123; </span><br><span class="line">            ListNode NewNode=new ListNode(DataValue);</span><br><span class="line">            <span class="keyword">if</span> (IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Append(DataValue);//为空表,则添加</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (IsBof())</span><br><span class="line">            &#123;</span><br><span class="line">                //为头部插入</span><br><span class="line">                NewNode.Next = Head;</span><br><span class="line">                Head.Previois = NewNode;</span><br><span class="line">                Head = NewNode;</span><br><span class="line">                Current = Head;</span><br><span class="line">                ListCountValue += 1;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            //中间插入</span><br><span class="line">            NewNode.Next = Current;</span><br><span class="line">            NewNode.Previois = Current.Previois;</span><br><span class="line">            Current.Previois.Next = NewNode;</span><br><span class="line">            Current.Previois = NewNode;</span><br><span class="line">            Current = NewNode;</span><br><span class="line">            ListCountValue += 1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 升序插入</span></span><br><span class="line">        public void InsertAscending(int InsertValue)</span><br><span class="line">        &#123;</span><br><span class="line">            //参数:InsertValue 插入的数据</span><br><span class="line">            <span class="keyword">if</span> (IsNull())   //为空链表</span><br><span class="line">            &#123;</span><br><span class="line">                Append(InsertValue);    //添加</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            MoveFirst();    //移动到头部</span><br><span class="line">            <span class="keyword">if</span> (InsertValue &lt; GetCurrentValue()) &#123;</span><br><span class="line">                Insert(InsertValue);    //满足条件,则插入,退出</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (InsertValue&lt;GetCurrentValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    Insert(InsertValue);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof())</span><br><span class="line">                &#123;</span><br><span class="line">                    Append(InsertValue);//尾部添加</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                MoveNext();//移动到下一个指针</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 进行降序插入</span></span><br><span class="line">        public void InsertUnAscending(int InsertValue) &#123;</span><br><span class="line">            //参数:InsertValue 插入的数据</span><br><span class="line">            <span class="keyword">if</span> (IsNull())       //为空链表</span><br><span class="line">            &#123;</span><br><span class="line">                Append(InsertValue);//添加</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            MoveFirst();    //移动到头部</span><br><span class="line">            <span class="keyword">if</span> (InsertValue&gt;GetCurrentValue())</span><br><span class="line">            &#123;</span><br><span class="line">                Insert(InsertValue);    //满足条件,则插入,退出</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (InsertValue&gt;GetCurrentValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    Insert(InsertValue);    //满足条件,则插入,退出</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof()) &#123;</span><br><span class="line">                    Append(InsertValue);    //尾部添加</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                MoveNext(); //移动到下一个指针</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>“凯撒”密码的算法.在该算法中,单词的每一个字母都被字母表中与该字母相隔的4个字母的下一个字母替换,例如Abyz变成了Fgde.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Web;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// CaesarHelper 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class CaesarHelper</span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    public string Caesar(string str)</span><br><span class="line">    &#123;</span><br><span class="line">        int spaceNum = 5;</span><br><span class="line">        char[] c = str.ToCharArray();</span><br><span class="line">        string strCaesar = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; str.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            string ins = c[i].ToString();</span><br><span class="line">            string outs = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            bool isChar=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>.Contains(ins.ToLower());</span><br><span class="line">            bool isToUpperChar = isChar &amp;&amp; (ins.ToUpper()==ins);</span><br><span class="line">            ins=ins.ToLower();</span><br><span class="line">            <span class="keyword">if</span> (isChar)</span><br><span class="line">            &#123;</span><br><span class="line">                int offset = (ASCII(ins) + spaceNum - ASCII(<span class="string">&quot;a&quot;</span>))%(ASCII(<span class="string">&quot;z&quot;</span>) - ASCII(<span class="string">&quot;a&quot;</span>)+1);</span><br><span class="line">                outs = Convert.ToChar(offset+ASCII(<span class="string">&quot;a&quot;</span>)).ToString();</span><br><span class="line">                <span class="keyword">if</span> (isToUpperChar)</span><br><span class="line">                &#123;</span><br><span class="line">                    outs = outs.ToUpper();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                outs = ins;</span><br><span class="line">                strCaesar += outs;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> strCaesar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int ASCII(string ins)</span><br><span class="line">    &#123;</span><br><span class="line">        byte[] array = new byte[1];</span><br><span class="line">        array = Encoding.ASCII.GetBytes(ins);</span><br><span class="line">        int asciicode = (short)(array[0]);</span><br><span class="line">        <span class="built_in">return</span> asciicode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>030.链表算法—双向链表<br>实例说明<br>在单向链表的存储机构中,只有一个指示直接后继的指针域,因此从某个节点出发只能顺指针往后查询其他节点,若要查询节点的直接前驱,则需要从表头指针出发,为了克服单链表这种单向性的缺点,可以使用双向链表,在双向链表的节点中有两个指针域,一个指向直接前驱,另一个指向直接后继<br>关键技术<br>双向链表在删除节点时,不但要修改节点的直接后继指针,还要同时修改节点的直接前驱指针,在插入时更是要修改插入节点的前驱和后继的两个方向上的指针.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class Clists</span><br><span class="line">    &#123;</span><br><span class="line">        private string clistName = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">Clists</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 表名</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public string ClistName &#123; get =&gt; clistName; <span class="built_in">set</span> =&gt; clistName = value; &#125;</span><br><span class="line">        private DoubleListNode Head;//头指针</span><br><span class="line">        private DoubleListNode Tail;//尾指针</span><br><span class="line">        private DoubleListNode Current;//当前指针</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        public DoubleListNode current &#123; get =&gt; Current; <span class="built_in">set</span> =&gt; Current = value; &#125;</span><br><span class="line">        private int ListCountValue;//链表数据的个数</span><br><span class="line">        <span class="comment">#region 尾部添加数据</span></span><br><span class="line">        public void Append(DoubleLink DataValue) &#123;</span><br><span class="line">            DoubleListNode NewNode = new DoubleListNode(DataValue);</span><br><span class="line">            <span class="keyword">if</span> (IsNull())   //如果头指针为空</span><br><span class="line">            &#123;</span><br><span class="line">                Head= NewNode;</span><br><span class="line">                Tail = NewNode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Tail.Next = NewNode;</span><br><span class="line">                NewNode.Previous = Tail;</span><br><span class="line">                Tail= NewNode;</span><br><span class="line">            &#125;</span><br><span class="line">            Current= NewNode;</span><br><span class="line">            ListCountValue += 1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 删除当前数据</span></span><br><span class="line">        public void <span class="function"><span class="title">Delete</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsNull())  //若为空链表</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (IsBof())  //若删除头部</span><br><span class="line">                &#123;</span><br><span class="line">                    Head = Current.Next;</span><br><span class="line">                    Current = Head;</span><br><span class="line">                    ListCountValue-= 1;</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof())    //若删除尾部</span><br><span class="line">                &#123;</span><br><span class="line">                    Tail = Current.Previous;</span><br><span class="line">                    Tail.Next = null;</span><br><span class="line">                    Current = Tail;</span><br><span class="line">                    ListCountValue -= 1;</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Current.Previous.Next = Current.Next;</span><br><span class="line">                Current=Current.Previous;</span><br><span class="line">                ListCountValue -= 1;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向后移动一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveNext</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsEof()) Current = Current.Next;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向前移动一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MovePrevious</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span> (!IsBof()) Current = Current.Previous;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 移动到第一个数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveFirst</span></span>() &#123;</span><br><span class="line">            Current = Head;</span><br><span class="line">        &#125;</span><br><span class="line">        public void <span class="function"><span class="title">MoveLast</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            Current = Tail;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否到达尾部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsEof</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Current == Tail)</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否到达头部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsBof</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Current == Head)</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        private bool <span class="function"><span class="title">IsNull</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListCountValue == 0)</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        public DoubleLink <span class="function"><span class="title">GetCurrentValue</span></span>() &#123;</span><br><span class="line">            <span class="built_in">return</span> Current.Goods;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 取得链表的数据个数</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public int ListCount &#123;</span><br><span class="line">            get </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> ListCountValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        public void <span class="function"><span class="title">Clear</span></span>() &#123; </span><br><span class="line">            MoveFirst();</span><br><span class="line">            <span class="keyword">while</span> (!IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Delete();//若不为空,从尾部删除</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在当前位置插入数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;DataValue&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void Insert(DoubleLink DataValue) &#123;</span><br><span class="line">            DoubleListNode NewNode = new DoubleListNode(DataValue);</span><br><span class="line">            <span class="keyword">if</span> (IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Append(DataValue);  //为空表,则添加</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (IsBof()) &#123;</span><br><span class="line">                ///为头部插入</span><br><span class="line">                NewNode.Next = Head;</span><br><span class="line">                Head.Previous = NewNode;</span><br><span class="line">                Head = NewNode;</span><br><span class="line">                Current = Head;</span><br><span class="line">                ListCountValue += 1;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            NewNode.Next = Current;</span><br><span class="line">            NewNode.Previois = Current.Previous;//中间插入</span><br><span class="line">            Current.Previous.Next = NewNode;</span><br><span class="line">            Current.Previous = NewNode;</span><br><span class="line">            Current = NewNode;</span><br><span class="line">            ListCountValue+= 1;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 升序插入</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;InsertValue&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void InsertAscending(DoubleLink InsertValue) &#123;</span><br><span class="line">            <span class="keyword">if</span> (IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Append(InsertValue);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            MoveFirst();    //移动到头部</span><br><span class="line">            <span class="keyword">if</span> (InsertValue.Number&lt;GetCurrentValue().Number)</span><br><span class="line">            &#123;</span><br><span class="line">                Insert(InsertValue);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (InsertValue.Number&lt;GetCurrentValue().Number)</span><br><span class="line">                &#123;</span><br><span class="line">                    Insert(InsertValue);//满足条件则插入退出</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof())</span><br><span class="line">                &#123;</span><br><span class="line">                    Append(InsertValue);//尾部添加</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                MoveNext();//移动到下一个指针</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 降序插入</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;InsertValue&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void InsertUnAscending(DoubleLink InsertValue) &#123;</span><br><span class="line">            <span class="keyword">if</span> (IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                Append(Insert);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            MoveFirst();</span><br><span class="line">            <span class="keyword">if</span> (InsertValue.Number&gt;GetCurrentValue().Number)</span><br><span class="line">            &#123;</span><br><span class="line">                Insert(InsertValue);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (InsertValue.Number&gt;GetCurrentValue().Number)</span><br><span class="line">                &#123;</span><br><span class="line">                    Insert(InsertValue);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (IsEof())</span><br><span class="line">                &#123;</span><br><span class="line">                    Append(InsertValue);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                MoveNext();//移动到下一个指针</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Diagnostics.Metrics;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class DoubleLink</span><br><span class="line">    &#123;</span><br><span class="line">        private int number;</span><br><span class="line">        private string name;</span><br><span class="line">        private int counter;</span><br><span class="line"></span><br><span class="line">        public DoubleLink(int num, string Name, int count)</span><br><span class="line">        &#123;</span><br><span class="line">            //获取参数值</span><br><span class="line">            number = num;</span><br><span class="line">            name = Name;</span><br><span class="line">            counter = count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public int Number &#123; get =&gt; number; private <span class="built_in">set</span> =&gt; number = value; &#125;</span><br><span class="line">        public string Name &#123; get =&gt; name; private <span class="built_in">set</span> =&gt; name = value; &#125;</span><br><span class="line">        public int Counter &#123; get =&gt; counter; private <span class="built_in">set</span> =&gt; counter = value; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class DoubleListNode</span><br><span class="line">    &#123;</span><br><span class="line">        private DoubleLink goods;</span><br><span class="line"></span><br><span class="line">        public DoubleListNode(DoubleLink bugs)</span><br><span class="line">        &#123;</span><br><span class="line">            goods = bugs;</span><br><span class="line">        &#125;</span><br><span class="line">        public DoubleListNode Previous;</span><br><span class="line">        private DoubleListNode next;</span><br><span class="line"></span><br><span class="line">        public DoubleListNode Next &#123; get =&gt; next; <span class="built_in">set</span> =&gt; next = value; &#125;</span><br><span class="line"></span><br><span class="line">        public DoubleLink Goods &#123; get =&gt; goods; private <span class="built_in">set</span> =&gt; goods = value; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>使用MD5算法对密码进行加密<br>对密码进行加密的算法有很多种,在C#中较常使用的是MD5加密算法,它是一种用于产生数字签名的一项散列算法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Security.Cryptography;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Web;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// MD5Helper 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class MD5Helper</span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    public string Encrypt(string strPwd) &#123; </span><br><span class="line">        MD5 md5=new MD5CryptoServiceProvider();</span><br><span class="line">        byte[] data=Encoding.Default.GetBytes(strPwd);//将字符编码为一个字节序列</span><br><span class="line">        byte[] md5data=md5.ComputeHash(data);</span><br><span class="line">        md5.Clear();</span><br><span class="line">        string str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; md5data.Length-1; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            str += md5data[i].ToString(<span class="string">&quot;x&quot;</span>).PadLeft(2,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>031.常用算法—-堆栈<br>栈是一种重要的数据结构,从数据结构的角度看,栈也是线性表,其特殊性在于栈的基本操作是线性表操作的子集,它们是操作受限的线性表,因此可以称为限定性的数据结构<br>关键技术<br>栈是限定仅在表尾进行插入或删除操作的线性表,因此对栈来说,表尾端有其特殊含义,称为”栈项(top)”,相应的,表头端称为”栈底(bottom)”.不含元素的空表称为空栈.栈的修改是按照后进先出的原则进行的,因此栈又称为后进先出的线性表,在实现栈的数据结构时一定要注意这个特点.栈的基本操作除了在栈顶进行插入或删除外,还有栈的初始化,判断是否为空以及取栈顶元素等.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">using Microsoft.VisualBasic.FileIO;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class CStack</span><br><span class="line">    &#123;</span><br><span class="line">        public Clist m_List;//调用链表类</span><br><span class="line">        public <span class="function"><span class="title">CStack</span></span>() &#123; </span><br><span class="line">            m_List= new Clist();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 压入堆栈</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;PushValue&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void Push(int PushValue) &#123;</span><br><span class="line">            m_List.Append(PushValue);</span><br><span class="line">        &#125;</span><br><span class="line">        //弹出堆栈数据,如果为空,则取得2147483647为int的最大值</span><br><span class="line">        public int <span class="function"><span class="title">Pop</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            int PopValue;</span><br><span class="line">            <span class="keyword">if</span> (!IsNullStack())</span><br><span class="line">            &#123;</span><br><span class="line">                MoveTop();//移动到顶部</span><br><span class="line">                PopValue = GetCurrentValue();//取得弹出值</span><br><span class="line">                Delete();//删除</span><br><span class="line">                <span class="built_in">return</span> PopValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> 2147483647;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 删除取得当前的节点</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void <span class="function"><span class="title">Delete</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">           m_List.Delete();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 取得当前的值</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private int <span class="function"><span class="title">GetCurrentValue</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> m_List.GetCurrentValue();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断是否为空的堆栈</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsNullStack</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_List.IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 堆栈的个数</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public int StackListCount</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123;</span><br><span class="line">                <span class="built_in">return</span> m_List.ListCount;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 移动到堆栈的底部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveBottom</span></span>() &#123; </span><br><span class="line">            m_List.MoveFirst();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 移动到堆栈的顶部</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveTop</span></span>() &#123; </span><br><span class="line">            m_List.MoveLast();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向上移动</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveUp</span></span>() &#123; </span><br><span class="line">        m_List.MoveNext();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向下移动</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">MoveDown</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            m_List.MovePrevious();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 清空堆栈</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">Clear</span></span>() &#123; </span><br><span class="line">        m_List.Clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>C#随机数的产生<br>其中int型参数Len为产生随机数的个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// RandomHelper 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class RandomHelper</span><br><span class="line">&#123;</span><br><span class="line">    public string RandomNum(int Len) &#123;</span><br><span class="line">        string str= <span class="string">&quot;0,1,2,3,4,5,6,7,8,9,&quot;</span>;</span><br><span class="line">        str += <span class="string">&quot;a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,&quot;</span>;</span><br><span class="line">        str += <span class="string">&quot;A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z&quot;</span>;</span><br><span class="line">        string[] S=str.Split(new char[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;);</span><br><span class="line">        string strNum = <span class="string">&quot;&quot;</span>;//用于记录上一个随机数的值,避免产生两个重复值</span><br><span class="line">        int tag = -1;</span><br><span class="line">        Random md=new Random();</span><br><span class="line">        <span class="keyword">for</span> (int i = 1; i &lt;=Len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tag==-1)</span><br><span class="line">            &#123;</span><br><span class="line">                md = new Random(i*tag*unchecked((int)DateTime.Now.Ticks));//初始化一个Random实例  </span><br><span class="line">            &#125;</span><br><span class="line">            int mdNum = md.Next(61);//返回小于61的非负随机数</span><br><span class="line">            <span class="keyword">if</span> (tag!=-1&amp;&amp; tag==mdNum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> RandomNum(1);</span><br><span class="line">            &#125;</span><br><span class="line">            tag = mdNum;</span><br><span class="line">            strNum += S[mdNum];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> strNum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>032.常用算法——队列<br>实例说明<br>队列是链表的扩展,它是一种特殊的链表,和堆栈类似,它和堆栈的不同在于,堆栈采用的是后进先出原则,而队列采用的是先进先出原则<br>关键技术<br>和栈相反,队列是先进先出的线性表,其只允许在表的一端进行插入,而在另一端删除元素,在队列中,允许插入的一端称为队尾,允许删除的一端称为队头,在队列的实现过程中主要有两个操作,即入队和出队.<br>1.入队就是在队列的尾部添加数据,队列数据个数加1,尾指针后移.<br>2.出队就是在队列的头部取数据,然后删除该数据,头指针后移.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class Queue</span><br><span class="line">    &#123;</span><br><span class="line">        private Clist m_List;</span><br><span class="line">        public <span class="function"><span class="title">Queue</span></span>() &#123; </span><br><span class="line">        m_List= new Clist();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 入队</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;DataValue&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void EnQueue(int DataValue) &#123;</span><br><span class="line">        m_List.Append(DataValue);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 出队</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public int <span class="function"><span class="title">DeQueue</span></span>() &#123;</span><br><span class="line">            int QueValue;</span><br><span class="line">            <span class="keyword">if</span> (!IsNull())</span><br><span class="line">            &#123;</span><br><span class="line">                m_List.MoveFirst();</span><br><span class="line">                QueValue=m_List.GetCurrentValue();</span><br><span class="line">                m_List.Delete();</span><br><span class="line">                <span class="built_in">return</span> QueValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> 2147483647;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 判断队列是否为空</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private bool <span class="function"><span class="title">IsNull</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">return</span> m_List.IsNull();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 清空队列</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">Clear</span></span>() &#123;</span><br><span class="line">            m_List.Clear();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 取得队列的数据个数</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public int QueueCount &#123; get &#123; <span class="built_in">return</span> m_List.ListCount; &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">``</span><br><span class="line">秘笈心法</span><br><span class="line">判断IP是否正确</span><br><span class="line">``` bash</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// IPHelper 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class IPHelper</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="function"><span class="title">IPHelper</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">        // TODO: 在此处添加构造函数逻辑</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    public bool IsIP(string ip) &#123;</span><br><span class="line">        bool b = <span class="literal">true</span>;</span><br><span class="line">        string[] lines = new string[4];</span><br><span class="line">        string s = <span class="string">&quot;.&quot;</span>;</span><br><span class="line">        lines = ip.Split(s.ToCharArray(), 4);//分隔字符串</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 4; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Convert.ToInt32(lines[i])&gt;=255 || Convert.ToInt32(lines[i])&lt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                b = <span class="literal">false</span>;</span><br><span class="line">                <span class="built_in">return</span> b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例033.常用算法—树的实现<br>实例说明<br>树是以分支关系定义的层次结构,树结构在客观世界中广泛存在.<br>关键技术<br>树的抽象数据类型定义包含树的结构定义和基本操作<br>1.结构定义<br>树是n(n&gt;=1)个节点的有限集,在任意一颗非空树中.<br>(1).有且仅有一个特定的节点称为根的节点<br>(2).当n&gt;1时,其余节点可分为m个互不相交的有限集,其中每一个集合本身又是一棵树,并且称为根的子树.<br>2.基本操作<br>树的基本操作主要包括构造空树,销毁树,清空树,求树的深度,访问节点,插入子树和删除子树等.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    enum Position &#123; LEFT,RIGHT&#125;;</span><br><span class="line">    enum Tag</span><br><span class="line">    &#123;</span><br><span class="line">        LINK,THREAD    //LINK指向孩子,THREAD指向后继</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    public interface IBinNode</span><br><span class="line">    &#123;</span><br><span class="line">        bool isLeaf();</span><br><span class="line">        object Element &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">        IBinNode Left &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">        IBinNode Right &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //遍历,线索化等操作的接口</span><br><span class="line">    interface ITravelBinTree</span><br><span class="line">    &#123;</span><br><span class="line">        void PreOrderTravel();</span><br><span class="line">        void InOrderTravel();</span><br><span class="line">        void RevOrderTravel();</span><br><span class="line">        void Print(IBinNode t);</span><br><span class="line">    &#125;</span><br><span class="line">    interface IInsertBinTree</span><br><span class="line">    &#123;</span><br><span class="line">        void Insert(IBinNode node, Position pos);</span><br><span class="line">    &#125;</span><br><span class="line">    ///二叉树类</span><br><span class="line">    class BinNodePtr : IBinNode</span><br><span class="line">    &#123;</span><br><span class="line">        private object element;</span><br><span class="line">        private IBinNode left;</span><br><span class="line">        private IBinNode right;</span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">BinNodePtr</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            element = null;</span><br><span class="line">            left = right = null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public BinNodePtr(object element)</span><br><span class="line">        &#123;</span><br><span class="line">            this.element = element;</span><br><span class="line">            this.left = right = null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public BinNodePtr(object element, IBinNode lchild, IBinNode rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            this.element = element;</span><br><span class="line">            this.left = lchild;</span><br><span class="line">            this.right= rchild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public object Element &#123; get =&gt; element; <span class="built_in">set</span> =&gt; element = value; &#125;</span><br><span class="line">        public IBinNode Left &#123; get =&gt; left; <span class="built_in">set</span> =&gt; left = value; &#125;</span><br><span class="line">        public IBinNode Right &#123; get =&gt; right; <span class="built_in">set</span> =&gt; right = value; &#125;</span><br><span class="line"></span><br><span class="line">        public bool <span class="function"><span class="title">isLeaf</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (left == null &amp;&amp; right == null)</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    class BinNodeLine : BinNodePtr, IBinNode</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        public BinNodeLine(object e, IBinNode left, IBinNode right) : base(e, left, right)</span><br><span class="line">        &#123;</span><br><span class="line">            lTag = rTag = Tag.LINK;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public BinNodeLine(object element) : base(element)</span><br><span class="line">        &#123;</span><br><span class="line">            lTag=rTag=Tag.LINK;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private Tag lTag;</span><br><span class="line">        private Tag rTag;</span><br><span class="line"></span><br><span class="line">        public Tag LTag &#123; get =&gt; lTag; <span class="built_in">set</span> =&gt; lTag = value; &#125;</span><br><span class="line">        public Tag RTag &#123; get =&gt; rTag;<span class="built_in">set</span>=&gt; rTag = value; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class TravelBinTree:ITravelBinTree,IInsertBinTree</span><br><span class="line">    &#123;</span><br><span class="line">        const int INIT_TREE_SIZE = 20;</span><br><span class="line">        private IBinNode tree;</span><br><span class="line">        private BinNodeLine <span class="built_in">head</span>;//线索化后的头指针</span><br><span class="line">        private IBinNode prenode;//指向最近访问过的前驱节点</span><br><span class="line">        public <span class="function"><span class="title">TravelBinTree</span></span>() &#123; </span><br><span class="line">        tree=new BinNodePtr();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public TravelBinTree(IBinNode INode)</span><br><span class="line">        &#123;</span><br><span class="line">            this.tree = INode;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">InOrderTravel</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            InOrderTravel(tree);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void InOrderTravel(IBinNode tree)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tree == null) <span class="built_in">return</span>;</span><br><span class="line">            InOrderTravel(tree.Left);</span><br><span class="line">            Print(tree);</span><br><span class="line">            InOrderTravel(tree.Right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Insert(IBinNode node, Position pos)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (node == null)</span><br><span class="line">                throw (new InvalidOperationException(<span class="string">&quot;不能将节点插入树&quot;</span>));</span><br><span class="line">            switch (pos)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> Position.LEFT:tree.Left = node;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Position.RIGHT:tree.Right = node;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 按照先序顺序遍历树</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">TreeBuilder</span></span>() &#123; </span><br><span class="line">            Stack stk=new Stack(INIT_TREE_SIZE);</span><br><span class="line">            stk.Push(tree);</span><br><span class="line">            Position pos;</span><br><span class="line">            string para;</span><br><span class="line">            pos=Position.LEFT;</span><br><span class="line">            IBinNode baby = new BinNodePtr(), temp=new BinNodePtr();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                para = Console.ReadLine();</span><br><span class="line">                <span class="keyword">if</span> (para==<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (pos==Position.RIGHT)</span><br><span class="line">                    &#123;</span><br><span class="line">                        stk.Pop();</span><br><span class="line">                        <span class="keyword">while</span> (stk.Count!=0 &amp;&amp; ((IBinNode)stk.Peek()).Right!=null)</span><br><span class="line">                            stk.Pop();</span><br><span class="line">                        <span class="keyword">if</span> (stk.Count == 0) <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        pos = Position.RIGHT;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (tree.GetType().Equals(baby)==<span class="literal">true</span>)</span><br><span class="line">                        baby = new BinNodePtr(para);</span><br><span class="line">                    temp = (IBinNode)stk.Peek();</span><br><span class="line">                    <span class="keyword">if</span> (pos == Position.LEFT)</span><br><span class="line">                        temp.Left = baby;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        temp.Right = baby;</span><br><span class="line">                    pos = Position.LEFT;</span><br><span class="line">                    stk.Push(baby);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 中序线索化</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">InOrderThreading</span></span>() &#123;</span><br><span class="line">            <span class="built_in">head</span> = new BinNodeLine(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            head.RTag = Tag.THREAD;</span><br><span class="line">            head.Right = <span class="built_in">head</span>;</span><br><span class="line">            <span class="keyword">if</span> (tree == null) head.Left = <span class="built_in">head</span>;</span><br><span class="line">            <span class="keyword">else</span> head.Left = tree;prenode = <span class="built_in">head</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        private void InThreading(IBinNode t) &#123;</span><br><span class="line">            <span class="keyword">if</span> (t == null)</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                InThreading(t.Left);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 先序遍历树,用非递归算法实现</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">PreOrderTravel</span></span>() &#123;</span><br><span class="line">            IBinNode temptree;</span><br><span class="line">            Stack stk = new Stack(INIT_TREE_SIZE);</span><br><span class="line">            <span class="keyword">if</span> (tree==null)</span><br><span class="line">                throw (new InvalidOperationException(<span class="string">&quot;访问的树为空.&quot;</span>));</span><br><span class="line">            temptree= tree;</span><br><span class="line">            stk.Push(tree);</span><br><span class="line">            <span class="keyword">while</span> (stk.Count!=0)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (temptree!=null)</span><br><span class="line">                &#123;</span><br><span class="line">                    Print(temptree);</span><br><span class="line">                    stk.Push(temptree.Left);</span><br><span class="line">                    temptree=temptree.Left;</span><br><span class="line">                &#125;</span><br><span class="line">                stk.Pop();//空指针退栈</span><br><span class="line">                <span class="keyword">if</span> (stk.Count!=0)</span><br><span class="line">                &#123;</span><br><span class="line">                    temptree = (IBinNode)stk.Pop();</span><br><span class="line">                    stk.Push(temptree.Right);</span><br><span class="line">                    temptree=temptree.Right;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">RevOrderTravel</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            RevOrderTravel(tree);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void RevOrderTravel(IBinNode tree)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tree == null) <span class="built_in">return</span>;</span><br><span class="line">            RevOrderTravel(tree.Left);</span><br><span class="line">            RevOrderTravel(tree.Right);</span><br><span class="line">            Print(tree);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       public void Print(IBinNode t)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(t.Element + <span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>如何去掉字符串中的所有空格<br>由于空格的ASCII码值是32,因此,在去掉字符串中所有空格时,只需循环访问字符串中的所有字符,并判断它们的ASCII码值是否为32即可.去掉字符串中所有空格的关键代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class TrimStrHelper</span><br><span class="line">    &#123;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 去掉字符串中的所有空格</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;str&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public string CheckTrim(string str) &#123;</span><br><span class="line">            string Result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            CharEnumerator charEnumerator =str.GetEnumerator();</span><br><span class="line">            <span class="keyword">while</span> (charEnumerator.MoveNext())</span><br><span class="line">            &#123;</span><br><span class="line">                byte[] array = new byte[1];</span><br><span class="line">                array=System.Text.Encoding.ASCII.GetBytes(charEnumerator.Current.ToString());</span><br><span class="line">                int asciicode = (short)(array[0]);</span><br><span class="line">                <span class="keyword">if</span> (asciicode!=32)</span><br><span class="line">                &#123;</span><br><span class="line">                    Result += charEnumerator.Current.ToString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> Result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>034.排序算法——选择排序算法<br>实例说明<br>简单选择排序的基本思想是:每一趟在n个记录中选取关键字最小的记录作为有序序列中第一个记录,本实例实现了用选择排序的方法对一组数据进行排序.<br>关键技术<br>选择排序的主要操作是关键字间的比较,显然是从n个数据中进行简单排序的算法为:令I从1至n-1,进行n-1趟选择操作.<br>设计过程<br>1.创建一个控制台程序,将其命名为Choice.<br>2.添加一个类,并将文件命名为SelectionSorter.cs<br>3.主要程序卸代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace UnilateralismChainTable</span><br><span class="line">&#123;</span><br><span class="line">    public class SelectionSorter</span><br><span class="line">    &#123;</span><br><span class="line">        private int min;</span><br><span class="line">        public void Sort(int[] list) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; list.Length; i++)   ///遍历数组中的数据,不包含最后一个</span><br><span class="line">            &#123;</span><br><span class="line">                min = i;            //读取当前数据</span><br><span class="line">                <span class="keyword">for</span> (int j = j+1; j &lt; list.Length; j++) //遍历数组中的数据,不包含最后一个</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (list[j] &lt; list[min])    //如果当前值是最小值</span><br><span class="line">                        min= j;                 //将最小值放在相应位置</span><br><span class="line">                &#125;</span><br><span class="line">                int t = list[min];</span><br><span class="line">                list[min] = list[t];            //交换数据</span><br><span class="line">                list[i] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>获得字符串中汉字的个数.<br>获得字符串中汉字的个数时,可以首先定义一个与汉字相匹配的正则表达式,然后使用charEnumerator对象的MoveNext方法循环访问字符串中的每个字符,如果访问的字符与定义的正则表达式相匹配,则将其添加到一个数组中,最后获得该数组的项数即为字符串中汉字的个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 获得字符串中汉字的个数</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;str&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public string GetChineseCount(string str) &#123; </span><br><span class="line">           int count = 0;</span><br><span class="line">           ArrayList itemList=new ArrayList();</span><br><span class="line">           CharEnumerator charEnumerator = str.GetEnumerator();</span><br><span class="line">           Regex regex = new Regex(<span class="string">&quot;^[\u4E00-\u9FA5]&#123;0,&#125;$&quot;</span>);</span><br><span class="line">           <span class="keyword">while</span> (charEnumerator.MoveNext())</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (regex.IsMatch(charEnumerator.Current.ToString(),0))</span><br><span class="line">                   itemList.Add(charEnumerator.Current);</span><br><span class="line">               count=itemList.Count;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">return</span> count.ToString();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>035.排序算法——插入排序算法<br>实例说明<br>直接插入排序是一种最简单的排序方法,基本操作是将一个记录插入到已排好序的有序表中,从而得到一个新的,记录数增1的有序表,本实例实现了用插入排序对一组数据进行排序<br>关键技术<br>实现插入排序主要是先找到一个有序序列,然后将下一个关键字插入上述有序序列,然后再从剩下的关键字中选取下一个插入对象,反复执行至整个序列有序.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 插入排序</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;list&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        public void InsertSort(int[] list) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; list.Length; i++)   ///遍历当前数组,不包含第一个和最后一个</span><br><span class="line">            &#123;</span><br><span class="line">                int t = list[i];    ///获取当前值</span><br><span class="line">                int j = i;          ///记录当前值的标记.</span><br><span class="line">                <span class="keyword">while</span> (j &gt;0&amp;&amp; list[j]&gt;t) &#123;  ///插入法</span><br><span class="line">                    list[j] = list[j-1];    ///交换顺序</span><br><span class="line">                    --j;</span><br><span class="line">                &#125;</span><br><span class="line">                list[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>将字母全部转换为大写<br>将字母转换为大写时,需要调用string类的ToUpper方法<br>036.排序算法—-希尔排序算法<br>希尔排序又称”缩小增量排序”,也是一种插入排序类的方法,但在时间效率上较前述几种排序方法有较大的改进.<br>在待排序记录按关键字”基本有序”时,直接插入排序效率就可以大大提高,而且记录较少时效率也较高,希尔排序正是从这两点分析出发对直接插入排序进行改进得到的一种方法.<br>关键技术<br>先将整个待排序记录分割成为若干子序列分别进行直接插入排序,待整个序列中的记录”基本有序”时再对全体记录进行一次直接插入排序.<br>希尔排序的特点是:子序列的构成不是简单的”逐段分割”,而是将相隔某个”增量”的记录组成一个子序列.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 希尔排序</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;list&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       public void ShellSort(int[] list) &#123;</span><br><span class="line">           int inc;</span><br><span class="line">           <span class="keyword">for</span> (inc = 1; inc &lt;= list.Length / 9; inc = 3 * inc + 1) ;//遍历当前数组</span><br><span class="line">           <span class="keyword">for</span> (;inc&gt;0;inc/=3) //遍历当前值</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">for</span> (int i = inc+1; i &lt;=list.Length; i+=inc)</span><br><span class="line">               &#123;</span><br><span class="line">                   int t = list[i - 1];//获取值</span><br><span class="line">                   int j = i;</span><br><span class="line">                   <span class="keyword">while</span> ((j &gt; inc) &amp;&amp; (list[j-inc-1]&gt;t))  //希尔排序法</span><br><span class="line">                   &#123;</span><br><span class="line">                       list[j - 1] = list[j - inc - 1];    //交换数据</span><br><span class="line">                       j -= inc;</span><br><span class="line">                   &#125;</span><br><span class="line">                   list[j - 1] = t;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>将字符串首字母转换为大写<br>将字符串首字母转换为大写时,可以先使用string类的Substring方法将字符串的首字母截取出来,然后调用ToUpper方法将该字母转换为大写.将字符串首字母转换为大写关键代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 将字符串首字母转换为大写</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;str&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       public string ChangeFirststr(string str) &#123;</span><br><span class="line">           string str1 = str.Substring(0,1);</span><br><span class="line">           string str2 = str.Substring(1, str.Length - 1);</span><br><span class="line">           <span class="built_in">return</span> str1.ToUpper() + str2;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>037.算法应用——按要求生成指定位数编号<br>实例说明<br>实现了按要求生成数字格式的功能<br>关键技术<br>本实例用到了TextBox控件的KeyPress事件<br>1.KeyPress事件<br>在控件有焦点的情况下按下键发生,其语法格式如下:<br>public event KeyPressEventHandler KeyPress<br>2.KeyPressEventArgs事件的Keychar属性<br>获取或设置与按下的键对应的字符<br>public char KeyChar{get;set;}<br>属性值:撰写的ASCII字符.例如,如果用户按下Shift+K快捷键,则该属性返回一个大写的K.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">private void Textbox25_KeyPress(object sender,KeyPressEventArgs e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.KeyChar==(Char)Keys.Return) //如果按下Enter键</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (TextBox25.Text.Length&gt;8)  //如果位数大于8</span><br><span class="line">            &#123;</span><br><span class="line">                TextBox25.Text = TextBox25.Text.Substring(0,8);//获取前8位数</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                int j=8-TextBox25.Text.Length;      //确定增加的位数</span><br><span class="line">                <span class="keyword">for</span> (int i = 0; i &lt; j; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    TextBox25.Text = <span class="string">&quot;0&quot;</span> + TextBox25.Text;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>如何设置小数的保留位数<br>设置小数的保留位数时,用到了Math类的Round方法,该方法用来将小数值舍入到指定精度,其语法格式如下:<br>public static decimal Round(decimal d,int decimals)<br>其中,d表示要舍入的小数,decimals表示返回值中的有效数字位数(精度),设置小数保留位数关键代码如下:<br>textBox2.text=Convert.ToString(Math.Round(Convert.ToDouble(textBox1.Text.Trim()),2))<br>1.4.发布ASP.NET应用程序<br>038.发布ASP.NET应用程序<br>实例说明<br>将Web应用程序上传到服务器前,为了使Web应用程序源代码具有可靠的保密性和安全性,需要进行网站发布,网站发布后,将保留.aspx文件,.cs文件则被编译成.dll文件存放到bin文件夹下.<br>关键技术<br>进行网站发布时,首先要进行预编译网站.为发布进行预编译与就地预编译稍有不同,预编译实际执行的编译过程与通常在浏览器中请求页时发生的动态编译过程相同,预编译器从页产生程序集,包括标记和代码,它同时还编译App_Code,App_GlobalResources,App_LocalResources和App_Themes文件夹中的文件,另外它还可以同时编译单文件Asp.net页和代码隐藏页,发布过程只部署网站文件夹或子文件夹中的文件,而不部署Machine.config文件,因此,目标Web服务器的配置可能与计算机上的配置不同,这可能会影响应用程序的行为<br>设计过程<br>新建一个Web应用程序ReleaseAspNet,默认主页为Default.aspx.在程序中添加一个类文件,将其命名为BaseClass.cs.<br>2.在Default.aspx页面中添加一个Table控件,一个Label控件和一个Button控件,分别用来布局页面,显示文本和执行文本显示功能.<br>3.在BaseClass类中自定义一个方法用来返回一个字符串.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public string <span class="function"><span class="title">TestString</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="string">&quot;大家好&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Default.aspx页面的Button1按钮下调用该类并执行显示文本操作.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected void Button1_Click(object sender,EventArgs e)&#123;</span><br><span class="line">BaseClass bs=new BaseClass();</span><br><span class="line">this.Label1.Text=bs.TestString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.以上步骤用于建立一个网站,实现简单的功能,网站创建完成后,即可对其进行发布,用户可以将网站发布到本地计算机或网络上能够访问的任何位置.需要注意的是,如果要发布到网络,该网络必须是Vs支持的连接协议.<br>把网站发布到本地文件夹,选择”生成”/“发布网站”命令,打开”发布网站”对话框<br>5.单击确定按钮,预编译网站内容,并将输出写入指定的文件夹.”输出”窗口显示进度消息.如果编译时发生一个错误,”输出”窗口中会报告该错误.编译完成后,可对编译后的网站进行测试,用户可为编译后的网站创建一个虚拟目录,通过浏览器对网页进行访问.<br>秘笈心法<br>如何解决Response.Redirect方法传递汉字时出现的错误.<br>使用Response.Redirect方法传递汉字时,有时会发现传递的内容与接收的内容不一致,接收的值丢失了几个字或出现乱码.为了确保传递的汉字可以被正确的接收,可以在传值之前使用Server对象的UrlEncode方法对所传递的汉字进行URL编码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">    /// 如何解决Response.Redirect方法传递汉字时出现的错误.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void <span class="function"><span class="title">SetUrlEncode</span></span>() &#123;</span><br><span class="line">        string name = Server.UrlEncode(<span class="string">&quot;如何解决Response.Redirect方法传递汉字&quot;</span>);</span><br><span class="line">        Response.Redirect(<span class="string">&quot;Default2.aspx?name=&quot;</span>+name);</span><br><span class="line">        ///接收值时,使用Server对象的UrlDecode方法对所接收的汉字进行URL解码</span><br><span class="line">      name = Server.UrlDecode(Request.QueryString[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>039.使用”复制网站”发布Asp.Net网站<br>设计过程<br>1.在解决方案资源管理器页面选中当前网站,单击鼠标右键,在弹出的快捷菜单那中选择复制网站命令<br>2.单击连接<br>3.选择完要将网站复制到的位置后,选中要复制的网站文件或文件夹,将选中的网站文件或文件夹复制到指定位置.<br>秘笈心法<br>使用Response.BinaryWrite方法输出二进制图像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        ///打开图片文件,并保存在文件流中</span><br><span class="line">        FileStream stream = new FileStream(Server.MapPath(@<span class="string">&quot;~/images/1.jpg&quot;</span>),FileMode.Open);</span><br><span class="line">        long FileSize = stream.Length;//获取流的长度</span><br><span class="line">        byte[] Buffer=new byte[(int)FileSize];//定义一个二进制数组</span><br><span class="line">        stream.Read(Buffer,0,(int)FileSize);//从流中读取字节块并将该数据写入给定缓冲区中</span><br><span class="line"></span><br><span class="line">        stream.Close();</span><br><span class="line">        //设定Response类型</span><br><span class="line">        Response.ContentType = <span class="string">&quot;image/jpg&quot;</span>;</span><br><span class="line">        Response.BinaryWrite(Buffer);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="第二章-Asp-Net前端技术应用开发"><a href="#第二章-Asp-Net前端技术应用开发" class="headerlink" title="第二章 Asp.Net前端技术应用开发"></a>第二章 Asp.Net前端技术应用开发</h4><p>040.利用SMTP服务发送电子邮件<br>关键技术<br>使用Asp.Net应用程序发送电子邮件,应首先在服务器上安装和配置Internet信息服务(IIS)的简单邮件传输协议(SMTP)服务.IIS SMTP服务是一个简单组件,主要用来将电子邮件转发到SMTP服务器进行传递.<br>1.安装SMTP服务<br>在默认情况下,不随IIS安装SMTP服务,必须使用控制面板来安装,安装SMTP服务时将创建一个默认的SMTP配置,用户随后可以使用IIS管理器自定义该配置,SMTP服务的安装步骤如下：<br>(1).选择“开始”/“设置”/“控制面板”/“添加或删除程序“，打开”添加或删除程序“窗口<br>(2).单击对话框左侧的”添加/删除WIndows组件”,打开”Windows组件向导“对话框.<br>(3).选中”应用程序服务器“复选框，单击”详细信息“按钮,打开”应用程序服务器“对话框<br>(4).选中”Internet信息服务(IIS)“复选框,单击”详细信息“按钮,在打开的”Internet信息服务器(IIS)“对话框中选中SMTPService复选框,准备安装SMTP服务.<br>(5).单击”确定”按钮,然后单击”下一步”按钮,安装完成后,单击”完成“按钮,从而完成简单邮件传输协议(SMTP)服务的安装.<br>2.配置SMTP虚拟计算机<br>安装SMTP服务后,系统将会在IIS管理器中创建一个新节点,若要配置SMTP虚拟服务器,必须启动IIS管理器.<br>(1).选择”开始”/“设置”/”控制面板“/“Internet信息服务(IIS)管理器”命令<br>(2).默认设置<br>默认SMTP虚拟服务器具有以下默认设置,如果想创建一个新的虚拟服务器,可以使用”新建虚拟服务器向导”来配置.<br>名称:出现在IIS管理器中的虚拟服务器的名称,可以在IIS管理器中更改虚拟服务器的名称.只需右击该虚拟服务器,在弹出的快捷菜单中选择”重命名”命令即可.<br>IP地址/TCP端口:IP地址均为”未分配”,TCP端口号为25.可以使用”SMTP虚拟服务器属性”,对话框中的”常规选项卡”来更改该配置.如果更改该设置,则必须指定一个没有被其他SMTP虚拟服务器使用的IP地址和TCP端口号组合.TCP端口号25是默认的TCP端口号,也是建议的TCP端口号,多个虚拟服务器可以使用同一个TCP端口号,但是必须为它们配置不同的IP地址.如果不设置唯一的IP地址和TCP端口号组合,则SMTP虚拟服务器将不会启动.<br>默认域:是指在”系统属性”中的”计算机名称”选项卡中列出的域名,一个SMTP虚拟服务器只能有一个默认域,且不能删除该域,若要在IIS管理器中更改域的名称,请双击虚拟服务器,然后双击”域”,在右侧列表中选择”本地(或默认)域”,然后使用鼠标右键单击本地(或默认)域,在弹出的快捷菜单中选择”重命名”命令即可.<br>主目录:C:\Inetpub/Mailroot.主目录是SMTP的根目录,必须是运行SMTP服务计算机的本地目录.<br>3.MailMessage类.<br>MailMessage类主要用于指定邮件的发送地址,收件人地址等.<br>Attachments 获取用于存储附加到此电子邮件的数据的附件集合.<br>Body    获取或设置邮件正文<br>From    获取或设置此电子邮件的发信人地址<br>Sender    获取或设置此电子邮件的发件人地址<br>Subject    获取或设置此电子邮件的主题<br>To    获取包含此电子邮件的收件人的地址集合<br>设计过程<br>用户设置完邮件服务器及邮件的所有信息后,单击”发送”按钮即可完成邮件的发送,”发送”按钮的Click事件代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">protected void btnSendClick(object sender,EventArgs e)&#123;</span><br><span class="line">string file=Server.MapPath(<span class="string">&quot;testXML.xml&quot;</span>);</span><br><span class="line">MailMessage myMail=new System.Net.Mail.MailMessage();</span><br><span class="line">myMail=new System.Net.Mail.MailMessage(txtSender.Text.Trim(),txtReceiver.Text.Trim(),txtSubject.Text.Trim(),txtContent.Text.Trim());</span><br><span class="line"><span class="keyword">if</span>(ddlAccessories.Items.Count&gt;0)&#123;</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;ddlAccessories.Items.Count;i++)&#123;</span><br><span class="line">System.Net.Mail.Attachment myAttachment=new System.Net.Mail.Attachment(Server.MapPath(ddlAcce ssories.Items[i].Value),System.Net.Mine.MediaTypeNames.Application.Octet);</span><br><span class="line">System.Net.Mine.ContentDisposition=myAttachment.ContentDisposition;</span><br><span class="line">disposition.CreationDate=System.IO.File.GetCreationTime(file);</span><br><span class="line">disposition.ModificationDate=System.IO.File.GetLastWriteTime(file);</span><br><span class="line">myMail.Attachments.Add(myAttachment);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.Net.Mail.SmtpClient client=new System.Net.Mail.SmtpClient(<span class="string">&quot;smtp.163.com&quot;</span>,25);</span><br><span class="line">client.Credentials=new System.Net.NetworkCredential(<span class="string">&quot;wangxiaoke68&quot;</span>,<span class="string">&quot;sxwangxiaoke8568&quot;</span>);</span><br><span class="line">client.Send(myMail);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>040.关于SMTP服务器配置<br>1.安装SMTP服务时,将在C:\Inetpub\Mailroot中创建一个具有消息存储区的默认SMTP服务器配置<br>2.设置SMTP服务时,可以为SMTP服务配置全局设置,还可以为虚拟服务器的单个组件配置设置.IIS SMTP服务只是一个中继代理,电子邮件将转发到SMTP服务器进行传递.<br>041.利用Jmail组件发送邮件<br>关键技术<br>1.Jmail组件的属性和方法<br>Charset     string    字符集<br>Encoding    string    设置附件的编码方式<br>ContentType string    邮件的内容类型<br>ISOEncodeHeaders string     是否将信头编码为iso-8859-1 字符集<br>Priority    int    邮件的优先级<br>From    string    发件人的Email地址<br>FromName string     发件人姓名<br>Subject    string    邮件主题<br>MailServerUserName string 登录邮件服务器的用户名<br>MailServerPassword  string  登录邮件服务器的用户密码<br>Jmail组件的常用方法及说明<br>AddHeader(XHeader,Value) 添加用户定义的信件标头<br>AddRecipient(emailAddress,recipientName,PGPKey) 添加收件人E-mail地址,姓名并对其加密<br>AddRecipientCC(emailAddress,recipientName,PGPKey) 添加抄送人E-mail地址,姓名并对其加密<br>AddRecipientBCC(emailAddress,PGPKey)    添加密送人E-mail地址并对其加密<br>AddAttachment(URL,附件名)    添加附件<br>Send    发送邮件<br>Connect    和邮件服务器建立连接,并接收邮件<br>DeleteMessages    清空邮件服务器中的邮件<br>Disconnect    断开和邮件服务器的连接<br>2.Jmail组件的使用<br>在使用Jmail组件之前,首先要添加对Jmail组件的引用<br>在解决方案资源管理器中找到要添加引用的网站项目,单击鼠标右键,在弹出的快捷菜单中选择”添加引用”命令,在打开的”引用管理器”对话框中选择”浏览”,在其中选择要添加的jmail.dll文件,单击确定,将Jmail组件添加到网站项目的引用中,然后就可以直接在后台代码中使用其属性和方法<br>设计过程<br>用户设置完邮件服务器及邮件的所有信息后,单击发送按钮即可完成邮件的发送.实现该功能时,用户可以自定义一个发送邮件的方法,这样既可以提高代码的重用度,也可以方便代码的管理,然后在发送按钮的Click事件中直接调用该方法即可.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected void btnSend_Click(object sender,EventArgs e)&#123;</span><br><span class="line">sendEmail(txtSender.Text.Trim(),txtSUser.Text.Trim(),txtEUser.Text.Trim(),txtEPwd.Text.Trim(),txtReceiver.Text.Trim(),txtSubject.Text.Trim(),txtContent.Text.Trim(),txtEServer.Text.Trim());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送邮件的自定义sendEmail方法如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public void sendEmail(string sender,string senderuser,string euser,string epwd,string receiver,string subject,string body,string eserver)&#123;</span><br><span class="line">jmail.MessageClass jmMessage=new jmail.MessageClass();</span><br><span class="line">jmMessage.Charset=<span class="string">&quot;GB3212&quot;</span>;</span><br><span class="line">jmMessage.ISOEncodeHeaders=<span class="literal">false</span>;</span><br><span class="line">jmMessage.From=sender;</span><br><span class="line">jmMessage.FromName=senderuser;</span><br><span class="line">jmMessage.Subject=subject;</span><br><span class="line">jmMessage.MailServerUserName=euser;</span><br><span class="line">jmMessage.MailServerPassword=epwd;</span><br><span class="line">jmMessage.AddRecipient(receiver,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(ddlAccessories.Items.Count&gt;0)&#123;</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;ddlAccessories.Items.Count;i++)&#123;</span><br><span class="line">string path=ddlAccessories.Items[i].Value;</span><br><span class="line">jmMessage.AddAttachment(@path,<span class="literal">true</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">jmMessage.Body=body;</span><br><span class="line"><span class="keyword">if</span>(jmMessage.Send(eserver,<span class="literal">false</span>))&#123;</span><br><span class="line">Page.RegisterClientScriptBlock(<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;&lt;script language=&quot;</span>javascript<span class="string">&quot;&gt;alert(&#x27;发送成功&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Page.RegisterClientScriptBlock(<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;&lt;script language=&quot;</span>javascript<span class="string">&quot;&gt;alert(&#x27;发送失败,请仔细检查邮件服务器的设置是否正确!&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">jmMessage=null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>页面定时刷新如何实现<br>1.在<head></head>中利用meta标签来定义,页面每隔30s刷新一次<br><Meta http-equiv="Refresh" Content="30"><br>2.在<head></head>中利用Response.AddHeader方法来定义,页面每隔10s刷新一次<br>&lt;%Response.AddHeader(“Refresh”,”10”);%&gt;<br>042.使用POP3协议接收电子邮件<br>使用POP3协议实现电子邮件接收功能时,首先需要客户端与服务器进行连接,在客户端连接到服务器之前,注意把端口设为POP3协议默认端口110号,客户端连接服务器成功后,服务器端返回相应的信息,在返回信息中,回应信息不像SMTP协议那样用丰富多变的数字表示,而是用两个字符表示,+OK或者-ERR.其中,+OK表示连接成功,-ERR表示连接失败,接下来,客户端输入”USER &lt;用户名&gt;”命令,该命令告诉服务器用户的用户名,这里需要注意,有些服务器是区分大小写的,服务器返回+OK后,客户端再输入”PASS &lt;口令&gt;”.用户名与密码都正确,服务器再次返回+OK,同时还返回一些邮箱的统计信息.例如,+OK 42071,不同的服务器返回的信息格式不太一样,所以可以用STAT命令来查看邮箱的情况.STAT命令的回应中有两个数字,分别表示邮件的数量和大小.如果信箱里有信,就可以用RETR命令来获取邮件的正文,RETR命令的格式为:RETR&lt;邮件编号&gt;.如果返回结果的第一行是+OK信息,则表示成功,第二行起便是邮件的正文,最后一行和SMTP协议一样,是一个单独的英文句号,表示邮件的结尾部分.<br>关键技术<br>使用POP3协议接收电子邮件,POP(post Office Protocol,邮局协议)用于电子邮件的接收和发送.现在常用第三版,所以称为POP3,通过POP协议,客户登录到服务器后就可以对自己邮件进行删除,也可以下载到本地操作.<br>POP3常用命令及说明<br>命令        说明<br>USER        此命令与下面的PASS命令都发送成功,将·使状态转换.<br>PASS        用户名所对应的密码<br>APOP        Digest是MD5消息摘要<br>STAT        请求服务器发回关于邮箱统计·资料(邮箱·总数和总字节数)<br>UIDL        回送邮件唯一标识符<br>LIST        回送邮件数量和每个邮件·大小<br>RETR        回送·由参数标识的·邮件·的·全部·文本·<br>DELE        服务器将·由·参数·标识·的·邮件·标记·为·删除,由QUIT命令·执行·<br>RSET        服务器·将重置所有标记为删除的邮件,用于撤销DELE命令<br>TOP        服务器将回送·由·参数·标识·的·邮件·的前·n行·内容·,n是·正整数.<br>NOOP        服务器·返回·一个·肯定·的·响应,不做任何·操作·<br>QUIT        退出<br>注意:SMTP服务器使用的·端口号·一般·为·25,POP服务器·使用·的端口号·一般为110.<br>设计过程·<br>1.新建·一个网站,将其命名为POP3,默认主页为Default.aspx<br>2.在页面·中添加5个TextBox文本框,分别·用于获取POP3服务器IP地址,登录邮箱名,邮箱·密码,读取第几封邮件·和·显示·读取出来的邮件·内容.<br>3.在页面中添加3个Button控件,分别用于连接邮箱,读取信件和退出邮箱.<br>4.首先·添加必要的命名空间.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=<span class="string">&quot;C#&quot;</span> AutoEventWireup=<span class="string">&quot;true&quot;</span> CodeFile=<span class="string">&quot;POP3.aspx.cs&quot;</span> Inherits=<span class="string">&quot;POP3&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html xmlns=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">head</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form <span class="built_in">id</span>=<span class="string">&quot;form1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">               服务器:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               用户名:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox2&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               密 码 :</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox3&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;256px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">                 &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                 &lt;asp:Button ID=<span class="string">&quot;Button3&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button3_Click&quot;</span> Text=<span class="string">&quot;连接邮箱&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">                 &amp;nbsp;</span><br><span class="line">                 &lt;asp:Button ID=<span class="string">&quot;Button4&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button4_Click&quot;</span> Text=<span class="string">&quot;退出邮箱&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">               操作:</span><br><span class="line">               读取第几封邮件:</span><br><span class="line">                &lt;asp:TextBox ID=<span class="string">&quot;TextBox4&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;16px&quot;</span> Width=<span class="string">&quot;317px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line"></span><br><span class="line">                  &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"></span><br><span class="line">                  &lt;asp:Button ID=<span class="string">&quot;Button2&quot;</span> runat=<span class="string">&quot;server&quot;</span> OnClick=<span class="string">&quot;Button2_Click&quot;</span> Text=<span class="string">&quot;读取邮件&quot;</span> Width=<span class="string">&quot;181px&quot;</span> /&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">             &lt;p&gt;</span><br><span class="line">                </span><br><span class="line">                 &lt;asp:TextBox ID=<span class="string">&quot;TextBox5&quot;</span> runat=<span class="string">&quot;server&quot;</span> Height=<span class="string">&quot;262px&quot;</span> Width=<span class="string">&quot;777px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Activities.Statements;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Net.Sockets;</span><br><span class="line">using System.ServiceModel.Security.Tokens;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.UI;</span><br><span class="line">using System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line">public partial class POP3 : System.Web.UI.Page</span><br><span class="line">&#123;</span><br><span class="line">    public static string <span class="built_in">pwd</span>;</span><br><span class="line">    public static int k;</span><br><span class="line">    public static TcpClient tcpc;</span><br><span class="line">    public static string popserver;</span><br><span class="line">    public static StreamReader sr;</span><br><span class="line">    public static string strRet;</span><br><span class="line">    public static string[] arrRet;</span><br><span class="line">    protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 连接邮箱 </span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    protected void Button3_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        string user=TextBox2.Text.ToString();</span><br><span class="line">        string pass=TextBox3.Text.ToString();</span><br><span class="line">        <span class="built_in">pwd</span> = pass;</span><br><span class="line">        popserver=TextBox1.Text.ToString();</span><br><span class="line">        tcpc= new TcpClient();</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            tcpc.Connect(popserver,110);</span><br><span class="line">            sr=new StreamReader(tcpc.GetStream(),Encoding.Default);</span><br><span class="line">            Response.Write(sr.ReadLine()+<span class="string">&quot;&lt;br&gt;&quot;</span>);//mail server的欢迎语</span><br><span class="line">            strRet = Logon(tcpc,user,pass);</span><br><span class="line">            <span class="keyword">if</span> (JudgeString(strRet)!=<span class="string">&quot;+OK&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Response.Write(<span class="string">&quot;对不起,没有这个用户/密码 不匹配&quot;</span>);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arrRet = StaticMailBox(tcpc);</span><br><span class="line">            <span class="keyword">if</span> (arrRet[0]!=<span class="string">&quot;+OK&quot;</span>) &#123;</span><br><span class="line">                Response.Write(<span class="string">&quot;出错了!&quot;</span>);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Response.Write(<span class="string">&quot;当前的用户&lt;font color=blue&gt;&quot;</span>+user+<span class="string">&quot;&lt;/font&gt;的信箱中共有&lt;font color=red&gt;&quot;</span> + arrRet[1]+<span class="string">&quot;&lt;/font&gt;封,共占&lt;font color=red&gt;&quot;</span> + arrRet[2]+<span class="string">&quot;&lt;/font&gt;Byte&quot;</span>);</span><br><span class="line">            k = Convert.ToInt32(arrRet[1]);</span><br><span class="line">            Button2.Enabled= <span class="literal">false</span>;</span><br><span class="line">            Button3.Enabled= <span class="literal">true</span>;</span><br><span class="line">            Button4.Enabled= <span class="literal">true</span>;</span><br><span class="line">            TextBox1.Enabled</span><br><span class="line">                = <span class="literal">true</span>;</span><br><span class="line">            TextBox2.Enabled = <span class="literal">true</span>;</span><br><span class="line">            TextBox3.Enabled= <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">           Response.Write(<span class="string">&quot;Could not connnect to Server!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 向POP3服务器发送各种·命令</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;tcpc&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;strCmd&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    private string SendPopCmd(TcpClient tcpc,string strCmd) &#123;</span><br><span class="line">        Byte[] arrcmd;</span><br><span class="line">        string strRet;</span><br><span class="line">        StreamReader sr;</span><br><span class="line">        Stream s;</span><br><span class="line">        s=tcpc.GetStream();</span><br><span class="line">        strCmd = strCmd+<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        arrcmd=Encoding.Default.GetBytes(strCmd.ToCharArray());</span><br><span class="line">        s = tcpc.GetStream();</span><br><span class="line">        s.Write(arrcmd,0,strCmd.Length);</span><br><span class="line">        sr = new StreamReader(tcpc.GetStream(),Encoding.Default);</span><br><span class="line">        strRet = sr.ReadLine();</span><br><span class="line">        <span class="built_in">return</span> strRet;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// StaticMailBox方法用于获取指定的邮箱的当前状态信息,包括邮箱中邮件的数量,邮件的总大小信息.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;tcpc&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    private string[] StaticMailBox(TcpClient tcpc)</span><br><span class="line">    &#123;</span><br><span class="line">        string strRet;</span><br><span class="line">        strRet = SendPopCmd(tcpc,<span class="string">&quot;stat&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (JudgeString(strRet)!=<span class="string">&quot;+OK&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="string">&quot;-ERR -ERR&quot;</span>.Split(<span class="string">&quot;&quot;</span>.ToCharArray());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            string[] arrRet = strRet.Split(<span class="string">&quot;&quot;</span>.ToCharArray());</span><br><span class="line">            <span class="built_in">return</span> arrRet;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 用于判断向服务器发送命令之后返回的字符开头是-ERR还是+OK,如果开头是-ERR,则返回-ERR,如果是+OK,则返回字符+OK.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;strRet&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    private string JudgeString(string strRet)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (strRet.Substring(0,3)!=<span class="string">&quot;+OK&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="string">&quot;-ERR&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="string">&quot;+OK&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 对登录用户身份进行验证,通过SendPopCmd方法向服务器发送<span class="string">&quot;user+用户名&quot;</span>和<span class="string">&quot;pass+密码&quot;</span>两条命令,并返回获取的信息.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;tcpc&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;user&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;pass&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    private string Logon(TcpClient tcpc, string user, string pass)</span><br><span class="line">    &#123;</span><br><span class="line">        string strRet;</span><br><span class="line">        strRet = SendPopCmd(tcpc,<span class="string">&quot;user&quot;</span>+user);</span><br><span class="line">        strRet= SendPopCmd(tcpc,<span class="string">&quot;pass&quot;</span>+pass);</span><br><span class="line">        <span class="built_in">return</span> strRet;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 读取信件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    protected void Button2_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Convert.ToInt32(TextBox4.Text)&gt;k|| Convert.ToInt32(TextBox4.Text)&lt;=0)</span><br><span class="line">        &#123;</span><br><span class="line">            ClientScript.RegisterStartupScript(typeof(Page),<span class="string">&quot;&quot;</span>,<span class="string">&quot;&lt;script&gt;alert(&#x27;输入的索引错误&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            string[] arrRets;</span><br><span class="line">            arrRets = PopMail(tcpc,Convert.ToInt32(TextBox4.Text));</span><br><span class="line">            TextBox5.Text = $<span class="string">&quot;当前是第&#123;TextBox4.Text&#125;封信\n邮件日期:&#123;arrRets[1]&#125;\n发信人:&#123;arrRets[2]&#125;\n收信人:&#123;arrRets[3]&#125;\n邮件主题:&#123;arrRets[4]&#125;\n邮件内容:&#123;arrRets[5]&#125;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 接收邮件的各个信息,其中i是要读取的邮件的索引数,通过参数i PopMail方法可以读取指定的邮件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;tcpc&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;v&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    private string[] PopMail(TcpClient tcpc, int i)</span><br><span class="line">    &#123;</span><br><span class="line">        string strRet;</span><br><span class="line">        string[] arrRet = new string[20];</span><br><span class="line">        bool strBody = <span class="literal">false</span>;</span><br><span class="line">        string[] arrTemp;</span><br><span class="line">        strRet = SendPopCmd(tcpc,<span class="string">&quot;retr&quot;</span>+i.ToString());</span><br><span class="line">        <span class="keyword">if</span> (JudgeString(strRet)!=<span class="string">&quot;+OK&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="string">&quot;-ERR -ERR&quot;</span>.Split(<span class="string">&quot;&quot;</span>.ToCharArray());</span><br><span class="line">        &#125;</span><br><span class="line">        StreamReader sr;</span><br><span class="line">        sr = new StreamReader(tcpc.GetStream(),Encoding.Default);</span><br><span class="line">        Response.Write(<span class="string">&quot;\n&lt;BR&gt;&quot;</span>);</span><br><span class="line">        Response.Write(<span class="string">&quot;&lt;font color=red&gt;\n&lt;BR&gt;&quot;</span>);</span><br><span class="line">        arrRet[0] = <span class="string">&quot;+OK&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (sr.Peek()!=46)</span><br><span class="line">        &#123;</span><br><span class="line">            strRet = sr.ReadLine();</span><br><span class="line">            arrTemp = strRet.Split(<span class="string">&quot;:&quot;</span>.ToCharArray());</span><br><span class="line">            <span class="keyword">if</span> (strRet == <span class="string">&quot;&quot;</span>)</span><br><span class="line">                strBody = <span class="literal">true</span>;//现在开始接收Body的信息</span><br><span class="line">            <span class="keyword">if</span> (arrTemp[0]==<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">                arrRet[1] = arrTemp[1];//信件的发送日期.</span><br><span class="line">            <span class="keyword">if</span> (arrTemp[0]==<span class="string">&quot;From&quot;</span>)</span><br><span class="line">                arrRet[2] = (arrTemp[1].Substring(arrTemp[1].LastIndexOf(<span class="string">&quot;&lt;&quot;</span>)+1).Replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>));//发信人</span><br><span class="line">            <span class="keyword">if</span> (arrTemp[0] == <span class="string">&quot;To&quot;</span>)</span><br><span class="line">                arrRet[3] = (arrTemp[1].Substring(arrTemp[1].LastIndexOf(<span class="string">&quot;&lt;&quot;</span>) + 1).Replace(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&quot;</span>));//收信人</span><br><span class="line">            <span class="keyword">if</span> (arrTemp[0] == <span class="string">&quot;Subject&quot;</span>)</span><br><span class="line">                arrRet[4] = arrTemp[1].ToString();//主题</span><br><span class="line">            <span class="keyword">if</span> (strBody)</span><br><span class="line">                arrRet[5] = arrRet[5] + strRet + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> arrRet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>POP3协议接收电子邮件与Jmail组件接收电子邮件的功能对比<br>POP3协议是利用系统本身自带的功能来实现对电子邮件的接收,虽然使用POP3协议接收电子邮件相对简洁,但是其功能不是很完善,存在许多缺点,而利用Jmail组件接收电子邮件相对POP3协议显得更为简洁方便,而且功能相当强大,现在大多数的电子邮件收发系统都是通过Jmail组件来开发的.<br>2.2.高端应用:自定义组件应用.<br>043.自定义GridView数据绑定组件开发<br>实例说明<br>当GridView控件的数据源为空时,不显示表头,界面非常不美观.<br>关键技术<br>1.实现GridView控件未绑定数据源或绑定的数据为空时,使用Table标记静态设置表头信息.<br>2.当GridView控件绑定数据源中的数据为空时,给数据源插入一条空记录.<br>3.自定义GridView控件,在自定义控件内部实现当未绑定数据源或绑定的数据为空时也显示表头.<br>前两种方案的适应性不强,每次应用都要根据实际情况进行编码,而第三种方案只需将自定义的GridView拖动到应用处即可,所以本实例只介绍第三种方案,实现思路是继承ASP.NET自带的GridView控件,并重写Render方法,在Render方法中判断,当自定义GridView控件绑定的数据为空时根据GridView控件的列信息创建表头.<br>设计过程<br>1.EnableEmptyContentRender属性表示当自定义的GridView控件绑定的数据为空时是否显示表头.属性值设置为true时显示表头,false不显示表头,自定义GridView控件的属性代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.UI;</span><br><span class="line">using System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// GridView 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class GridView : System.Web.UI.WebControls.GridView</span><br><span class="line">&#123;</span><br><span class="line">    [Category(<span class="string">&quot;Appearance&quot;</span>)]</span><br><span class="line">    [DefaultValue(<span class="literal">true</span>)]</span><br><span class="line">    [Description(<span class="string">&quot;数据源为空时是否呈现表头&quot;</span>)]</span><br><span class="line">    [TypeConverter(typeof(BooleanConverter))]</span><br><span class="line">    public bool EnableEmptyContentRender</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123;</span><br><span class="line">            <span class="keyword">if</span> (ViewState[<span class="string">&quot;EnableEmptyContentRender&quot;</span>]==null)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> Convert.ToBoolean(ViewState[<span class="string">&quot;EnableEmptyContentRender&quot;</span>]);</span><br><span class="line">           &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; ViewState[<span class="string">&quot;EnableEmptyContentRender&quot;</span>] = value; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [Category(<span class="string">&quot;Appearance&quot;</span>)]</span><br><span class="line">    [DefaultValue(<span class="string">&quot;&quot;</span>)]</span><br><span class="line">    [Description(<span class="string">&quot;数据源为空时表格样式类&quot;</span>)]</span><br><span class="line">    public string EmptyDataTableCssClass &#123;</span><br><span class="line">        get &#123;</span><br><span class="line">            <span class="keyword">if</span> (ViewState[<span class="string">&quot;EmptyDataTableCssClass&quot;</span>]==null)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> Convert.ToString(ViewState[<span class="string">&quot;EmptyDataTableCssClass&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123;</span><br><span class="line">            ViewState[<span class="string">&quot;EmptyDataTableCssClass&quot;</span>] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [Category(<span class="string">&quot;Appearance&quot;</span>)]</span><br><span class="line">    [DefaultValue(<span class="string">&quot;&quot;</span>)]</span><br><span class="line">    [Description(<span class="string">&quot;数据源为空时标题行样式类&quot;</span>)]</span><br><span class="line">    public string EmptyDataTitleRowCssClass</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ViewState[<span class="string">&quot;EmptyDataTitleRowCssClass&quot;</span>] == null)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> Convert.ToString(ViewState[<span class="string">&quot;EmptyDataTitleRowCssClass&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            ViewState[<span class="string">&quot;EmptyDataTitleRowCssClass&quot;</span>] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [Category(<span class="string">&quot;Appearance&quot;</span>)]</span><br><span class="line">    [DefaultValue(<span class="string">&quot;&quot;</span>)]</span><br><span class="line">    [Description(<span class="string">&quot;数据源为空时内容行样式类&quot;</span>)]</span><br><span class="line">    public string EmptyDataContentRowCssClass</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ViewState[<span class="string">&quot;EmptyDataContentRowCssClass&quot;</span>] == null)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;没有可显示的数据记录.&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> Convert.ToString(ViewState[<span class="string">&quot;EmptyDataContentRowCssClass&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            ViewState[<span class="string">&quot;EmptyDataContentRowCssClass&quot;</span>] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="function"><span class="title">GridView</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">        // TODO: 在此处添加构造函数逻辑</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 重写Control类的Render方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;writer&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    protected override void Render(HtmlTextWriter writer)</span><br><span class="line">    &#123;</span><br><span class="line">        //如果GridView数据为空</span><br><span class="line">        <span class="keyword">if</span> (EnableEmptyContentRender &amp;&amp; (this.Rows.Count == 0) || this.Rows[0].RowType==System.Web.UI.WebControls.DataControlRowType.EmptyDataRow)</span><br><span class="line">        &#123;</span><br><span class="line">            RenderEmptyContent(writer);//调用自定义呈现方法</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            base.Render(writer);//调用基类呈现方法</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// GridView数据为空时呈现的样式</span><br><span class="line">    /// 1.创建一个Table对象</span><br><span class="line">    /// 2.根据GridView风格设置Table对象的样式属性,使Table对象的样式与GridView的样式保持一致</span><br><span class="line">    /// 3.创建第一个TableRow对象,并设置TableRow对象的样式及高度.</span><br><span class="line">    /// 4.遍历GridView控件的列,根据列信息创建TableRow对象的单元格TableCell,并设置单元格内显示的文本;</span><br><span class="line">    /// 5.创建第二个TableRow对象,并设置TableRow的样式.</span><br><span class="line">    /// 6.创建第二个TableRow对象的单元格,在单元格内显示当GridView数据为空时的提示信息(如“没有可显示的数据记录.”)</span><br><span class="line">    /// 7.将创建的Table对象发送给HtmlTextWriter对象呈现.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;writer&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    protected virtual void RenderEmptyContent(HtmlTextWriter writer)</span><br><span class="line">    &#123;</span><br><span class="line">        Table t=new Table();    //创建一个Table对象.</span><br><span class="line">        t.GridLines = this.GridLines;   //设置Table的线型与GridView相同</span><br><span class="line">        t.BorderStyle = this.BorderStyle;   //设置边界风格与GridView相同</span><br><span class="line">        t.BorderWidth = 0;</span><br><span class="line">        t.CellPadding = 1;</span><br><span class="line">        t.CellSpacing = 1;</span><br><span class="line">        t.HorizontalAlign = this.HorizontalAlign;   //设置水平对齐风格与GridView相同</span><br><span class="line">        t.Width= this.Width;//设置Table宽度与GridView相同.</span><br><span class="line">        t.CopyBaseAttributes(this);</span><br><span class="line">        t.BorderColor = this.BorderColor;   //设置边界颜色与GridView相同</span><br><span class="line">        t.EnableTheming = this.EnableTheming;   //设置主题是否生效与GridView相同</span><br><span class="line">        t.ForeColor=this.ForeColor; //设置前景色与GridView相同</span><br><span class="line">        t.SkinID= this.SkinID;  //设置皮肤样式与GridView相同</span><br><span class="line">        t.ToolTip = this.ToolTip;   //设置提示信息与GridView相同</span><br><span class="line">        t.Visible=this.Visible;     //设置是否可见与GridView相同</span><br><span class="line">        t.Font.CopyFrom(this.Font); //设置字体对象与GridView相同</span><br><span class="line">        //设置Table的层叠样式表</span><br><span class="line">        t.CssClass =this.EmptyDataTableCssClass!=<span class="string">&quot;&quot;</span>?this.EmptyDataTableCssClass:this.CssClass;</span><br><span class="line">        TableRow row=new TableRow();    //创建Table行</span><br><span class="line">        row.CssClass=this.EmptyDataTableCssClass;//设置行的层叠样式表</span><br><span class="line">        row.Height = 25;</span><br><span class="line">        t.Rows.Add(row);    //将行添加到Table对象中</span><br><span class="line">        //根据GridView中的字段创建Table行的单元格</span><br><span class="line">        foreach (DataControlField field <span class="keyword">in</span> this.Columns)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.Visible)</span><br><span class="line">            &#123;</span><br><span class="line">                TableCell cell=new TableCell();//创建单元格</span><br><span class="line">                cell.Text = field.HeaderText;//设置单元格文本</span><br><span class="line">                row.Cells.Add(cell);        //将单元格添加到行中</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TableRow row2=new TableRow();   //新建第二行</span><br><span class="line">        row2.CssClass = this.EmptyDataContentRowCssClass;   //设置行的层叠样式表</span><br><span class="line">        t.Rows.Add(row2);</span><br><span class="line">        TableCell msgCell=new TableCell();</span><br><span class="line">        <span class="keyword">if</span> (this.EmptyDataTemplate!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            this.EmptyDataTemplate.InstantiateIn(msgCell);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            msgCell.Text=this.EmptyDataText;    //设置空数据提示信息</span><br><span class="line">        &#125;</span><br><span class="line">        msgCell.HorizontalAlign = HorizontalAlign.Center;//设置单元格的水平对齐</span><br><span class="line">        msgCell.ColumnSpan = this.Columns.Count;//设置单元格的列合并</span><br><span class="line">        row2.Cells.Add(msgCell);</span><br><span class="line">        t.RenderControl(writer);    //将Table发送给HTML呈现流</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秘笈心法<br>如何实现单击表格行打开另一页,并传递参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">protected void gvGoodsInfo_RowDataBound(object sender, GridViewRowEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.Row.RowType==DataControlRowType.DataRow)</span><br><span class="line">        &#123;</span><br><span class="line">            e.Row.Attributes.Add(<span class="string">&quot;onclick&quot;</span>, <span class="string">&quot;window.open(&#x27;Default.aspx?title=&quot;</span> + e.Row.Cells[1].Text +<span class="string">&quot;&#x27;);&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>044.自定义OurPager分页组件开发<br>关键技术<br>1.自定义分页控件OurPager使用说明<br>分页控件只需设置两个属性,即RecordCount(记录总数)和PageSize(页尺寸)即可自动计算分页的页数并绘制控件呈现<br>以下是在用户管理页的Page_Load事件中设置分页控件属性的代码,首先调用SelectUserInfo方法获得数据源记录总数(第一个参数为-1时,返回列表中的第一行,第一列存储的是数据源的记录总数),其次设置分页控件的RecordCount属性,最后调用自定义方法LoadData加载GridView数据.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">protected void Page_Load(object sender,EventArgs e)&#123;</span><br><span class="line">List&lt;UserInfo&gt; cntList=new List&lt;UserInfo&gt;();</span><br><span class="line">cntList=UserInfoService.Instance.SelectUserInfo(-1,OurPager1.PageSize);//分页控件默认页尺寸为10</span><br><span class="line">OurPager1.RecordCount=cntList[0].UserID;//取总记录数</span><br><span class="line"><span class="keyword">if</span>(!this.IsPostBack)&#123;</span><br><span class="line">LoadData(OurPager1.CurrentPageIndex);//当前页索引默认为0</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示:由于自定义分页控件的PageSize(页尺寸)默认为10,所以当设置RecordCount属性时分页控件就开始自动计算分页的页数并绘制控件呈现.<br>分页控件还提供了一个PageChanged事件,如果已实现该事件,单击分页控件任意按钮时触发该事件,开发者只需在这个事件上编写返回指定页数据的代码即可.<br>在用户管理页(UserList.aspx)中,自定义分页控件的PageChanged事件代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected void OurPager1_PageChanged(object sender,ServerControl.PageArgs e)&#123;</span><br><span class="line">LoadData(e.NewPageIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在PageChanged事件中,首先从参数对象e的NewPageIndex属性中取出当前页索引,其次调用自定义方法LoadData加载GridView当前页的数据<br>2.使用LINQ实现分页功能<br>本实例中使用LINQ实现返回指定页数据的功能,主要代码如下:<br>SelectUserInfo().Skip((CurrentPageIndex-1)*PageSize).Take(PageSize).ToList();<br>上述代码中,SelectUserInfo表示返回所有的用户信息:Skip((CurrentPageIndex-1)*PageSize)表示跳过当前页之前的所有记录;Take(PageSize)表示取指定数量的记录:ToList表示将取到的数据转换成List<T>类型.<br>3.自定义控件的应用范围<br>本实例采用开发自定义分页控件的方式实现分页方案,如下情况可以选择开发自定义控件:<br>    需要将两个或多个内置的Web控件组合在一起.<br>    需要扩展内置控件的功能时<br>    需要开发与现在任何控件完全不同的控件时<br>4.CompositeControl类<br>如果要开发自定义组合控件,建议将CompositeControl类作为自定义组合控件的超类(基类),与其他创建组合控件的方式相比,其最大的优点是在控件呈现内容的方法中看不到任何HTML,只需重写CreateChildControls方法,在该方法中创建所需要的子控件,并将创建的子控件添加到自定义组合控件的Controls集合中.<br>所有自定义组合控件的子控件触发的事件都会传递到事件冒泡方法OnBubbleEvent中,只需要设置各个子控件的命令名称,在重写OnBubbleEvent方法根据命令名称判断是哪个子控件触发的事件,然后做出相应的处理.<br>下面简单介绍自定义组合控件的代码执行顺序:先执行创建子控件方法CreateChildControls,然后执行呈现内容方法RenderContents将子控件呈现在组合控件上,最后才执行事件冒泡方法OnBubbleEvent,冒泡方法执行的代码涉及重新刷新组合控件内容时调用的基类的RecreateChildControls方法再重新创建一遍子控件即可.<br>5.属性(Attribute)<br>C#允许在类和成员上声明特性,这个特性也是一个类,可在运行时解释类和类成员的行为.这个特性也称为属性Attribute.<br>允许在其上声明属性Attribute的类型有:<br>类<br>类成员:包括常量,字段,方法,属性,事件,索引器,运算符重载,构造函数和析构函数<br>结构<br>接口<br>接口成员:包括方法,属性,事件和索引器<br>枚举和枚举成员<br>委托<br>在代码中指定属性时,将属性名称放在方括号中,简单属性指定如下所示:<br>[MyAttribute]<br>属性Attribute可分为.Net框架提供的属性和自定义属性:.Net框架提供了数百个预先定义好的,内置的属性，这些属性都是从System.Attribute类派生而来,并且这些属性与特定的对象一起使用.例如,System.SerializableAttribute属性(别名是Serializable),应用该属性(Attribute)的类或类成员可将其内容串行到某个存储介质,例如,将对象的内容序列化成XML,需要在该对象的类上应用Seralizable属性.<br>设计过程<br>1.创建自定义分页控件<br>创建自定义分页控件的类,类名为OurPager,OurPager类继承自CompositeControl类.代码如下:<br>[DefaultProperty(“RecordCount”)]<br>[ToolboxData(“&lt;{0}:Ourpager runat=server&gt;&lt;/{0}:OurPager&gt;”)]<br>public class OurPager:CompositeControl{}<br>在OurPager类声明的上面设置了两个属性(Attribute),DefaultProperty属性表示OurPager类的默认属性是RecordCount,ToolboxData属性表示将自定义分页控件从工具箱拖到设计页面时生成的默认标记.在用户管理页中,自定义分页控件的默认标记为:<br>&lt;cc1:OurPager ID=”OurPager1” runat=”server” onpagechanged=”OurPager1_PageChanged”/&gt;<br>2.声明自定义分页控件的属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.UI;</span><br><span class="line">using System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// OurPager 的摘要说明</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// </span><br><span class="line">[DefaultProperty(<span class="string">&quot;RecordCount&quot;</span>)]</span><br><span class="line">[ToolboxData(<span class="string">&quot;&lt;&#123;0&#125;:OurPager runat=server&gt;&lt;/&#123;0&#125;:OurPager&gt;&quot;</span>)]</span><br><span class="line">public class OurPager:CompositeControl</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="function"><span class="title">OurPager</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">        // TODO: 在此处添加构造函数逻辑</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 页数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private int PageCount &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line">    [Category(<span class="string">&quot;Behavior&quot;</span>)]</span><br><span class="line">    [DefaultValue(0)]</span><br><span class="line">    [Description(<span class="string">&quot;数据源中符合条件的记录数&quot;</span>)]</span><br><span class="line">    [TypeConverter(typeof(Int32Converter))]</span><br><span class="line">    public int RecordCount &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    [Category(<span class="string">&quot;Behavior&quot;</span>)]</span><br><span class="line">    [DefaultValue(10)]</span><br><span class="line">    [Description(<span class="string">&quot;页尺寸/每页记录数&quot;</span>)]</span><br><span class="line">    [TypeConverter(typeof(Int32Converter))]</span><br><span class="line">    public int PageSize &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line"></span><br><span class="line">    [Category(<span class="string">&quot;Behavior&quot;</span>)]</span><br><span class="line">    [DefaultValue(0)]</span><br><span class="line">    [Description(<span class="string">&quot;当前页索引&quot;</span>)]</span><br><span class="line">    [TypeConverter(typeof(Int32Converter))]</span><br><span class="line">    public int CurrentPageIndex &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line"></span><br><span class="line">    private LinkButton _btnFirst;</span><br><span class="line">    private Label _lblPage = new Label();</span><br><span class="line">    private TextBox _txtToPage=new TextBox();</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 计算页数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;recordCount&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;pageSize&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    private void CalculatePageCount(int recordCount, int pageSize) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pageSize==0)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        int pagCnt = 0;</span><br><span class="line">        pagCnt = recordCount / pageSize;    //用记录总数整除页尺寸</span><br><span class="line">        <span class="keyword">if</span> (recordCount%pageSize&gt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            pagCnt++;                       //页数加1</span><br><span class="line">        &#125;</span><br><span class="line">        PageCount = pagCnt;                 //设置页数属性</span><br><span class="line">        RecreateChildControls();            //重新绘制控件</span><br><span class="line">    &#125;</span><br><span class="line">    [Category(<span class="string">&quot;Action&quot;</span>)]</span><br><span class="line">    public event PageChangedHandler PageChanged;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 页改变事件委托</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    public delegate void PageChangedHandler(object sender,PageArgs e);</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 实现创建子控件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    protected override void <span class="function"><span class="title">CreateChildControls</span></span>() &#123;</span><br><span class="line">        int recCnt = RecordCount;</span><br><span class="line">        int curPageIdx = CurrentPageIndex;</span><br><span class="line">        int pageCnt = PageCount;</span><br><span class="line">        int pagSiz = PageSize;</span><br><span class="line">        Controls.Clear();               //清空子控件</span><br><span class="line">        //5.实现PageChanged事件 在运行时,单击分页控件上的任意按钮(子控件),都会将子控件触发的事件传递到事件冒泡方法OnBubbleEvent中,在CreateChildControls方法中创建子控件对象时已经设置了子控件的命令名称.设置子控件命令名称代码如下:</span><br><span class="line">        _btnFirst = new LinkButton</span><br><span class="line">        &#123;</span><br><span class="line">            Text = <span class="string">&quot;首页&quot;</span>,</span><br><span class="line">            CommandName=((int)PageChangedType.atFirst).ToString(),  //设置子控件的命令名称</span><br><span class="line">            CommandArgument=<span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Controls.Add(_btnFirst);            //将首页按钮添加到分页控件</span><br><span class="line">        ChildControlsCreated = <span class="literal">true</span>;        //设置子控件已创建</span><br><span class="line">        CalculateButtonEnable();            //计算分页按钮可见</span><br><span class="line">        CalculateNumericBtnVisible();       //计算页码翻页按钮可见</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 所以在分页控件中只需重写基类的OnBubbleEvent方法,在该方法中根据命令判断是哪个子控件触发的事件然后做相应的处理.</span><br><span class="line">    /// 首先判断触发的是不是命令事件,其次从参数中取出子控件类型枚举PageChangedType和命令名称cmdArg;最后调用自定义方法DoPageChanged,由该方法实现事件的详细执行过程</span><br><span class="line">    /// 子控件在创建时都制定了CommandName属性,所以子控件触发的应该是命令事件.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;source&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    protected override bool OnBubbleEvent(object <span class="built_in">source</span>, EventArgs args)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (args is CommandEventArgs)       //是命令事件</span><br><span class="line">        &#123;</span><br><span class="line">            //取出单击哪类子控件触发的事件</span><br><span class="line">            PageChangedType cmdName=(PageChangedType)Convert.ToInt32(((CommandEventArgs)args).CommandName);</span><br><span class="line">            string cmdArg = ((CommandEventArgs)args).CommandArgument.ToString();</span><br><span class="line">            DoPageChanged(cmdName, cmdArg);     //执行处理自定义分页的过程</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> base.OnBubbleEvent(<span class="built_in">source</span>, args);    //执行父类的冒泡方法</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 在自定义DoPageChanged中,如果判断是单击<span class="string">&quot;首页&quot;</span>按钮触发的事件,将当前页索引(存储在NewPageIndex变量中)设置为1;其次如果分页控件已实现PageChanged事件,那么执行PageChanged事件.</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;cmdName&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;cmdArg&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    private void DoPageChanged(PageChangedType ty, string cmdArg)</span><br><span class="line">    &#123;</span><br><span class="line">      int currentPageIdx=CurrentPageIndex;</span><br><span class="line">        int pageCnt=PageCount;</span><br><span class="line">        int NewPageIndex = CurrentPageIndex;        //设置新页索引</span><br><span class="line">        switch (ty)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> PageChangedType.atFirst:</span><br><span class="line">                NewPageIndex = 1;                   //新页索引设为1</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> PageChangedType.atLast:</span><br><span class="line">                NewPageIndex = PageCount;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">            default:</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (PageChanged!=null)</span><br><span class="line">        &#123;</span><br><span class="line">            PageArgs args = new PageArgs(NewPageIndex);     //设置页改变事件参数</span><br><span class="line">            PageChanged(this, args);                        //执行页改变事件代码</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        CurrentPageIndex= NewPageIndex;                     //最终确认当前页索引</span><br><span class="line">        CalculateButtonEnable();</span><br><span class="line">        CalculateNumericBtnVisible();</span><br><span class="line">        _lblPage.Text = string.Format(<span class="string">&quot;第&#123;0&#125;页/第&#123;1&#125;页&quot;</span>,NewPageIndex,pageCnt);</span><br><span class="line">        _txtToPage.Text = NewPageIndex.ToString();</span><br><span class="line">        //如果是向前或向后翻页码则要重新创建子控件</span><br><span class="line">        //秘笈心法:强制刷新自定义分页控件</span><br><span class="line">        //涉及重新刷新组合控件内容,调用基类的RecreateChildControls方法再重新创建一遍子控件</span><br><span class="line">        <span class="keyword">if</span> (ty==PageChangedType.atNumeric &amp;&amp; (cmdArg==<span class="string">&quot;back&quot;</span>||cmdArg==<span class="string">&quot;front&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            RecreateChildControls();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 4.实现呈现内容的方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;writer&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    protected override void RenderContents(HtmlTextWriter writer) &#123;</span><br><span class="line">        EnsureChildControls();          //确认子控件是否被创建</span><br><span class="line">        writer.RenderBeginTag(HtmlTextWriterTag.Tr);    //写行的开始标记&lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">        //...</span><br><span class="line">        writer.RenderBeginTag(HtmlTextWriterTag.Td);    //写单元格开始标记&lt;td&gt;</span><br><span class="line">        _btnFirst.RenderControl(writer);                //将首页按钮呈现在分页控件上</span><br><span class="line">        writer.RenderEndTag();                          //写单元格结束标记&lt;/td&gt;</span><br><span class="line">        //...</span><br><span class="line">        writer.RenderEndTag();                          //写行的结束标记</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 说明:在自定义分页控件中,重写了基类的TagKey属性,将TagKey属性值指定为HtmlTextWriterTag.Table,表示在RenderContents方法中按Table格式呈现子控件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    protected override HtmlTextWriterTag TagKey =&gt; HtmlTextWriterTag.Table;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// </span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    private void <span class="function"><span class="title">CalculateNumericBtnVisible</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        throw new NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// </span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">    private void <span class="function"><span class="title">CalculateButtonEnable</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        throw new NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3.超级网购:网上购物与银行在线支付<br>045.购物商城网创建个人店铺<br>关键技术<br>在创建个人店铺前判断注册用户是否已经创建了个人店铺,如果没有创建,登陆后将会跳转到创建个人店铺页CreatePersonShop.aspx;如果已经创建,则会跳转到个人店铺管理页Shop_Manage.aspx.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public void CheckIfExist(string username,string password) &#123;</span><br><span class="line">      //创建数据库连接对象</span><br><span class="line">      SqlConnection myconn = new SqlConnection(ConfigurationManager.AppSettings[<span class="string">&quot;ConStr&quot;</span>]);</span><br><span class="line">      //定义一个字符串型的SQL语句</span><br><span class="line">      string strsql = $<span class="string">&quot;select * from Users where UserName=&#x27;&#123;username&#125;&#x27; and Password=&#x27;&#123;password&#125;&#x27;&quot;</span>;</span><br><span class="line">      //声明所创建的数据库连接类conn</span><br><span class="line">      //DBConnection conn = new DBConnection();</span><br><span class="line">      SqlCommand sqlCommand=new SqlCommand(strsql, myconn);</span><br><span class="line"></span><br><span class="line">      SqlDataReader dr = sqlCommand.ExecuteReader();</span><br><span class="line">      <span class="keyword">if</span> (dr.Read())</span><br><span class="line">      &#123;</span><br><span class="line">          //定义一个Session变量</span><br><span class="line">          Session[<span class="string">&quot;username&quot;</span>] = username;</span><br><span class="line">          //定义一个查询操作的SQL语句.</span><br><span class="line">          string sql = $<span class="string">&quot;select count(*) from DianPudetail where DianPuUser=&#x27;&#123;username&#125;&#x27;&quot;</span>;</span><br><span class="line">          SqlCommand mydb=new SqlCommand(sql, myconn);</span><br><span class="line">          ///如果已经创建个人店铺,则跳转到个人店铺管理页</span><br><span class="line">          <span class="keyword">if</span> (mydb.ExecuteScalar()!=null)</span><br><span class="line">          &#123;</span><br><span class="line">              Response.Redirect(<span class="string">&quot;Shop_Mange.aspx&quot;</span>);</span><br><span class="line">          &#125;//如果没有创建个人店铺,则跳转到创建个人店铺页</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              Response.Redirect(<span class="string">&quot;CreatPresonShop.aspx&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在实现上传个人店铺店标时,将上传的店标(图片)以二进制形式存储到数据库中(主要应用到了HttpPostedFile类的InputStream属性,Stream类的Read方法和Byte数据类型).<br>设计过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Web;</span><br><span class="line">using System.Web.UI;</span><br><span class="line">using System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line">public partial class NetShop : System.Web.UI.Page</span><br><span class="line">&#123;</span><br><span class="line">    protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public void <span class="function"><span class="title">CheckIfFirst</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (!IsPostBack)</span><br><span class="line">        &#123;</span><br><span class="line">            //定义查询店铺类型信息的Sql语句</span><br><span class="line">            string strsql = <span class="string">&quot;select * from PType where parentId=0&quot;</span>;</span><br><span class="line">            //创建命令对象</span><br><span class="line">            SqlConnection myconn = new SqlConnection(ConfigurationManager.AppSettings[<span class="string">&quot;ConStr&quot;</span>]);</span><br><span class="line">            SqlCommand mycomd=new SqlCommand(strsql,myconn);</span><br><span class="line">            //打开数据库连接</span><br><span class="line">           myconn.Open();</span><br><span class="line">            //创建数据阅读器</span><br><span class="line">            SqlDataReader mydr=mycomd.ExecuteReader();</span><br><span class="line">            Select1.DataSource= mydr;</span><br><span class="line">            Select1.DataTextField = <span class="string">&quot;category_name&quot;</span>;</span><br><span class="line">            Select1.DataValueField = <span class="string">&quot;category_ID&quot;</span>;</span><br><span class="line">            Select1.DataBind();//从数据库绑定数据信息</span><br><span class="line">            mydr.Close();//关闭数据阅读器</span><br><span class="line">            myconn.Close();//关闭数据库连接</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 提交</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    protected void Button1_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        string shopName = TextBox1.Text;//店铺名称</span><br><span class="line">        string shopClass = Select1.SelectedValue;//店铺类别</span><br><span class="line">        string shopItem = TextBox3.Text;//店铺主营项目</span><br><span class="line">        string shopJieShao=JieShao.Text;//店铺简介</span><br><span class="line">        <span class="keyword">if</span> (shopJieShao==null)</span><br><span class="line">        &#123;</span><br><span class="line">            shopJieShao = <span class="string">&quot;&quot;</span>;//店铺公告</span><br><span class="line">        &#125;</span><br><span class="line">        string strsql = $<span class="string">&quot;select * from DianPuDetail where DianPuName=&#x27;&#123;shopName&#125;&#x27;&quot;</span>;//定义一个查询店铺信息的操作</span><br><span class="line">        SqlConnection myconn = new SqlConnection(ConfigurationManager.AppSettings[<span class="string">&quot;ConStr&quot;</span>]);</span><br><span class="line">        SqlCommand <span class="built_in">command</span> = new SqlCommand(strsql,myconn);</span><br><span class="line">        myconn.Open();</span><br><span class="line">        SqlDataReader dr=command.ExecuteReader();</span><br><span class="line">        string imgPath =uploadFile.PostedFile.FileName;//获取上传图片路径</span><br><span class="line">        string imgName=imgPath.Substring(imgPath.LastIndexOf(<span class="string">&quot;\\&quot;</span>)+ 1);//获取上传文件名称</span><br><span class="line">        string imgExtend = imgPath.Substring(imgPath.LastIndexOf(<span class="string">&quot;.&quot;</span>)+1);//获取上传文件扩展名</span><br><span class="line">        Image imageupload = null;//判断上传路径是否为空</span><br><span class="line">        <span class="keyword">if</span> (uploadFile.PostedFile.FileName!=<span class="string">&quot;&quot;</span>)//判断上传路径是否为空</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dr.Read())//判断数据库中是否已存在创建的店铺</span><br><span class="line">            &#123;</span><br><span class="line">                Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;抱歉,此店名已经存在!&#x27;);location=&#x27;javascript:history.go(-1)&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            //判断上传图片的格式</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(uploadFile.PostedFile.FileName!=<span class="string">&quot;&quot;</span> &amp;&amp; (Path.GetExtension(uploadFile.PostedFile.FileName)!=<span class="string">&quot;.gif&quot;</span>)&amp;&amp; Path.GetExtension(uploadFile.PostedFile.FileName)!=<span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;上传的图片格式必须为gif或jpg!&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                dr.Close();//关闭数据阅读器</span><br><span class="line">                //获取登录用户名存储在定义的字符串类型的变量username</span><br><span class="line">                string username = Session[<span class="string">&quot;username&quot;</span>].ToString();</span><br><span class="line">                //定义插入的SQL字符串</span><br><span class="line">                string sqlstr = $<span class="string">&quot;insert into DianPuDetail(DianPuName,DianPuUser,DainPuClass,DianPuItem,DianPuJieshao)values(&#x27;&#123;shopName&#125;&#x27;,&#x27;&#123;username&#125;&#x27;,&#x27;&#123;shopClass&#125;&#x27;,&#x27;&#123;shopItem&#125;&#x27;,&#x27;&#123;shopJieShao&#125;&#x27;)&quot;</span>;</span><br><span class="line">                SqlCommand mycomm= new SqlCommand(sqlstr,myconn);</span><br><span class="line">                <span class="keyword">if</span> (mycomm.Connection.State!=System.Data.ConnectionState.Open)</span><br><span class="line">                &#123;</span><br><span class="line">                    myconn.Open();</span><br><span class="line">                &#125;</span><br><span class="line">                mycomm.ExecuteNonQuery();</span><br><span class="line">                ///以下代码实现将上传的图片以二进制的形式存储到数据库中</span><br><span class="line">                <span class="keyword">if</span> (uploadFile.PostedFile.FileName!=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Stream imagestream;//创建数据流对象</span><br><span class="line">                    int imageLength = this.uploadFile.PostedFile.ContentLength;//获取上传图片的长度</span><br><span class="line">                    Byte[] image = new byte[imageLength];//定义Byte数组</span><br><span class="line">                    HttpPostedFile hp = uploadFile.PostedFile;</span><br><span class="line">                    imagestream = hp.InputStream;</span><br><span class="line">                    //将图片数据放在image对象实例中,其中0代表数组指针的起始位置,imagelength表示要读取流的长度(指针的结束位置)</span><br><span class="line">                    imagestream.Read(image,0,imageLength);</span><br><span class="line">                    //定义更新数据库中存储的二进制图片</span><br><span class="line">                    string sqlstr0 = $<span class="string">&quot;update [DianPuDetail] set [DianPuLogo]=@imgdata where DianPuId=(select top 1 DianPuId from [DianPuDetail] where DianPuUser=&#x27;&#123;username&#125;&#x27; order by DianPuId desc)&quot;</span>; </span><br><span class="line">                    //将图片存储到数据库指定字段中</span><br><span class="line">                    SqlCommand comd=new SqlCommand(sqlstr0,myconn);</span><br><span class="line">                    comd.Parameters.Add(<span class="string">&quot;@imagedata&quot;</span>,SqlDbType.Image);</span><br><span class="line">                    comd.Parameters[<span class="string">&quot;@imagedata&quot;</span>].Value = image;</span><br><span class="line">                    comd.ExecuteReader();</span><br><span class="line">                    myconn.Close();//关闭数据库连接</span><br><span class="line">                &#125;</span><br><span class="line">                Response.Write(<span class="string">&quot;&lt;script language=&#x27;javaScript&#x27;&gt;alert(&#x27;恭喜!!!注册成功!!!&#x27;);location=&#x27;Shop_Manage.aspx&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;上传图片不能为空!&#x27;);location=&#x27;javascript:history.go(-1)&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void Button2_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;%@ Page Language=<span class="string">&quot;C#&quot;</span> AutoEventWireup=<span class="string">&quot;true&quot;</span> CodeFile=<span class="string">&quot;NetShop.aspx.cs&quot;</span> Inherits=<span class="string">&quot;NetShop&quot;</span> %&gt;</span><br><span class="line">&lt;%@ Register Assembly=<span class="string">&quot;FreeTextBox&quot;</span> Namespace=<span class="string">&quot;FreeTextBoxControls&quot;</span> TagPrefix=<span class="string">&quot;ftb&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html xmlns=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">head</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form <span class="built_in">id</span>=<span class="string">&quot;form1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">        你的店名:&lt;asp:TextBox ID=<span class="string">&quot;TextBox1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;252px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">         你的店标:&lt;asp:FileUpload ID=<span class="string">&quot;uploadFile&quot;</span> runat=<span class="string">&quot;server&quot;</span> onpropertychange=<span class="string">&quot;document.all.img1.src=this.value&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">        &lt;asp:Image ID=<span class="string">&quot;img1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;150px&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        店铺类型:&lt;asp:DropDownList ID=<span class="string">&quot;Select1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;252px&quot;</span>&gt;</span><br><span class="line">        &lt;/asp:DropDownList&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        主营项目:&lt;asp:TextBox ID=<span class="string">&quot;TextBox3&quot;</span> runat=<span class="string">&quot;server&quot;</span> Width=<span class="string">&quot;252px&quot;</span>&gt;&lt;/asp:TextBox&gt;</span><br><span class="line"></span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;ftb:FreeTextBox runat=<span class="string">&quot;server&quot;</span> ID=<span class="string">&quot;JieShao&quot;</span>&gt;&lt;/ftb:FreeTextBox&gt;</span><br><span class="line">        &lt;asp:Button ID=<span class="string">&quot;Button1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;提交&quot;</span> Width=<span class="string">&quot;150px&quot;</span> OnClick=<span class="string">&quot;Button1_Click&quot;</span> /&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">        &lt;asp:Button ID=<span class="string">&quot;Button2&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;重置&quot;</span> Width=<span class="string">&quot;150px&quot;</span> OnClick=<span class="string">&quot;Button2_Click&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>秘笈心法<br>购物商城网创建个人店铺的设计思路<br>在创建个人店铺前首先需要注册为商铺会员,在登录窗口登录成功后将跳转到创建个人店铺页面CreatePersonShop.aspx,店铺创建成功后,将跳转到个人商铺管理页,在该页中用户可以链接到相关商铺管理页面,如店铺的”我要卖”页面,店铺公告信息发布等.当成为该店铺的会员后再次登录将会直接跳转到个人商铺管理页面.<br>046.网上商城购物车<br>实例说明<br>购物浏览<br>商品信息查看<br>继续购物,结账,清空购物车等<br>后台管理<br>商品浏览页面(Default.aspx)也是该购物车实例的起始页,主要用来实现用户登录及商品显示的功能,在该页中用户可以浏览商品信息,如果用户的身份为已登录的用户,还可以将物品放入购物车内<br>购物车页面(ShoppingCart.aspx)主要将用户选择的商品添加到购物车内,用户可以增加某件购买商品的数量,删除某件商品,继续购物,清空购物车或结账等.<br>后台管理页面(GoodsInfo.aspx)主要添加商品信息,该页中的每项内容都必须填写.管理员添加商品照片时,会将本地图片上传到服务器中,并显示在Image控件上.<br>关键技术<br>验证DataList控件中的TextBox控件允许输入数字和计算购物车中账户余额<br>1.验证DataList控件中的TextBox控件允许输入数字<br>可以通过CompareValidator控件进行验证,也可以通过该控件的Attribute属性设置,当用户松开按键时进行验证,如果不为数字则取消操作.<br>在ShoppingCart.aspx页面的Page_Load事件中,首先定义一个正则表达式使购物车中的更改商品数量的TextBox控件中能输入数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected void Page_Load(object sender,EventArgs e)&#123;</span><br><span class="line">//应用正则表达式屏蔽用户输入非数字字符</span><br><span class="line">TextBox1.Attributes[<span class="string">&quot;onkeyup&quot;</span>]=<span class="string">&quot;value=value.replace(/[^\\d]/g,&quot;</span>)<span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>定义完用于更改商品数量的TextBox控件只能输入数字后,如果该TextBox控件在DataList控件的ItemTemplate模板中,那么就需要对当前项被数据绑定到DataList控件时引发的ItemDataBound事件进行设置,首先要在DataList控件中找到该控件,</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Asp.Net" scheme="https://drfengling.github.io/categories/Asp-Net/"/>
    
    
    <category term="C#" scheme="https://drfengling.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出Windows应用开发(四)</title>
    <link href="https://drfengling.github.io/qm/8cfe4bab.html"/>
    <id>https://drfengling.github.io/qm/8cfe4bab.html</id>
    <published>2022-12-20T05:18:46.000Z</published>
    <updated>2023-01-04T02:25:27.196Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h4><p>HTTP协议是建立在TCP协议之上的一种应用.HTTP协议是超文本传送协议的缩写,它是万维网的基础,也是设备联网常用的协议之一<br>14.1.网络编程之HttpWebRequest类<br>HttpWebRequest类,另外一个是HttpClient类.HttpWebRequest类的网络请求适合于处理简单的网络请求,而HttpClient类对HTTP请求的支持更加强大,适合复杂的网络请求的封装.<br>14.11.HttpWebRequest实现Get请求.<br>HTTP的Get请求是最简单的HTTP请求,Get请求和Post请求的主要区别是:Get请求是从服务器上获取数据;而Post请求是向服务器传送数据;Get请求通过URL提交数据,数据在URL中可以看到,而Post请求是通过写入数据流的方式提交;Get请求提交的数据最多只能有1024字节,而Post请求则没有此限制.<br>1.获取WebRequest对象.<br>WebRequest类是请求/响应模型的基类,这是一个用于访问Internet数据的abstract类.HttpWebRequest类提供WebRequest类的HTTP特定的实现.HttpWebRequest类对WebRequest中定义的属性和方法提供支持,使用WebRequest.Create方法初始化新的HttpWebRequest对象.如果统一资源标识符(URI)的方法是http://或https://,则WebRequest.Create返回HttpWebRequest对象.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebRequest request=HttpWebRequest.Create(<span class="string">&quot;http://www.baidu.com&quot;</span>);</span><br></pre></td></tr></table></figure><p>2.设置请求的参数,发起GetResponse请求.<br>网络请求的参数可以通过HttpWebRequest对象的相关属性来设置,比如通过Method属性设置请求的类型”Get”,通过Headers属性设置请求头等,然后再使用httpWebRequest对象的BeginGetResponse和EndGetResponse方法对资源发出异步请求.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//设置为Get请求</span><br><span class="line">request.Method=<span class="string">&quot;GET&quot;</span></span><br><span class="line">//通过HTTP头设置请求的Cookie</span><br><span class="line">request.Headers[<span class="string">&quot;Cookie&quot;</span>]=<span class="string">&quot;name==value&quot;</span></span><br><span class="line">//设置身份验证的网络凭据</span><br><span class="line">reqeust.Credentials=new NetworkCredential(<span class="string">&quot;accountKey&quot;</span>,<span class="string">&quot;accountkeyOrPassword&#x27;);</span></span><br><span class="line"><span class="string">//发起GetResponse请求</span></span><br><span class="line"><span class="string">request.BeginGetResponse(ResponseCallback,request);</span></span><br><span class="line"><span class="string">//请求回调方法</span></span><br><span class="line"><span class="string">private async void ResponseCallback(IAsyncResult result)&#123;</span></span><br><span class="line"><span class="string">HttpWebRequest httpWebRequest=(HttpWebRequest)result.AsyncState;</span></span><br><span class="line"><span class="string">WebResponse webResponse=httpWebRequest.EndGetResponse(result);</span></span><br><span class="line"><span class="string">... ...获取请求返回的内容</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>3.获取请求的内容<br>在请求回调方法里面,获取到了WebResponse对象,这个对象表示网络请求返回的信息.调用WebResponse对象的GetResponseStream方法则可以获取到网络请求返回的数据流,从该数据流里面就可以解析出网络返回的内容.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//请求回调方法</span><br><span class="line">private async void ResponseCallback(IAsyncResult result)&#123;</span><br><span class="line">HttpWebRequest httpWebRequest=(HttpWebRequest)result.AsyncState;</span><br><span class="line">WebResponse webResponse=httpWebRequest.EndGetResponse(result);</span><br><span class="line">//获取请求返回的内容</span><br><span class="line">using(Stream stream=webResponse.GetResponseStream())&#123;</span><br><span class="line">using(StreamReader reader=new StreamReader(stream))&#123;</span><br><span class="line">//请求返回的字符串内容</span><br><span class="line">string content=reader.ReadToEnd();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.异常处理<br>在网络请求的过程中,难免会出现一些异常,这些异常可以通过try catch语句来捕获.如果在访问资源时发生错误,则httpWebRequest类将引发WebException.WebException.Status属性包含指示错误源的WebExceptionStatus值,通过该值便可知道哪一种情况导致请求失败.WebExceptionStatus枚举的取值情况如下所示:Success表示成功;ConnectFailure表示远程服务器连接失败,SendFailure表示发送失败.未能将完整请求发送到远程服务器,RequestCanceled表示该请求将被取消,Pending表示内部异步请求挂起;UnknownError表示未知错误.MessageLengthLimitExceeded表示网络请求的消息长度受到限制.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">try&#123;</span><br><span class="line">HttpWebRequest httpWebRequest=(HttpWebRequest)result.AsyncState;</span><br><span class="line">WebResponse webResponse=httpWebRequest.EndGetResponse(result);</span><br><span class="line">using(Stream stream=webResponse.GetResponse())&#123;</span><br><span class="line">using(StreamReader reader=new StreamReader(stream))&#123;</span><br><span class="line">string content=reader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;catch(WebException e)&#123;</span><br><span class="line">switch(e.Status)&#123;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.ConnectFailure:</span><br><span class="line">exceptionInfo=<span class="string">&quot;ConnectFailure:远程服务器连接失败.&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.MessageLengthLimitExceeded:</span><br><span class="line">exceptionInfo=<span class="string">&quot;MessageLengthLimitExceeded:网络请求的消息长度受到限制.&quot;</span></span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.Pending:</span><br><span class="line">exceptionInfo=<span class="string">&quot;Pending:内部异步请求挂起&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.RequestCanceled:</span><br><span class="line">exceptionInfo=<span class="string">&quot;RequestCanceled:该请求将被取消&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>；</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.SendFailure:</span><br><span class="line">exceptionInfo=<span class="string">&quot;SendFailure发送失败,未能将完整请求发送到远程服务器&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.UnknownError:</span><br><span class="line">exceptionInfo=<span class="string">&quot;UnknownError:未知错误.&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WebExceptionStatus.Success:</span><br><span class="line">exceptionInfo=<span class="string">&quot;Success:请求成功&quot;</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>httpWebRequest类常用属性<br>Accept 获取或设置Accept HTTP标头的值<br>AllowReadStreamBuffering 获取或设置一个值,该值指示是否对从Internet资源读取的数据进行缓冲处理<br>ContentType 获取或设置Content-typeHTTP标头的值<br>CookieContainer 指定与HTTP请求相关联的CookieCollection对象的集合<br>CreatorInstance 当在子类中重写时,获取从IWebRequestCreate类派生的工厂对象,该类用于创建为生成对指定URI的请求而实例化的WebRequest<br>Credentials 挡在子类中被重写时,获取或设置用于对Internet资源请求进行数据验证的网络凭据<br>HaveResponse 获取一个值,该值指示是否收到了来自Internet资源的响应<br>Headers 指定构成HTTP标头的名称/值对的集合<br>Method 获取或设置请求的方法<br>RequestUri 获取请求的原始统一资源标识符(URI)<br>14.12.HttpWebRequest实现Post请求<br>1.发起Post请求<br>发起Post请求需要通过HttpWebRequest.Create方法获取WebRequest对象,这和Get请求是一样的,注意获取到的WebRequest对象的Method属性要设置为”POST”,其他HTTP等属性的设置和Get请求一致.发起Post请求需要调用的是BeginGetRequestStream方法来发起获取发送数据流的请求,然后在回调方法里面通过EndGetRequestStream方法来获取到返回的发送数据流.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//创建WebRequest对象</span><br><span class="line">var request=HttpWebRequest.Create(<span class="string">&quot;http://www.yourwebsite.com&quot;</span>);</span><br><span class="line">//设置请求的方式为Post</span><br><span class="line">request.Method=<span class="string">&quot;POST&quot;</span>;</span><br><span class="line">//发起获取发送数据流的请求</span><br><span class="line">request.BeginGetRequestStream(ResponseStreamCallbackPost,request);</span><br><span class="line">//发起获取发送数据流的请求的响应回调方法</span><br><span class="line">private async void ResponseStreamCallbackPost(IAsyncResult result)&#123;</span><br><span class="line">HttpWebRequest httpWebRequest=(httpWebRequest)result.AsyncState;</span><br><span class="line">...接下来通过发送数据流来发送数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.传递Post数据<br>发起Post请求之后,在回调的方法里面可以通过HttpWebRequest对象来获取发送的数据流,把传递的Post数据写入数据流来实现数据的传递.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//发起获取发送数据流的请求的响应回调方法</span><br><span class="line">private async void ResponseStreamuCallbackPost(IAsyncResult result)&#123;</span><br><span class="line">HttpWebRequest httpWebRequest=(HttpWebRequest)result.AsyncState;</span><br><span class="line">using(Stream stream=httpWebRequest.EndGetRequestStream(result))&#123;</span><br><span class="line">//需要把待发送的数据通过byte[]数据格式发送出去</span><br><span class="line">//把字符串的信息转换为byte[]</span><br><span class="line">byte[] data=Encoding.UTF8.GetBytes(postString);</span><br><span class="line">stream.Write(data,0,data.length);</span><br><span class="line">&#125;</span><br><span class="line">...接下来获取请求的响应</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.获取Post结果<br>Post请求的数据写入完毕后,需要继续发起BeginGetResponse请求,获取服务器端的响应,这一步骤和Get请求是一致的,服务器需要把相关的结果返回给客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">httpWebRequest.BeginGetResponse(ResponseCallbackPost,httpWebRequest);</span><br><span class="line">//请求回调方法</span><br><span class="line">private async void ResponseCallbackPost(IAasyncResult result)&#123;</span><br><span class="line">HttpWebRequest httpWebRequest=(HttpWebRequest)result.AsyncState;</span><br><span class="line">WebResponse webResponse=httpWebRequest.EndGetResponse(result);</span><br><span class="line">//获取请求返回的内容</span><br><span class="line">using(Stream stream=webResponse.GetResponseStream())&#123;</span><br><span class="line">using(StreamReader reader=new StreamReader(stream))&#123;</span><br><span class="line">//请求返回的字符串内容</span><br><span class="line">string content=reader.ReadToEnd();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>14.13.网络请求的取消<br>1.网络请求时间过长,取消网络请求;另外一种情况是用户离开了需要显示网络数据的页面,客户端的程序把网络请求取消掉,避免不必要的资源.网络请求的取消可以直接调用HttpWebRequest对象的Abort方法,取消对Internet资源的请求,所以要实现取消请求的功能,必须把创建的HttpWebRequest对象作为一个公共变量来存放,然后通过调用其Abort方法进行取消请求,调用Abort方法取消网络请求的时候,会引发WebException异常,异常的类型是WebExceptionStatus.RequestCanceled表示该请求将被取消,所以网络请求的取消需要结合WebException异常的监控来一起完成.<br>14.14.超时控制<br>HttpWebRequest类并没有提供超时控制的属性或方法,它直接依赖于HttpWebRequest内部的HTTP机制来实现超时控制,所以要自定义实现HttpWebRequest类的HTTP请求的超时控制,可以根据使用线程信号类和Abort方法实现超时控制.实现的原理是当超过了一定的时候之后,如果网络请求还没有返回结果,就主动调用HTTP请求对象的Abort方法,取消网络请求.<br>线程信号类可以使用AutoResetEvent类来辅助实现超时控制,AutoResetEvent类允许线程通过发信号互相通信,线程通过调用AutoResetEvent上的WaitOne来等待信号,如果AutoResetEvent为非终止状态,则线程会被阻止,并等待当前控制资源的线程通过调用Set来通知资源可用,通过调用Set向AutoResetEvent发信号以释放等待线程.AutoResetEvent将保持终止状态,直到一个正在等待的线程被释放,然后自动返回非终止状态.<br>如果没有任何线程在等待,则状态将无限期的保持为终止状态,如果当AutoResetEvent为终止状态时调用WaitOne,则线程不会被阻止,AutoRestEvent将立即释放线程并返回到非终止状态,如果当AutoResetEvent为终止状态时线程调用WaitOne,则线程不会被阻止,AutoResetEvent将立即释放线程并返回到非终止状态,使用AutoResetEvent来控制HTTP的超时控制代码如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//信号量对象</span><br><span class="line">private AutoResetEvent autoResetEvent;</span><br><span class="line">//网络请求对象</span><br><span class="line">private HttpWebRequest request;</span><br><span class="line">//超时控制的方法,3秒钟没有网络返回将取消网络请求</span><br><span class="line">await Task.Factory.StartNew(networkRequest);</span><br><span class="line">//等待3秒钟</span><br><span class="line">autoResetEvent.WaitOne(3000);</span><br><span class="line"><span class="keyword">if</span>(request!=null)&#123;</span><br><span class="line">//取消网络请求</span><br><span class="line">request.Abort();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>15.断点续传<br>断点续传是指文件的上传或下载在数据传输的过程期间发生中断,下次再进行传输时,从上次文件中断的地方开始传输数据,而不是从文件开头传送.使用HttpWebRequest可以实现网络文件的上传和下载,如果要实现断点续传的机制,需要做进一步的处理,处理的方式是通过HTTP请求头来控制请求下载的文件片段,如果流程中断,就可以把当前请求的位置记录下载,下次再从当前的位置开始.<br>在断点续传的过程中,需要设置请求头的Range和Content-Range实体头的数据,Range用于请求头中,指定第一个字节的位置和最后一个字节的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Range:(unit=first byte pos)-[last byte pos]</span><br></pre></td></tr></table></figure><p>Content-Range用于响应头,指定整个实体中的一部分的插入位置,它我也指示整个实体的长度.在服务器向客户返回一个部分响应,它必须描述响应覆盖的范围和整个实体长度,一般格式如下:<br>Content-Range: bytes (unit first byte pos)-[last byte pos]/[entity legth]<br>所以,如果是实现断点续传下载文件,就需要分片下载,通过设置Range的请求范围来实现不同片段的数据的请求,比如第一包的请求设置Range的值为”bytes=0-100”,下载成功之后再设置为”bytes=100-200”,以此类推一直到文件全部下载成功,如果下载终端则下次再从中断的位置下载.如果是文件上传,实现断点续传也是一样的原理,但是必须要服务器支持才行.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var request=HttpWebRequest.Create(url);</span><br><span class="line">request.Method=<span class="string">&quot;GET&quot;</span>;</span><br><span class="line">request.Headers[<span class="string">&quot;Range&quot;</span>]=<span class="string">&quot;bytes-0-100&quot;</span>;</span><br><span class="line">request.BeginGetResponse(ResponseCallbackTimeTest,request);</span><br></pre></td></tr></table></figure><p>14.16.RSS阅读器<br>实现一个RSS阅读器,通过输入的RSS地址来获取RSS的信息列表和查看RSS文章中的详细内容.RSS阅读器是使用了HttpWebRequest类来获取网络上的RSS信息,然后转换为自己定义好的RSS实体类对象的列表,最后绑定到页面上.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.RssPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;TextBox Header=<span class="string">&quot;请输入合法的RSS阅读源的地址:&quot;</span> x:Name=<span class="string">&quot;rssURL&quot;</span> Text=<span class="string">&quot;http://www.cnblogs.com/rss&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;加载RSS&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">            &lt;ListView x:Name=<span class="string">&quot;listbox&quot;</span> SelectionChanged=<span class="string">&quot;listbox_SelectionChanged&quot;</span> Height=<span class="string">&quot;350&quot;</span></span><br><span class="line">                      &gt;</span><br><span class="line">                &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                    &lt;DataTemplate&gt;</span><br><span class="line">                        &lt;Grid&gt;</span><br><span class="line">                            &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                                &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                                &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                                &lt;RowDefinition Height=<span class="string">&quot;60&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                            &lt;TextBlock Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> FontSize=<span class="string">&quot;25&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                            &lt;TextBlock Grid.Row=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;&#123;Binding PublishedDate&#125;&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                            &lt;TextBlock Grid.Row=<span class="string">&quot;2&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> Text=<span class="string">&quot;&#123;Binding PlainSummary&#125;&quot;</span></span><br><span class="line">                                       FontSize=<span class="string">&quot;18&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Grid&gt;</span><br><span class="line">                    &lt;/DataTemplate&gt;</span><br><span class="line">                &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">            &lt;/ListView&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using App1.Models;</span><br><span class="line">using App1.Services;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Popups;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class RssPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">RssPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 加载RSS列表</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (rssURL.Text!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                //调用封装好的RSS请求方法加载RSS列表</span><br><span class="line">                RssService.GetRssItems(rssURL.Text, async (items) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    //请求正常完成,把RSS文章的内容绑定到列表控件</span><br><span class="line">                    await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        listbox.ItemsSource = items;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                async (exception) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    //请求出现异常,把异常信息显示出来</span><br><span class="line">                    await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, async () =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        await new MessageDialog(exception).ShowAsync();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,null</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请输入RSS地址&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //通过列表选项选中事件来跳转到查看文章详情的页面</span><br><span class="line">        private void listbox_SelectionChanged(object sender, SelectionChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //列表控件的选中项</span><br><span class="line">            <span class="keyword">if</span> (listbox.SelectedItem == null)</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            var template=(RssItem)listbox.SelectedItem;</span><br><span class="line">            //跳转到详情页面,并且把RssItem对象作为参数传递过去</span><br><span class="line">            Frame.Navigate(typeof(DetailPage), template);</span><br><span class="line">            listbox.SelectedItem = null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.DetailPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;auto&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;StackPanel x:Name=<span class="string">&quot;TitlePanel&quot;</span> Margin=<span class="string">&quot;12,0,0,28&quot;</span>&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;Rss阅读器&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> FontSize=<span class="string">&quot;25&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        &lt;Grid x:Name=<span class="string">&quot;ContentPanel&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">            &lt;StackPanel&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding PublishedDate&#125;&quot;</span> FontSize=<span class="string">&quot;15&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Url&#125;&quot;</span> FontSize=<span class="string">&quot;15&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                &lt;ScrollViewer Height=<span class="string">&quot;500&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding PlainSummary&#125;&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using App1.Models;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class DetailPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">DetailPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        protected override void OnNavigatedTo(NavigationEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            RssItem item=e.Parameter as RssItem;</span><br><span class="line">            <span class="keyword">if</span> (item!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                //把文章对象绑定到当前的页面的上下文来进行显示</span><br><span class="line">                this.DataContext= item;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>14.2.网络编程之HttpClient类<br>对于简单的请求操作,HttpClient类提供了一个简单的接口来处理最常见的任务,并为身份验证提供了适合于大多数方案的合理的默认设置,对于较为复杂的HTTP操作,更多的功能包括,执行常见操作(DELETE,GET,PUT,POST)方法,获取,设置和删除Cookie的功能,支持常见的身份验证设置和模式,异步方法上提供的HTTP请求进度信息;访问有关传输的安全套接字层(SSL)详细信息;在高级应用中包含自定义筛选器的功能.<br>14.21.Get请求获取字符串和数据流数据<br>1.获取字符串数据<br>HttpClient类使用基于任务的异步模式提供了非常简化的请求操作,可以直接调用HttpClient类GetStringAsync方法便可获取网络返回的字符串数据.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Uri uri=new Uri(<span class="string">&quot;http://yourwebsite.com&quot;</span>);</span><br><span class="line">HttpClient httpClient=new HttpClient();</span><br><span class="line">//获取网络的返回的字符串数据</span><br><span class="line">string result=await httpClient.GetStringAsync(uri);</span><br></pre></td></tr></table></figure><p>使用GetStringAsync方法是一种简化的HTTP请求,如果要获取HTTP请求返回的整个对象HttpResponseMessage可以使用GetAsync方法.HttpResponseMessage对象是HTTP的相应消息对象,它包含了网络请求相应的HTTP头,数据体等信息.下面使用GetAsync方法来获取网络返回的字符串信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpResponseMessage response=await httpClient.GetAsync(uri);</span><br><span class="line">string responseBody=await response.Content.ReadAsStringAsync();</span><br></pre></td></tr></table></figure><p>2.获取数据流数据<br>HttpResponseMessage对象的Content属性表示是返回的数据对象,是一个IHttpContent类型的对象,如果要获取的是数据流数据,可以通过它的ReadAsBufferAsync方法获取到返回的IBuffer对象,或者通过ReadAsInputStreamAsync地方获取IInputStream对象,然后再转换为Stream对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">using(Stream responseStream=(await response.Content.ReadAsInputStreamAsync()).AsStreamForRead())&#123;</span><br><span class="line">int <span class="built_in">read</span>=0;</span><br><span class="line">byte[] responseBytes=new Byte[1000];</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">//如果<span class="built_in">read</span>等于0表示Stream的数据以及读取完毕</span><br><span class="line"><span class="built_in">read</span>=await responseStream.ReadAsync(responseBytes,0,responseBytes.Length);</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">read</span>!=0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.取消网络请求<br>HttpClient类发起的网络请求都是基于任务的异步方法,所以要取消其异步操作可以通过异步任务的取消对象CancellationTokenSource对象来取消,这点和HttpWebRequest类是不同.如果使用CancellationTokenSource对象来取消异步请求会触发TaskCanceledException异常.这个异常需要用try catch语句来捕获,便可以识别到请求是被取消的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">private CancellationTokenSource cts=new CancellationTokenSource();</span><br><span class="line">try&#123;</span><br><span class="line">//使用CancellationTokenSource对象来控制异步任务的取消操作</span><br><span class="line">HttpResponseMessage response=await httpClient.GetAsync(new Uri(resourceAddress)).AsTask(cts.Token);</span><br><span class="line">responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">cts.Token.ThrowIfCancellationRequested();</span><br><span class="line">&#125;catch(TaskCanceledException)</span><br><span class="line">responseBody=<span class="string">&quot;请求被取消&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">//调用Cancel方法取消网络请求</span><br><span class="line"><span class="keyword">if</span>(cts.Token.CanBeCanceled)&#123;</span><br><span class="line">cts.Cancel();</span><br><span class="line">&#125;</span><br><span class="line">14.22.Post请求发送字符串和数据流数据</span><br><span class="line">使用HttpClient类发起Post请求的编程方式也很简洁,可以调用方法PostAsync(Uri uri,IHttpContent content)来直接向目标的地址Post数据,在该方法里面有两个参数,uri就是网络的目标地址,content是指向目标地址Post的数据对象,在Post数据之前,首先把数据初始化成一个IHttpContent对象,实现了IHttpContent接口的类有HttpStringContent类,HttpStream类和HttpBufferContent类,这三个类分别代表了字符串类型,数据流类型和二进制类型,数据流类型和二进制类型可以互相转换.调用PostAsync方法之后会返回一个HttpResponseMessage对象,通过这个HTTP的相应消息对象就可以获取Post请求之后的返回结果信息.Post请求发送字符串和数据流数据</span><br><span class="line">``` bash</span><br><span class="line">1.Post请求发送字符串数据</span><br><span class="line">HttpStringContent httpStringContent=new HttpStringContent(<span class="string">&quot;hello Windows 10&quot;</span>);</span><br><span class="line">HttpResponseMessage response=await httpClient.PostAsync(uri,httpStringContent).AsTask(cts.Token);</span><br><span class="line">string responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">2.Post请求发送数据流数据</span><br><span class="line">HttpStreamContent streamContent=new HttpStreamContent(stream.AsInputStrem());</span><br><span class="line">httpResponseMessage response=await httpClient.PostAsync(uri,streamContent).AsTask(cts.Token);</span><br><span class="line">string responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br></pre></td></tr></table></figure><p>除了使用PostAsync方法之外,还可以使用SendRequestAsync方法来发送网络请求,SendRequestAsync方法来发送网络请求,SendRequestAsync方法既可以使用Get方式也可以使用Post方式.SendRequestAsync方法发送的消息类型是HttpRequestMessage类对象,HttpRequestMessage类表示HTTP的请求消息类,可以通过HttpRequestMessage对象设置请求的类型(Get/Post)和传输的数据对象.使用SendRequestAsync方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//创建HttpRequestMessage对象</span><br><span class="line">HttpStreamContent streamContent=new HttpStreamContent(stream.AsInputStream());</span><br><span class="line">HttpRequestMessage request=new HttpRequestMessage(HttpMethod.Post,new Uri(resourceAddress));</span><br><span class="line">request.Content=streamContent;</span><br><span class="line">//发送数据</span><br><span class="line">HttpResponseMessage response=await httpClient.SendRequestAsync(request).AsTask(cts.Token);</span><br><span class="line">string responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br></pre></td></tr></table></figure><p>14.23.设置和获取Cookie<br>Cookie是指某些网站,为了辨别用户身份,进行会话跟踪而储存在用户本地终端上的数据(通常经过加密),当在使用HTTP请求时,如果服务器返回的数据待用Cookie数据,也可以获取出来,存储在本地,下次发起HTTP请求的时候就会带上这些Cookie的数据.<br>在HttpClient类的网络请求中可以通过HttpBaseprotocolFilter类来获取网站的Cookie信息,HttpBaseProtocolFilter类表示是HttpClient的Http请求的基础协议的过滤器.获取Cookie的代码示例如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//创建一个HttpBaseProtocolFilter对象</span><br><span class="line">HttpBaseProtocolFilter filter=new HttpBaseProtocolFilter();</span><br><span class="line">//通过HttpBaseProtocolFilter对象获取使用HttpClient进行过网络请求的地址的Cookie信息</span><br><span class="line">HttpCookieCollection cookieCollection=filter.CookieManager.GetCookies(new Uri(resourceAddress));</span><br><span class="line">//遍历整个Cookie集合的Cookie信息</span><br><span class="line">foreach(HttpCookie cookie <span class="keyword">in</span> cookieCollection)&#123;&#125;</span><br></pre></td></tr></table></figure><p>在发送HTTP请求的时候也一样可以带上Cookie信息,如果服务器可以识别到Cookie信息就通过Cookie信息来进行一些操作.比如Cookie信息带有用户名和密码的加密信息,就可以免去登录的步骤.在HttpClient的网络请求里面,HttpCookie类表示是一个Cookie对象,创建好Cookie对象之后通过HttpBaseProtocolFilter对象的CookieManger属性来设置Cookie,然后发送网络请求,这时候的网络请求就会把Cookie信息给带上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//创建一个HttpCookie对象,<span class="string">&quot;id&quot;</span>标识是Cookie的名称,<span class="string">&quot;localhost&quot;</span>是主机名,<span class="string">&quot;/&quot;</span>是表示服务器的虚拟路径</span><br><span class="line">HttpCookie cookie=new HttpCookie(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;yourwebsite.com&quot;</span>,<span class="string">&quot;/&quot;</span>);</span><br><span class="line">//设置Cookie的值</span><br><span class="line">cookie.Value=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line">//设置Cookie存活的时间,如果设置为null表示只是在一个会话里面生效</span><br><span class="line">cookie.Expries=new DateTimeOffset(DateTime.Now,new TimeSpan(0,1,8));</span><br><span class="line">//在过滤器里面设置Cookie</span><br><span class="line">HttpBaseProtocolFilter filter=new HttpBaseProtocolFilter();</span><br><span class="line">bool replaced=filter.CookieManager.SetCookie(cookie,<span class="literal">false</span>);</span><br><span class="line">...接下来可以向<span class="string">&quot;yourwebsite.com&quot;</span>远程主机发起请求</span><br></pre></td></tr></table></figure><p>14.24.网络请求的进度监控<br>HttpClient的网络请求是支持进度监控,通过异步任务的IProgress<T>对象可以直接监控到HttpClient的网络请求返回的进度信息,返回的进度对象是HttpProgress类对象,在进度对象HttpProgress里面包含了下面的一些信息:Stage(当前的状态),BytesSent(已发送的数据大小),BytesReceived(已接收的数据大小),Retries(重试的次数),TotalBytesToSend(总共需要发送的数据大小)和TotalBytesToReceive(总共需要接收的数据大小).网络请求进度监控的代码示例如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//创建IProgress&lt;HttpProgress&gt;对象</span><br><span class="line">IProgress&lt;HttpProgress&gt; progress=new Progress&lt;HttpProgress&gt;(ProgressHandler);</span><br><span class="line">//在异步任务中加入进度监控</span><br><span class="line">HttpResponseMessage response=await httpClient.PostAsync(new Uri(resourceAddress),streamContent).AsTask(cts.Token,progress);</span><br><span class="line">//进度监控的回调方法</span><br><span class="line">private void ProgressHandler(HttpProgress progress)&#123;</span><br><span class="line">//这里可以通过progress参数获取进度的相关信息</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>14.25.自定义HTTP请求筛选器<br>HTTP请求筛选器是HttpClient网络请求的一个很强大的功能,它可以把每次网络请求需要的规则封装起来作为一个公共的筛选器来使用,使得特定连接和安全方案的Web请求变得更加简单.我们可以把身份验证,数据加密,连接失败后使用自动重试等逻辑封装在筛选器里面,然后再使用筛选器来初始化一个HttpClient对象进行网络请求.<br>通常情况下,处理请求期间预期可能会出现的一个网络或安全状况很容易,但要处理多个网络或安全状况可能就比较困难.你可以创建一些简单的筛选器,然后再根据需要将它们链接起来,这样就能够针对预期可能会出现的复杂情况开发出一些Web请求功能,而无须开发非常复杂的程序.<br>HttpClient是用于通过HTTP发送和接收请求的主类,它使用HttpBaseProtocolFilter类来确定如何发送和接收数据,所以HttpBaseProtocolFilter在逻辑上是所有自定义筛选器链的结尾.每个HttpClient实例都可以有一个不同的筛选器链或管道.<br>若要编写一个自定义筛选器,需要创建一个自定义的筛选器类实现IHttpFilter接口,通过IHttpFilter.SendRequestAsync方法来指定筛选器的工作方式,也就是把网络请求封装的信息放在该方法里面,在发起网络请求的时候筛选器内部会调用该方法.下面来看一个向HTTP请求和响应添加自定义标头的筛选器的示例代码<br>//创建一个自定义筛选器,使用该筛选器会在Http请求和响应中都添加一个自定义的Http头信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public class plugInFilter:IHttpFilter&#123;</span><br><span class="line">private IHttpFilter innerFilter;</span><br><span class="line">public PlugFilter(IHttpFilter innerFilter)&#123;</span><br><span class="line"><span class="keyword">if</span>(innerFilter==null)&#123;</span><br><span class="line">throw new ArgumentException(<span class="string">&quot;innerFilter cannot be null&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">this.innerFilter=innerFilter;</span><br><span class="line">&#125;</span><br><span class="line">//在SendRequestAsync方法里面添加自定义的HTTP头</span><br><span class="line">public IAsyncOperationWithProgress&lt;HttpResponseMessage,HttpProgress&gt;SendRequestAsync(HttpRequestMessage request)&#123;</span><br><span class="line"><span class="built_in">return</span> AsyncInfo.Run&lt;HttpResponseMessage,HttpProgress&gt;(async(cancellationToken,progress)=&gt;&#123;</span><br><span class="line">//添加请求头</span><br><span class="line">request.Headers.Add(<span class="string">&quot;Custom-header&quot;</span>,<span class="string">&quot;CustomRequestValue&quot;</span>);</span><br><span class="line">HttpResonseMessage response=await innerFilter.SendRequestAsync(request).AsTask(cancellationToken,progress);</span><br><span class="line">cancellationToken.ThrowIfCancellationRequested();</span><br><span class="line">//添加响应头</span><br><span class="line">response.Headers.Add(<span class="string">&quot;Custom-header&quot;</span>,<span class="string">&quot;CustomResponseValue&quot;</span>);</span><br><span class="line"><span class="built_in">return</span> response;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">public void <span class="function"><span class="title">Disponse</span></span>()&#123;</span><br><span class="line">innerFilter.Disponse();</span><br><span class="line">GC.SuppressFinalize(this);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若要使用此筛选器,在创建HttpClient对象时将其接口传递到HttpClient(IHttpFilter)构造方法里,若要设置筛选器链,请将新筛选器链接到之前的筛选器以及位于该链结尾处的HttpBaseProtocolFilter对象.下面使用PlugInFilter筛选器来创建HttpClient对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//先创建一个HttpBaseProtocolFilter对象,这是因为HttpClient默认的最底层的筛选器</span><br><span class="line">var basefilter=new HttpBaseProtocolFilter();</span><br><span class="line">//创建PlugInFilter筛选器对象,链接到HttpBaseProtocolFilter对象上</span><br><span class="line">var myfilter=new PlugInFilter(basefilter);</span><br><span class="line">//使用自定义的筛选器创建HttpClient对象</span><br><span class="line">HttpClient httpClient=new HttpClient(myfilter);</span><br><span class="line">...下面使用httpClient对象来发起网络请求都会自动带上自定义筛选器所添加的HTTP头.</span><br></pre></td></tr></table></figure><p>14.26.部署IIS服务和实现客户端对服务器的请求<br>首先需要创建一个Asp.net的网站服务,并在本地的IIS服务上把网站部署好,作为后台的网络服务,然后再创建一个Win10客户端应用程序向后台的网络服务发起请求.创建一个Asp.net项目命名为website,创建一个default.apsx用于处理Get和Post数据请求的测试.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.WebPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;auto&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">            &lt;StackPanel&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Get String&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Get Stream&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Post String&quot;</span> Click=<span class="string">&quot;Button_Click_2&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Post Stream&quot;</span> Click=<span class="string">&quot;Button_Click_3&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;请求进度监控&quot;</span> Click=<span class="string">&quot;Button_Click_4&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Cookie设置&quot;</span> Click=<span class="string">&quot;Button_Click_5&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Cookie获取&quot;</span> Click=<span class="string">&quot;Button_Click_6&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">        &lt;!--操作的进度,网络信息的展示面板,一开始隐藏,发起网络操作时显示出来,完成后再隐藏--&gt;</span><br><span class="line">        &lt;Grid Grid.RowSpan=<span class="string">&quot;2&quot;</span> x:Name=<span class="string">&quot;waiting&quot;</span> Visibility=<span class="string">&quot;Collapsed&quot;</span>&gt;</span><br><span class="line">            &lt;Grid Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.8&quot;</span>&gt;</span><br><span class="line">            &lt;/Grid&gt;</span><br><span class="line">            &lt;StackPanel Background=<span class="string">&quot;Black&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                        Grid.RowSpan=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                &lt;TextBlock x:Name=<span class="string">&quot;information&quot;</span> Text=<span class="string">&quot;正在请求数据... ...&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;取消操作&quot;</span> x:Name=<span class="string">&quot;cancel&quot;</span> Click=<span class="string">&quot;cancel_Click&quot;</span> Width=<span class="string">&quot;370&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Globalization;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line"></span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Security.Cryptography;</span><br><span class="line">using Windows.Storage.Streams;</span><br><span class="line">using Windows.UI.Popups;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line">using Windows.Web.Http;</span><br><span class="line">using Windows.Web.Http.Filters;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class WebPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">WebPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">            //初始化HTTP请求对象</span><br><span class="line">            httpClient = new HttpClient();</span><br><span class="line">            //初始化异步任务取消对象</span><br><span class="line">            cts = new CancellationTokenSource();</span><br><span class="line">        &#125;</span><br><span class="line">        //服务器地址</span><br><span class="line">        private string server = <span class="string">&quot;http://localhost:8081/default.aspx&quot;</span>;</span><br><span class="line">        //HTTP请求对象</span><br><span class="line">        private HttpClient httpClient;</span><br><span class="line">        //异步任务取消对象</span><br><span class="line">        private CancellationTokenSource cts;</span><br><span class="line">        private async void HttpRequestAsync(Func&lt;Task&lt;string&gt;&gt; httpRequestFuncAsync) &#123;</span><br><span class="line">            string responseBody;</span><br><span class="line">            waiting.Visibility = Visibility.Visible;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                responseBody = await httpRequestFuncAsync();</span><br><span class="line">                cts.Token.ThrowIfCancellationRequested();</span><br><span class="line">            &#125;</span><br><span class="line">            catch (TaskCanceledException)</span><br><span class="line">            &#123;</span><br><span class="line">                responseBody = <span class="string">&quot;请求被取消&quot;</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                responseBody = <span class="string">&quot;异常消息&quot;</span> + ex.Message;</span><br><span class="line">            &#125;</span><br><span class="line">            finally &#123;</span><br><span class="line">                waiting.Visibility = Visibility.Collapsed;</span><br><span class="line">            &#125;</span><br><span class="line">            await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(responseBody).ShowAsync();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        //Get请求获取string类型数据</span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                string resourceAddress = server + <span class="string">&quot;?cacheable=1&quot;</span>;</span><br><span class="line">                HttpResponseMessage response = await httpClient.GetAsync(new Uri(resourceAddress));</span><br><span class="line">                string responseBody = await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        //get请求获取Stream类型数据</span><br><span class="line">        private void Button_Click_1(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt; &#123;</span><br><span class="line">                string resourceAddress = server + <span class="string">&quot;?extraData=2000&quot;</span>;</span><br><span class="line">                StringBuilder responseBody = new StringBuilder();</span><br><span class="line">                HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get,new Uri(resourceAddress));</span><br><span class="line">                HttpResponseMessage response = await httpClient.SendRequestAsync(request, HttpCompletionOption.ResponseHeadersRead).AsTask(cts.Token);</span><br><span class="line">                using (Stream responseStream=(await response.Content.ReadAsInputStreamAsync()).AsStreamForRead())</span><br><span class="line">                &#123;</span><br><span class="line">                    int <span class="built_in">read</span> = 0;</span><br><span class="line">                    byte[] responseBytes = new byte[1000];</span><br><span class="line">                    <span class="keyword">do</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">read</span> = await responseStream.ReadAsync(responseBytes,0,responseBytes.Length);</span><br><span class="line">                        responseBody.AppendFormat(<span class="string">&quot;Bytes read from stream:&#123;0&#125;&quot;</span>,<span class="built_in">read</span>);</span><br><span class="line">                        responseBody.AppendLine();</span><br><span class="line">                        //把byte[]转换为IBuffer类型,IBuffer接口是Win10标准的二进制数据接口</span><br><span class="line">                        IBuffer responseBuffer=CryptographicBuffer.CreateFromByteArray(responseBytes);</span><br><span class="line">                        responseBuffer.Length = (uint)<span class="built_in">read</span>;</span><br><span class="line">                        //转换为Hex字符串,ASCII文本这些记录由对应机器语言码和/或常量数据的十六进制编码数字组成</span><br><span class="line">                        responseBody.AppendFormat(CryptographicBuffer.EncodeToHexString(responseBuffer));</span><br><span class="line">                        responseBody.AppendLine();</span><br><span class="line">                    &#125; <span class="keyword">while</span> (<span class="built_in">read</span>!=0);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">return</span> responseBody.ToString();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// Post请求发送String类型数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_2(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                string resourceAdderss = server;</span><br><span class="line">                string responseBody;</span><br><span class="line">                HttpResponseMessage response = await httpClient.PostAsync(new Uri(resourceAdderss), new HttpStringContent(<span class="string">&quot;hello Windows Phone&quot;</span>)).AsTask(cts.Token);</span><br><span class="line">                responseBody= await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// Post 请求发送Stream类型数据</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_3(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                string resourceAddress = server;</span><br><span class="line">                string responseBody;</span><br><span class="line">                const int contentLegnth = 1000;</span><br><span class="line">                //使用Stream数据初始化一个HttpStreamContent对象</span><br><span class="line">                Stream stream = GenerateSampleStream(contentLegnth);</span><br><span class="line">                HttpStreamContent streamContent = new HttpStreamContent(stream.AsInputStream());</span><br><span class="line">                //初始化一个Post类型的HttpReqeustMessage对象</span><br><span class="line">                HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, new Uri(resourceAddress));</span><br><span class="line">                request.Content = streamContent;</span><br><span class="line">                //发送Post请求</span><br><span class="line">                HttpResponseMessage response=await httpClient.SendRequestAsync(request).AsTask(cts.Token);</span><br><span class="line">                //获取请求的结果</span><br><span class="line">                responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 获取测试的数据流对象</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;contentLegnth&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private Stream GenerateSampleStream(int size)</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] subData= new byte[size];</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; subData.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                //ASCII编码40表示是字符“（”</span><br><span class="line">                subData[i] = 40;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> new MemoryStream(subData);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 监控Post请求的进度情况</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_4(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt; &#123; </span><br><span class="line">                string resourceAddress = server;</span><br><span class="line">                string responseBody;</span><br><span class="line">                const uint streamLength = 1000000;</span><br><span class="line">                HttpStreamContent streamContent = new HttpStreamContent(new SlowInputStream(streamLength));</span><br><span class="line">                streamContent.Headers.ContentLength = streamLength;</span><br><span class="line">                //创建进度对象</span><br><span class="line">                IProgress&lt;HttpProgress&gt; progress= new Progress&lt;HttpProgress&gt;(ProgressHandler);</span><br><span class="line">                HttpResponseMessage response=await httpClient.PostAsync(new Uri(resourceAddress),streamContent).AsTask(cts.Token);</span><br><span class="line">                responseBody = <span class="string">&quot;完成&quot;</span>;</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void ProgressHandler(HttpProgress progress)</span><br><span class="line">        &#123;</span><br><span class="line">            string infoString = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            infoString = progress.Stage.ToString();</span><br><span class="line">            //需要发送的数据</span><br><span class="line">            ulong totalBytesToSend = 0;</span><br><span class="line">            <span class="keyword">if</span> (progress.TotalBytesToSend.HasValue)</span><br><span class="line">            &#123;</span><br><span class="line">                totalBytesToSend = progress.TotalBytesToSend.Value;</span><br><span class="line">                infoString += <span class="string">&quot;发送数据:&quot;</span> + totalBytesToSend.ToString(CultureInfo.InvariantCulture);</span><br><span class="line">            &#125;</span><br><span class="line">            //已接收的数据</span><br><span class="line">            ulong totalBytesToReceive = 0;</span><br><span class="line">            <span class="keyword">if</span> (progress.TotalBytesToReceive.HasValue) &#123; </span><br><span class="line">                totalBytesToReceive= progress.TotalBytesToReceive.Value;</span><br><span class="line">                infoString += <span class="string">&quot;接收数据:&quot;</span> + totalBytesToReceive.ToString(CultureInfo.InvariantCulture);</span><br><span class="line">            &#125;</span><br><span class="line">            double requestProgress = 0;</span><br><span class="line">            //前面50%是发送进度,后面50%是接收进度</span><br><span class="line">            <span class="keyword">if</span> (progress.Stage==HttpProgressStage.SendingContent &amp;&amp; totalBytesToSend&gt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                requestProgress = progress.BytesSent * 50 / totalBytesToSend;</span><br><span class="line">                infoString += <span class="string">&quot;发送进度&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (progress.Stage==HttpProgressStage.ReceivingContent)</span><br><span class="line">            &#123;</span><br><span class="line">                requestProgress += 50;</span><br><span class="line">                <span class="keyword">if</span> (totalBytesToReceive&gt;0)</span><br><span class="line">                &#123;</span><br><span class="line">                    requestProgress += progress.BytesReceived * 50 / totalBytesToReceive;</span><br><span class="line">                &#125;</span><br><span class="line">                infoString += <span class="string">&quot;接收进度:&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            infoString += requestProgress;</span><br><span class="line">            information.Text= infoString;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 设置网络请求的Cookie</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_5(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt; &#123;</span><br><span class="line">                string resourceAddress = server;</span><br><span class="line">                string responseBody;</span><br><span class="line">                //创建一个HttpCookie对象,<span class="string">&quot;id&quot;</span>表示是Cookie的名称,<span class="string">&quot;localhost&quot;</span>是主机名,<span class="string">&quot;/&quot;</span>是表示服务器的虚拟路径</span><br><span class="line">                HttpCookie cookie = new HttpCookie(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;/&quot;</span>);</span><br><span class="line">                cookie.Value = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">                //设置为null表示只是在一个会话里面生效</span><br><span class="line">                cookie.Expires = null;</span><br><span class="line">                HttpBaseProtocolFilter filter= new HttpBaseProtocolFilter();</span><br><span class="line">                bool replaced = filter.CookieManager.SetCookie(cookie,<span class="literal">false</span>);</span><br><span class="line">                HttpResponseMessage response = await httpClient.PostAsync(new Uri(resourceAddress),new HttpStringContent(<span class="string">&quot;hello Windows Phone&quot;</span>)).AsTask(cts.Token);</span><br><span class="line">                responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 获取网络请求的Cookie</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_6(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpRequestAsync(async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                string resourceAddress = server+<span class="string">&quot;?setCookies=1&quot;</span>;</span><br><span class="line">                string responseBody;</span><br><span class="line">                //发送网络请求</span><br><span class="line">                HttpResponseMessage response=await httpClient.GetAsync(new Uri(resourceAddress)).AsTask(cts.Token);</span><br><span class="line">                responseBody=await response.Content.ReadAsStringAsync().AsTask(cts.Token);</span><br><span class="line">                cts.Token.ThrowIfCancellationRequested();</span><br><span class="line">                //获取基础协议筛选器</span><br><span class="line">                HttpBaseProtocolFilter filter= new HttpBaseProtocolFilter();</span><br><span class="line">                //获取网络请求下载到的Cookie数据</span><br><span class="line">                HttpCookieCollection cookieCollection = filter.CookieManager.GetCookies(new Uri(resourceAddress));</span><br><span class="line">                //遍历Cookie数据的内容</span><br><span class="line">                responseBody = cookieCollection.Count + <span class="string">&quot;cookies:&quot;</span>;</span><br><span class="line">                foreach (HttpCookie cookie <span class="keyword">in</span> cookieCollection)</span><br><span class="line">                &#123;</span><br><span class="line">                    responseBody += <span class="string">&quot;Name:&quot;</span> + cookie.Name + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    responseBody += <span class="string">&quot;Domain:&quot;</span> + cookie.Domain + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    responseBody += <span class="string">&quot;Path:&quot;</span> + cookie.Path + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    responseBody += <span class="string">&quot;Value:&quot;</span> + cookie.Value + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    responseBody += <span class="string">&quot;Expries:&quot;</span> + cookie.Expires + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    responseBody += <span class="string">&quot;Secure:&quot;</span> + cookie.Secure + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">return</span> responseBody;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 取消网络请求</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void cancel_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            cts.Cancel();</span><br><span class="line">            cts.Dispose();</span><br><span class="line">            cts=new CancellationTokenSource();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>14.3.使用WebService进行网络编程<br>WebService是构建互联网分布式系统的基本部件.<br>WebService是一种标准化的实现网络服务和异构程序之间方法调用的机制.是为了使原来各孤立的站点之间的信息能够相互通信,共享而提出的一种接口,WebService也叫做Xml Web Service.可以接纳从Internet或Intranet上的其他设备中传送的请求,是一种轻量级的独立的通信技术,这种技术通过SOAP在Web上提供软件服务,运用WSDL文件停止阐明,并通过UDDI停止注册,WebService所使用的是Internet上统一,开放的标准,如HTTP,XML,SOAP,WSDL等,所以WebService可以在任何支持这些标准的环境中使用.它通过XML格式的文件来描述方法,参数,调用和返回值,这种格式的XML文件称为WSDL.WebService采用的通信协议是SOAP.SOAP协议是一个用于分散和分布式环境下网络信息交换的基于XML的通信协议,在此协议下,软件组件或应用程序能够通过标准的HTTP协议进行通信,它的设计目标就是简单性和扩展性,这有助于大量异构程序和平台之间的互操作,从而使存在的应用程序能够被用户广泛访问.<br>XML:扩展性可标志言语.面向短期的暂时数据处理,面向万维网络,是SOAP的根底.<br>SOAP:简单对象存取协议.是XML Web Service的通信协议调用用户建立的Web服务中的一个或多个操纵.SOAP是XML文档方式的调用方法的标准,它可以支撑不同的底层接口,像HTTP(S)或SMTP.<br>WSDL:网络描述语言.WSDL文件是一个XML文档,用于阐明一组SOAP音讯以及如何交流这些音讯.<br>UDDI:统一描述,发现和集成协议,是一个次要针对Web服务供应商和运用者的新项目.在用户可以调用Web服务之前,必须肯定这个服务内包括哪些商务办法,找到被调用的接口定义,还要在服务端来编制软件,UDDI是一种依据描绘文档来指导设备查找相应服务的机制.UDDI应用SOAP音讯机制(标准的XML/HTTP)来公布,编辑,阅读以及查找注册音讯.它采用XML格式来封装各种不同类型的数据,并且发送到注册核心前往需求的数据.<br>14.32.手机号码归属地查询<br>在实例中会使用到手机号码归属地查询WebService接口:<a href="http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx%E8%BF%99%E4%B8%AAWebService%E6%8E%A5%E5%8F%A3%E6%98%AFhttp://www.webxml.com.cn%E7%BD%91%E7%AB%99%E6%8F%90%E4%BE%9B%E7%9A%84%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E7%9A%84WebService%E6%8E%A5%E5%8F%A3,%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%87%8C%E4%BD%BF%E7%94%A8%E5%AE%83%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%BA%9B%E5%8A%9F%E8%83%BD">http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx这个WebService接口是http://www.webxml.com.cn网站提供的一个免费的WebService接口,可以在应用程序里使用它实现一些功能</a>.<br>1.接口的方法<br>通过getMobileCodeInfo获得国内手机号码归属地省份,地区和手机卡类型信息<br>2.输入参数<br>mobileCode=字符串(手机号码,最少前7位数字),userID=字符串(商业用户ID)免费用户为空字符串;返回数据:字符串(手机号码:省份城市手机卡类型)<br>3.返回的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;string xmlns=<span class="string">&quot;http://WebXml.com.cn/&quot;</span>&gt;&lt;/string&gt;</span><br></pre></td></tr></table></figure><p>1.在项目中引入WebService服务<br>创建一个Win10项目工程,在工程中添加webservice的引用,将webservice服务加入,这时生成了上述web服务在本地的一个代理.<br>2.调用WebService</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.MobileCodePage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;des&quot;</span> Text=<span class="string">&quot;请输入你需要查询的手机号码&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">&quot;No&quot;</span> Text=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;查询&quot;</span> Name=<span class="string">&quot;search&quot;</span> Click=<span class="string">&quot;search_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;information&quot;</span> Text=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class MobileCodePage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">MobileCodePage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void search_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //实例化一个webservice代理的对象</span><br><span class="line">            MobileCodeService.MobileCodeWSSoapClient proxy=new MobileCodeService.MobileCodeWSSoapClient();</span><br><span class="line">            //调用webservice的方法获取电话号码的归属地</span><br><span class="line">            information.Text = await proxy.getMobileCodeInfoAsync(No.Text,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>14.4.使用WCF Service进行网络编程<br>WCF是微软为构建面向服务的应用提供的分布式通信编程框架.使用该框架,开发人员可以构建跨平台,安全，可靠和支持事务处理的企业级互联应用解决方案.WCF是建立在.Net framework上的类型集合,整合了微软分布式应用程序开发中的众多成熟技术,如Enterprise Sevices(COM+),.Net Remoting,Web Service(ASMX),WSE和MSMQ消息队列,并且存在于微软WIndows操作系统上,在面向服务的世界和面向对象的世界里起着桥梁的作用.<br>1.WCF的通信范围:可以跨进程,跨机器,跨子网,企业网乃至于Internet.<br>2.WCF的宿主:可以是ASP.NET(IIS或WAS),EXE,WPF,Windows Forms,NT Service,COM+<br>3.WCF的通信协议:TCP,HTTP,跨进程以及自定义.<br>14.42.创建WCF Service<br>1.创建一个WCF服务应用程序<br>2.修改Service1.svc和IService1.cs文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.Serialization;</span><br><span class="line">using System.ServiceModel;</span><br><span class="line">using System.ServiceModel.Web;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace WcfService1</span><br><span class="line">&#123;</span><br><span class="line">    // 注意: 使用“重构”菜单上的“重命名”命令，可以同时更改代码和配置文件中的接口名“IService1”。</span><br><span class="line">    [ServiceContract]</span><br><span class="line">    public interface IService1</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        [OperationContract]</span><br><span class="line">        string GetData(int value);</span><br><span class="line"></span><br><span class="line">        [OperationContract]</span><br><span class="line">        CompositeType GetDataUsingDataContract(CompositeType composite);</span><br><span class="line"></span><br><span class="line">        // TODO: 在此添加您的服务操作</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 使用下面示例中说明的数据约定将复合类型添加到服务操作。</span><br><span class="line">    [DataContract]</span><br><span class="line">    public class CompositeType</span><br><span class="line">    &#123;</span><br><span class="line">        bool boolValue = <span class="literal">true</span>;</span><br><span class="line">        string stringValue = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"></span><br><span class="line">        [DataMember]</span><br><span class="line">        public bool BoolValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> boolValue; &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; boolValue = value; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [DataMember]</span><br><span class="line">        public string StringValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> stringValue; &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; stringValue = value; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.Serialization;</span><br><span class="line">using System.ServiceModel;</span><br><span class="line">using System.ServiceModel.Web;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace WcfService1</span><br><span class="line">&#123;</span><br><span class="line">    // 注意: 使用“重构”菜单上的“重命名”命令，可以同时更改代码、svc 和配置文件中的类名“Service1”。</span><br><span class="line">    // 注意: 为了启动 WCF 测试客户端以测试此服务，请在解决方案资源管理器中选择 Service1.svc 或 Service1.svc.cs，然后开始调试。</span><br><span class="line">    public class Service1 : IService1</span><br><span class="line">    &#123;</span><br><span class="line">        public string GetData(int value)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> string.Format(<span class="string">&quot;You entered: &#123;0&#125;&quot;</span>, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public CompositeType GetDataUsingDataContract(CompositeType composite)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (composite == null)</span><br><span class="line">            &#123;</span><br><span class="line">                throw new ArgumentNullException(<span class="string">&quot;composite&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (composite.BoolValue)</span><br><span class="line">            &#123;</span><br><span class="line">                composite.StringValue += <span class="string">&quot;Suffix&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> composite;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">创建好的项目默认文件目录如上所示.在Service1.svc中添加方法:</span><br><span class="line">public string <span class="function"><span class="title">HelloWCF</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="string">&quot;Hello WCF&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">在IService1.cs中添加接口:</span><br><span class="line">[OperationContract]</span><br><span class="line">string HelloWCF();</span><br></pre></td></tr></table></figure><p>3.建一个网站的虚拟目录,指向WCF的项目工程<br>在控制面板中找到IIS并打开,在Default Web Site节点下创建一个虚拟目录,命名为wcf,路径指向本例子的web应用程序的代码,并单击确定按钮,右键刚刚建好的虚拟目录wcf,转换为应用程序,然后在win10中启用WCF相关的服务.<br>4.打开浏览器输入地址<a href="http://localhost/wcf/Service1.svc">http://localhost/wcf/Service1.svc</a><br>14.43.调用WCF Service<br>1.在win10项目中添加WCF服务引用<br>2.调用WCF服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextBlock x:Name=<span class="string">&quot;tb1&quot;</span> Text=<span class="string">&quot;&quot;</span> FontSize=<span class="string">&quot;25&quot;</span>/&gt;</span><br><span class="line"> ///WCF Service</span><br><span class="line">          WcfService.Service1Client proxy=new WcfService.Service1Client();</span><br><span class="line">           tb1.Text = await proxy.HelloWCFAsync();</span><br></pre></td></tr></table></figure><p>14.5.推送通知<br>推送通知:第三方程序与推送通知的服务器保持连接,等有新内容需要提供给设备后,推送通知的服务器就会将数据推送到设备上.推送通知是一个统一的通知服务,使用推送通知服务可以确保用户得到最新信息.很多类型的程序都可以使用这个服务.该服务会维持一个持久的IP连接从而在程序没有运行时也能通知用户.<br>14.51.推送通知的原理和工作方式<br>win10中的推送通知服务是一款异步,尽力型服务,可向第三方开发人员提供一个采用高效节能的方法将数据从云服务发送到Win10应用的通道.开发者可以利用Win10提供的推送通知的服务,来实现网络的服务器端向Win10客户端程序推送一些通知或者消息<br>推送通知涉及的3个重要的服务:<br>1.Web Service(云端服务)<br>这是通知消息的出发点,也就是你要推送什么样的通知,什么内容的消息,就是从这里提供的,使用推送通知的应用程序需要通过Microsoft Push Notification Service注册一个唯一的Channel,然后把这个唯一的Channel告诉云端服务,这时候云端服务就可以将消息搭载这个唯一的Channel,然后把这个唯一的Channel告诉云端服务,这时候云端服务就可以将消息搭载这个唯一的Channel,通过Windows Push Notification Service传送到Windows 10的客户端应用程序.<br>2.Windows Push Notification Service(微软提供的推送通知服务)<br>推送通知的中介角色,为Win10客户端和服务端的交流提供了一条特殊的通道,一种情况是,它接受Win10应用程序通过Push Client创建的Channel来作为整个推送通知过程的通道,另一种情况是,它也接受云端服务所申请的Service Name来进行注册,让Push Client在建立Channel时指定云端服务所注册的Service.<br>3.Push Client(Win10推送通知的客户端)<br>这是推送通知在Win10系统里面的客户端的支持,直接跟设备客户端打交道,Push Client要取得资料的话,则需要向Windows Push Notification Service建立起独有的Channel,因此Push Client会向Windows Push Notification Service送出询问是否存在指定的Service Name与专用的Channel名称.<br>整个推送通知的工作流程<br>1.你的应用从推送客户端服务请求推送通知URI.<br>2.推送客户端服务与Windows推送通知服务(WNS)通信并且WNS向推送客户端服务返回一个通知URI.<br>3.推送客户端服务向你的应用返回通知URI.<br>4.应用向云服务发送通知URI.<br>5.当云服务要向应用发送信息时,它将使用通知URI向WNS发送推送通知.<br>6.MPNS将推送通知路由到应用.<br>14.52.推送通知的分类<br>4种不同类型的通知<br>分别是原生通知(Raw Notification),吐司通知(Toast Notification),磁贴通知(Tile Notification)和徽章通知(Badge Notification).<br>1.原生通知(Raw Notification)<br>原生通知是一种只针对正在运行的应用程序而提供的通知,如果使用原生通知的应用程序并没有运行,而服务器端又给应用程序发送了消息,这一条原生通知将会被微软的推送通知服务所丢弃.原生通知一般是用于给正在运行的应用程序发送消息<br>原生通知的特点:<br>1.可以发送任何格式的数据,有效的载荷最大为1KB.<br>2.只有在使用原生通知运行的情况下才能接收到消息<br>3.允许在用户使用时更新用户界面<br>原生通知的传送格式可以为任意的字符串格式.<br>2.吐司通知(Toast Notification)<br>吐司通知是一种直接在屏幕最上弹出来的系统提示栏通知,一般是用于一些比较重要的通知提示<br>吐司通知的特点:<br>1.发送的数据为指定的Xml格式<br>2.如果程序正在运行,内容发送到应用程序中.<br>3.如果程序不在运行,弹出Toast消息框显示消息<br>4.会临时打断用户的操作.<br>5.消息的内容为应用程序图表加上两个标题描述,标题为粗体字显示的字符串,副标题为非粗体字显示的字符串,也可以只显示内容;<br>6.用户可以点击消息进行跟踪<br>在使用吐司通知之前,我们需要确保在项目配置文件Package.appxmanifest已经设置支持吐司通知.设置的方式为把uap:VisualElements节点的ToastCapable属性设置为”true”.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;uap:VisualElements DisplayName=<span class="string">&quot;PushNotificationDemo&quot;</span></span><br><span class="line">Square150x150Logo=<span class="string">&quot;Assets/Logo.png&quot;</span></span><br><span class="line">... ...</span><br><span class="line">ToastCapable=<span class="string">&quot;true&quot;</span></span><br><span class="line">/uap:VisualElements&gt;</span><br></pre></td></tr></table></figure><p>吐司通知的传送格式如下,关于吐司通知格式更加详细的说明可以参考Win10吐司通知格式说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;toast&gt;</span><br><span class="line">&lt;visual&gt;</span><br><span class="line">&lt;binding template=<span class="string">&quot;ToastText02&quot;</span>&gt;</span><br><span class="line">&lt;text <span class="built_in">id</span>=<span class="string">&quot;1&quot;</span>&gt;headlineText&lt;/text&gt;</span><br><span class="line">&lt;text <span class="built_in">id</span>=<span class="string">&quot;2&quot;</span>&gt;bodyText&lt;/text&gt;</span><br><span class="line">&lt;/binding&gt;</span><br><span class="line">&lt;/visual&gt;</span><br><span class="line">&lt;/toast&gt;</span><br></pre></td></tr></table></figure><p>3.磁贴通知(Tile Notification)<br>磁贴通知是一种针对桌面中的应用程序提供的通知,如果用户并没有把应用程序的磁贴添加在桌面,那么应用程序是不会接收到磁贴通知的.<br>磁贴通知的传送格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;tile&gt;</span><br><span class="line">&lt;visual version=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">&lt;binding template=<span class="string">&quot;TileWide310x150IconWithBadgeAndText&quot;</span>&gt;</span><br><span class="line">&lt;image <span class="built_in">id</span>=<span class="string">&quot;1&quot;</span> src=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">&lt;text <span class="built_in">id</span>=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;text <span class="built_in">id</span>=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">&lt;text <span class="built_in">id</span>=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">&lt;/binding&gt;</span><br><span class="line">&lt;/visual&gt;</span><br><span class="line">&lt;/tile&gt;</span><br></pre></td></tr></table></figure><p>4.徽章通知(Badge Notification)<br>徽章通知是在磁贴右上角的数字通知,通常用于表示应用程序未读消息数量或者新消息数量这种类型的信息.<br>例如未读短信在短信图标右上角显示就是徽章通知的表现形式.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;badge value=<span class="string">&quot;&quot;</span>3<span class="string">&quot;/&gt;</span></span><br></pre></td></tr></table></figure><p>14.53.推送通知的发送机制<br>在Window10应用程序使用推送通知的服务之前,必须要使用开发者账号在提交应用的页面上注册应用程序所对应的推送通知服务,通过注册可获取3个很重要的信息,分别是应用的标识值,程序包安全标识符和密钥,注册推送通知服务<br>1.应用的标识符<br>应用的标识值为”&lt;Identity Name=”229Geek-Space.PushNotificationDemoeeee Publisher=”CN=748B11E2-8CD3-41F4-9670-D945180F31FC”&gt;”,当获取到该标识值的时候,需要把使用该推送通知的Windows10应用程序的清单文件Package.appxmanifest里面的Identity节点改为获取的内容.<br>2.程序包安全标识符<br>程序包安全标识符:”ms-app://s-1-15-2-4017……”,在推送通知的云服务中需要使用到<br>3.密钥<br>密钥:”dmKrq… …”，在推送通知的云服务中需要使用到<br>推送通知的发送机制<br>1.请求和接收访问令牌<br>将HTTP请求发送至推送通知服务以对云服务进行验证,然后反过来检索访问令牌,通过使用安全套接字层(SSL)将请求发布至微软提供的完全限定的域名(<a href="https://login.live.com/accesstoken.srf">https://login.live.com/accesstoken.srf</a>).<br>云服务(也就是服务后台)在HTTP请求正文中提交了这些所需参数,采用的格式为”application/x-www-form-0urlencoded”.必须确保所有参数进行URL编码,在URL编码中有4个参数,<br>1.grant_type:必须设置为”client_credentials”<br>2.client_id:向应用商店注册应用时已分配的云服务程序包安全标识符(SID)<br>3.client_secret:向应用商店注册应用时已分配的云服务密钥.<br>4.scope:必须设置为”notify.windows.com”.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant_type=client_credentials&amp;client_id=...&amp;client_secrt=......&amp;scope=...</span><br></pre></td></tr></table></figure><p>云服务通过一个使用”application/x-www-for-urlencoded”格式的HTTPS身份验证请求提供它的凭据(程序包安全标识符和客户端密钥).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /acceddtoken.srf HTTP/1.1</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Host:https://login.live.com</span><br><span class="line">Content-Length:211</span><br></pre></td></tr></table></figure><p>推送通知服务随即向你的服务器发送对身份验证请求的响应.如果响应代码为”200 OK”.则身份验证成功,响应包含一个访问令牌,云服务器必须保存这个令牌,并且用在它发送的任何通知中,直到该访问令牌过期.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Cache-Control:no-store</span><br><span class="line">Content-Length:422</span><br><span class="line">Content-Type:application/json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;access_token&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;token_type&quot;</span>:<span class="string">&quot;bearer&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中,access_token表示云服务在发送通知时使用的访问令牌,token_type始终作为”bearer”返回.<br>2.发送通知请求和接收响应<br>调用应用发送通知请求时,会通过SSL发出HTTP请求,将该请求发送至信道统一资源标识符.<br>“Content-Length”是标准的HTTP标头,必须在请求中指定.所有其他标准标头可选,或i不受支持.<br>另外此处所列的自定义请求头可用在通知请求中,某些头必需,而其他头可选,这些请求头说明如下:<br>1.Authorization(必须):标准HTTP授权头用于对通知请求进行验证.云服务在此头中提供了其访问令牌.格式为Authorization:Bearer<access-token>,字符串文字”Bearer”,后面是空格,再后面是你的访问令牌.通过发布上述的访问令牌请求检索此访问令牌,同一访问令牌可用于后续通知请求中,直至该令牌过期.<br>2.Content-Type(必填):标准HTTP授权头,对于吐司,磁贴，徽章通知,此标头应设置为”text/xml”.对于原生通知,此标头应设置为”application/octet-stream”.<br>3.Content-Length(必填):表示请求负载大小的标准HTTP授权头.<br>4.X-WNS-Type(必须):定义负载中的通知类型:磁贴,吐司,徽章或原生通知,这些是推送通知服务支持的通知类型.此头表示通知类型及推送通知服务处理该通知时应采用的方式.当通知到达客户端后,针对此指定的类型验证实际的负载,X-WNS-Type的格式为”X-WNS-Type:wns/toast/wns/badge/wns/tile/wns/raw”，按照顺序分别表示吐司,徽章,磁贴和原生通知.<br>5.X-WNS-Cache-Policy(可选):启用或禁用通知缓存.仅应用于磁贴,徽章和原生通知,设置这个格式为”X-WNS-Cache-Policy:cache|no-cache“.当通知目标设备处于脱机状态时,推送通知服务会为每个应用缓存通知.如果启用了通知循环,至多会缓存5个磁贴通知.如果启用了原始通知缓存,则将会缓存一个原始通知.项不会无期限的保留在缓存中,它们会再一段适度长的时间后丢弃,否则,下次联机时,将传递缓存内容.<br>6.X-WNS-RequestForStatus(可选):通知响应中的请求设备状态和推送通知服务连接状态.X-WNS-RequestForStatus的格式为”X-WNS-RequestForStatus:true|false”,true表示返回响应中的设备状态和通知状态,false是默认值.<br>7.X-WNS-Tag(可选):用于为通知提供识别标签,用作支持通知队列的磁贴的字符串,此头仅应用于磁贴通知.X-WNS-Tag的格式为:”X-WNS-Tag:<string value>“,string value表示不超过16个字符的字母数字字符串.<br>8.X-WNS-TTL(可选):指定生存时间(TTL)的整数值(用秒数表示).X-WNS-TTL:的格式为”X-WNS-TTL:<integer value>“,integer value表示接收请求后的通知生存期跨度(以秒为单位).<br>上面的是发送HTTP的请求头,请求之后会获取到HTTP的响应.HTTP响应码200 OK表示通知发送成功,失败的响应码有400(错误的请求),401(未授权),403(已禁止),404(未找到),405(方法不允许).<br>除了响应码外,响应头也会带上相关的信息:<br>1.X-WNS-Debug-Trace(可选):报告问题时应记录用于帮助解决问题的调试信息.<br>2.X-WNS-DeviceConnectionStatus(可选):设备状态,仅当通过X-WNS-RequestForStatus头在通知请求中请求时返回.<br>3.X-WNS-Error-Description(可选):应记录用于帮助调试的人工可读错误.<br>4.X-WNS-Msg-ID(可选):通知的唯一标识符,用于调试目的,报告问题时,应记录此信息以有助于故障诊断.<br>5.X-WNS-NotificationStatus(可选):指示推送通知服务是否成功接收通知并处理通知,报告问题时,应记录此信息以有助于故障诊断.<br>下面给出使用Windows窗体应用程序发送推送通知的示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line">[DataContract]</span><br><span class="line">public class OAuthToken&#123;</span><br><span class="line">[DataMember(Name=<span class="string">&quot;access_token&quot;</span>)]</span><br><span class="line">public string AccessToken&#123;get;<span class="built_in">set</span>;&#125;</span><br><span class="line">[DataMember(Name=<span class="string">&quot;token_type&quot;</span>)]</span><br><span class="line">public string TokenType&#123;get;<span class="built_in">set</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">using App1.Models;</span><br><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Net;</span><br><span class="line">using System.Runtime.Serialization.Json;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace App1.Behaviors</span><br><span class="line">&#123;</span><br><span class="line">    public class OAuthTokenHelper</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        public OAuthToken GetAccessToken(string secret, string sid) &#123;</span><br><span class="line">            var urlEncodedSecret = UrlEncode(secret);</span><br><span class="line">            var urlEncodedSid = UrlEncode(sid);</span><br><span class="line">            //拼接请求的参数</span><br><span class="line">            var body = String.Format(<span class="string">&quot;grant_type=client_credentials&amp;client_id=&#123;0&#125;&amp;client_secret=&#123;1&#125;&amp;scope=notify.windows.com&quot;</span>,urlEncodedSid,urlEncodedSecret);</span><br><span class="line">            string response;</span><br><span class="line">            //发起网络请求获取access-token</span><br><span class="line">            using (WebClient client=new WebClient())</span><br><span class="line">            &#123;</span><br><span class="line">                client.Headers.Add(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">                response = client.UploadString(<span class="string">&quot;https://login.live.com/accesstoken.srf&quot;</span>,body);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> GetOAuthTokenFromJson(response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// json字符串转换为对象的方法</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;jsonString&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        private OAuthToken GetOAuthTokenFromJson(string jsonString)</span><br><span class="line">        &#123;</span><br><span class="line">            using (var ms=new MemoryStream(Encoding.Unicode.GetBytes(jsonString)))</span><br><span class="line">            &#123;</span><br><span class="line">                var ser = new DataContractJsonSerializer(typeof(OAuthToken));</span><br><span class="line">                var oAuthToken=(OAuthToken)ser.ReadObject(ms);</span><br><span class="line">                <span class="built_in">return</span> oAuthToken;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// Url参数序列化的方法</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;secret&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private object UrlEncode(string str)</span><br><span class="line">        &#123;</span><br><span class="line">           StringBuilder sb=new StringBuilder();</span><br><span class="line">            byte[] byStr= Encoding.UTF8.GetBytes(str);</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; byStr.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.Append(@<span class="string">&quot;%&quot;</span> + Convert.ToString(byStr[i],16));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> sb.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.NotificationPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;StackPanel Grid.Row=<span class="string">&quot;0&quot;</span> Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;通知地址&quot;</span> Margin=<span class="string">&quot;0,0,30,0&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">&quot;NotiAddress&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;300&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span> Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;通知内容&quot;</span> Margin=<span class="string">&quot;0,0,30,0&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">&quot;NotiContent&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;300&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        &lt;StackPanel Grid.Row=<span class="string">&quot;2&quot;</span> Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;通知状态&quot;</span> Margin=<span class="string">&quot;0,0,30,0&quot;</span>/&gt;</span><br><span class="line">            &lt;RadioButton x:Name=<span class="string">&quot;radioButton1&quot;</span> IsChecked=<span class="string">&quot;True&quot;</span> Content=<span class="string">&quot;Raw通知&quot;</span>/&gt;</span><br><span class="line">            &lt;RadioButton x:Name=<span class="string">&quot;radioButton2&quot;</span> Content=<span class="string">&quot;Tile通知&quot;</span>/&gt;</span><br><span class="line">            &lt;RadioButton x:Name=<span class="string">&quot;radioButton3&quot;</span> Content=<span class="string">&quot;Toast通知&quot;</span>/&gt;</span><br><span class="line">            &lt;RadioButton x:Name=<span class="string">&quot;radioButton4&quot;</span> Content=<span class="string">&quot;badge通知&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        &lt;StackPanel Grid.Row=<span class="string">&quot;3&quot;</span> Orientation=<span class="string">&quot;Horizontal&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;发送通知&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span> Width=<span class="string">&quot;120&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">        &lt;StackPanel Grid.Row=<span class="string">&quot;4&quot;</span>&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;当前的状态&quot;</span> Margin=<span class="string">&quot;150,0,20,0&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;tb2&quot;</span> Text=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using App1.Behaviors;</span><br><span class="line">using App1.Models;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Net;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using System.Text;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class NotificationPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">NotificationPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 发送通知</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            sendNotificationType(NotiContent.Text,NotiAddress.Text);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 发送推送通知</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;text1&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;text2&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void sendNotificationType(string message, string notifyUrl)</span><br><span class="line">        &#123;</span><br><span class="line">            //程序包安全标识符(SID)</span><br><span class="line">            string sid = <span class="string">&quot;ms-app://s-1-15-2-4017463433-3104818020-3212661602-2100054673-1509338986-1481803562-2878777805&quot;</span>;</span><br><span class="line">            //客户端密钥</span><br><span class="line">            string secret = <span class="string">&quot;dmKrqkwpNF1Bd1L0RDTW1AWkxotlwsqu&quot;</span>;//<span class="string">&quot;bs08Acs1RG7jB7pkGVMh8EmGKCG3pH+3&quot;</span>;</span><br><span class="line">            OAuthTokenHelper oauth = new OAuthTokenHelper();</span><br><span class="line">            //获取访问的令牌</span><br><span class="line">            OAuthToken token = oauth.GetAccessToken(secret,sid);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //创建Http对象</span><br><span class="line">                HttpWebRequest myReqeuest = (HttpWebRequest)WebRequest.Create(notifyUrl);</span><br><span class="line">                //toast,tile,badge为text/xml;raw为application/octet-stream</span><br><span class="line">                myReqeuest.ContentType = <span class="string">&quot;text/xml&quot;</span>;</span><br><span class="line">                //设置access-token;</span><br><span class="line">                myReqeuest.Headers.Add(<span class="string">&quot;Authorization&quot;</span>,String.Format(<span class="string">&quot;Bearer &#123;0&#125;&quot;</span>,token.AccessToken));</span><br><span class="line">                string message2 = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> ((bool)radioButton1.IsChecked)</span><br><span class="line">                &#123;</span><br><span class="line">                    message2 = message;</span><br><span class="line">                    //推送raw消息</span><br><span class="line">                    myReqeuest.Headers.Add(<span class="string">&quot;X-WNS-Type&quot;</span>, <span class="string">&quot;wns/raw&quot;</span>);</span><br><span class="line">                    //注意raw消息为application/octet-stream</span><br><span class="line">                    myReqeuest.ContentType = <span class="string">&quot;application/octet-stream&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((bool)radioButton2.IsChecked)</span><br><span class="line">                &#123;</span><br><span class="line">                    message2 = NotifyTile(message);</span><br><span class="line">                    //推送tile消息</span><br><span class="line">                    myReqeuest.Headers.Add(<span class="string">&quot;X-WNS-Type&quot;</span>, <span class="string">&quot;wns/tile&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((bool)radioButton3.IsChecked) &#123;</span><br><span class="line">                    message2 = NotifyToast(message);</span><br><span class="line">                    //推送toast消息</span><br><span class="line">                    myReqeuest.Headers.Add(<span class="string">&quot;X-WNS-Type&quot;</span>,<span class="string">&quot;wns/toast&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((bool)radioButton4.IsChecked)</span><br><span class="line">                &#123;</span><br><span class="line">                    message2 = NotifyBadge(message);</span><br><span class="line">                    //推送badge消息</span><br><span class="line">                    myReqeuest.Headers.Add(<span class="string">&quot;X-WNS-Type&quot;</span>,<span class="string">&quot;wns/badge&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    //默认的消息</span><br><span class="line">                    myReqeuest.Headers.Add(<span class="string">&quot;X-WNS-Type&quot;</span>,<span class="string">&quot;wns/raw&quot;</span>);</span><br><span class="line">                    myReqeuest.ContentType = <span class="string">&quot;application/octet-stream&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                byte[] buffer = Encoding.UTF8.GetBytes(message2);</span><br><span class="line">                myReqeuest.ContentLength = buffer.Length;</span><br><span class="line">                myReqeuest.Method = <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">                using (Stream stream=myReqeuest.GetRequestStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    stream.Write(buffer,0,buffer.Length);</span><br><span class="line">                &#125;</span><br><span class="line">                using (HttpWebResponse webResponse=(HttpWebResponse)myReqeuest.GetResponse())</span><br><span class="line">                &#123;</span><br><span class="line">                    /*响应代码说明</span><br><span class="line">                    200 OK,WNS已经接收到通知</span><br><span class="line">                    400 错误的请求</span><br><span class="line">                    401 未授权,token可能无效</span><br><span class="line">                    403 已禁止,mainfest中的identity可能不对</span><br><span class="line">                    404 未找到</span><br><span class="line">                    405 方法不允许</span><br><span class="line">                    406 无法接受</span><br><span class="line">                    410 不存在,信道不存在或过期</span><br><span class="line">                    413 请求实体太大,限制为5000字节</span><br><span class="line">                    500 内部服务器错误</span><br><span class="line">                    503 服务不可用</span><br><span class="line">                    */</span><br><span class="line">                    tb2.Text = webResponse.StatusCode.ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                tb2.Text = <span class="string">&quot;异常&quot;</span> + ex.Message;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 封装Badge消息格式</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;message&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private string NotifyBadge(string badge)</span><br><span class="line">        &#123;</span><br><span class="line">            string badgemessage = (@<span class="string">&quot;&lt;badge value=&quot;</span><span class="string">&quot;&quot;</span>+badge+@<span class="string">&quot;&quot;</span><span class="string">&quot;/&gt;&quot;</span>);</span><br><span class="line">            <span class="built_in">return</span> badgemessage;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 封装Tile消息格式</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;message&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        private string NotifyTile(string message)</span><br><span class="line">        &#123;</span><br><span class="line">            string tilemessage = </span><br><span class="line">                @<span class="string">&quot;&lt;tile&gt;</span></span><br><span class="line"><span class="string">                    &lt;visual&gt;</span></span><br><span class="line"><span class="string">                        &lt;binding template=&quot;</span><span class="string">&quot;TileWideText03&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;text id=&quot;</span><span class="string">&quot;1&quot;</span><span class="string">&quot;&gt;&quot;</span>+message+@<span class="string">&quot;&lt;/text&gt;</span></span><br><span class="line"><span class="string">                        &lt;/binding&gt;</span></span><br><span class="line"><span class="string">                    &lt;/visual&gt;</span></span><br><span class="line"><span class="string">                  &lt;/tile&gt;&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> tilemessage;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 封装Toast消息格式</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;message&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private string NotifyToast(string message)</span><br><span class="line">        &#123;</span><br><span class="line">            string toastmessage = </span><br><span class="line">        @<span class="string">&quot;&lt;toast launch=&quot;</span><span class="string">&quot;&quot;</span> + Guid.NewGuid().ToString() + @<span class="string">&quot;&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;visuallang=&quot;</span><span class="string">&quot;en-US&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;binding template=&quot;</span><span class="string">&quot;ToastText01&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;text id=&quot;</span><span class="string">&quot;1&quot;</span><span class="string">&quot;&gt;&quot;</span> + message + @<span class="string">&quot;&lt;/text&gt;</span></span><br><span class="line"><span class="string">                &lt;/binding&gt;</span></span><br><span class="line"><span class="string">            &lt;visual&gt;</span></span><br><span class="line"><span class="string">          &lt;/toast&gt;&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> toastmessage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>14.54.客户端程序实现推送通知的接收<br>在客户端程序实现推送通知主要有两个步骤,一个是请求通道URI,另外一个是将通道URI发送至服务器,请求通道URI是指Win10客户端平台发出此请求,然后该平台依次从推送通知服务请求通道URI,请求完成后,实现的方法是直接调用PushNotificationChannelManger类的CreatePushNotificationChannelForApplicationAsync静态方法,返回的值为包含URI的PushNotificationChannel对象,将通道URI发送至服务器则是要把这个通道存储起来,用来向当前的应用程序发送消息通知,发送的实现应该采用安全的方式将此信息发送至服务器,对信息进行加密并使用安全的协议,如HTTPS.下面来看下对于推送通知通道的一些处理情况<br>1.请求通道<br>每次调用你的应用时，应该使用以下逻辑请求一个新的通道：<br> 1.请求通道<br> 2.将新通道与前一个通道相比较,如果相同,则不需要采取进一步的操作.注意,在应用每次成功将通道发送到服务时,都对该通道进行本地存储,以便将该通道与后一个通道相比较.<br>3.如果该通道已更改,请将新通道发送给web服务.<br>对CreatePushNotificationChannelForApplicationAsync方法的不同调用不会始终返回不同的通道,如果自上次调用后通道未改变,则应用不必重新向服务发送此相同的通道以节省资源和Internet流量.一个应用可同时拥有多个有效的通道URI,由于每个唯一的通道直到其到期前均有效,因此请求新的通道也无妨,因为他不会影响任何以前通道的到期时间.<br>通过在每次调用应用时请求一个新通道,最大化的保证了有效通道,如果你担心用户在30天内运行你的应用的次数不超过一次,你可以实施一个后台任务来定期执行你的通道请求代码.<br>2.处理通道请求中的错误<br>如果Internet不可用,则调用CreatePushNotificationChannelForApplicaitonAsync方法可能会失败.若要处理这种情况,可以进行重试,建议尝试三次,在每次尝试不成功后,延迟10秒,如果三次均失败,则必须等到该用户下次启动应用后再次重试.<br>3.关闭通道<br>通过调用PushNotificationChannel.Close方法,你的应用可立即停止所有通道上的通知传递.虽然此项操作在实际的业务中比较少见,但是可能存在某些情景,你希望停止及那个所有通知传递到你的应用.例如,如果你的应用有用户账户概念,且某个用户已从该应用注销,则磁贴不再显示该用户的个人信息应该是合理的行为.若要成功清除磁贴的内容并停止通知传递,你必须执行以下操作:<br>1.通过在向用户传递磁贴,吐司,徽章或原生通知的任何云通知通道上调用PushNotificationChannel.Close方法,停止所有磁贴更新,调用Close方法可确保不会再将该用户的任何通知传递到客户端.<br>2.通过调用TileUpdater.Clear方法清除磁贴内容,以便从磁贴中删除之前用户的数据.<br>下面给出测试推送通知的示例,创建一个Win10的应用程序,在应用程序里面注册推送通知的频道,然后使用上一小节的Windows窗体应用程序利用注册的频道来发送推送通知.<br>首先需要把使用开发者账号获取到的Identity信息,替换掉当前应用程序清单文件Package.appxmanifest里面的Identity元素.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;Identity Name=<span class="string">&quot;229Geek-Space.PushNotificationDemoeeee&quot;</span> Publisher=<span class="string">&quot;CN=748B11E2-8CD3-41F4-9670-D945180F31FC&quot;</span> Version=<span class="string">&quot;1.0.0.0&quot;</span>/&gt;</span><br><span class="line">&lt;StackPanel&gt;</span><br><span class="line">&lt;Button x:Name=<span class="string">&quot;bt_open&quot;</span> Content=<span class="string">&quot;注册推送通知&quot;</span> Click=<span class="string">&quot;bt_open_Click&quot;</span>&gt;</span><br><span class="line">&lt;/Button&gt;</span><br><span class="line">&lt;TextBlock x:Name=<span class="string">&quot;info&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>&gt;&lt;/TextBlock&gt;</span><br><span class="line">&lt;/StackPanel&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Diagnostics;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Networking.PushNotifications;</span><br><span class="line">using Windows.UI.Notifications;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class ReceiveNotificationPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">ReceiveNotificationPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 打开推送通知的频道</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void bt_open_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //创建一个频道</span><br><span class="line">            PushNotificationChannel channel=await PushNotificationChannelManager.CreatePushNotificationChannelForApplicationAsync();</span><br><span class="line">            //获取频道的地址,实际上是需要把频道的地址发送到云端服务来存储起来</span><br><span class="line">            string uri=channel.Uri;</span><br><span class="line">            //在该测试例子里面我们把地址复制到Windows窗体程序进行发送通知.</span><br><span class="line">            Debug.WriteLine(uri);</span><br><span class="line">            //接收到通知后触发的事件</span><br><span class="line">            channel.PushNotificationReceived += Channel_PushNotificationReceived;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 通知接收事件,如果有推送通知,当前应用程序正在运行则会触发该事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private async void Channel_PushNotificationReceived(PushNotificationChannel sender, PushNotificationReceivedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            switch (args.NotificationType)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> PushNotificationType.Toast://toast通知</span><br><span class="line">                    ToastNotificationManager.CreateToastNotifier().Show(args.ToastNotification);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> PushNotificationType.Tile://tile通知</span><br><span class="line">                    TileUpdateManager.CreateTileUpdaterForApplication().Update(args.TileNotification);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> PushNotificationType.Badge://badge通知</span><br><span class="line">                    BadgeUpdateManager.CreateBadgeUpdaterForApplication().Update(args.BadgeNotification);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> PushNotificationType.Raw://raw通知</span><br><span class="line">                    string msg = args.RawNotification.Content;</span><br><span class="line">                    await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt; info.Text = msg);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> PushNotificationType.TileFlyout:</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Socket编程"><a href="#Socket编程" class="headerlink" title="Socket编程"></a>Socket编程</h4><p>Socket是网络通信的一种方式,使用Socket可以实现比HTTP协议更加复杂和高效的网络编程.Win10基于Windows运行时的架构提供了一套Socket编程的API,这套API不仅仅可以实现互联网上的Socket的TCP和UDP协议,还可以支持蓝牙编程和近场通信编程的消息传输.<br>Socket是应用层与TCP/IP协议族通信的中间软件抽象层,它是一组接口.在设计模式中,Socket其实就是一个门面模式,它把复杂的TCP/IP协议隐藏在Socket接口后面,对用户来说,一组简单的接口就是全部,让Socket去组织数据,以符合指定的协议,应用程序通常通过Socket向网络发出请求或者应答网络请求,Socket是一种用于表达两台机器之间连接”终端”的软件抽象,对于一个给定的连接,在每台机器上都有一个Socket<br>网络上的两个程序通过一个双向的通信连接实现数据交换,这个双向链路的一端称为一个Socket,Socket通常用来实现客户方和服务方的连接,Socket是TCP/IP协议的一个十分流行的编程界面,一个Socket由一个IP地址和一个端口号唯一确定,但是Socket所支持的协议种类不光是TCP/IP一种,因此两者之间没有必然的联系.<br>一台机器上的Socket同另一台机器通话创建一个通信信道,程序员可以用这个信道在两台机器间发送数据.当你发送数据时,TCP/IP协议栈的每一层都给你的数据里添加适当的报头,Socket像电话听筒一样在电话的任意一端—你和我通过一个专门的信道来进行通话,会话将一直进行下去直到我们决定挂断电话。<br>使用Socket编程的API可以使我们更方便的创建出FTP,电子邮件,聊天系统和流媒体等类型的网络应用.<br>1.端口<br>网络中可以被命名和寻址的通信端口,是操作系统可分配的一种资源,按照OSI七层协议的描述,传输层与网络层在功能上的最大区别是传输层提供进程通信能力,从这个意义上讲,网络通信的最终地址就不仅仅是主机地址了,还包括可以描述进程的某种标识符.为此,TCP/IP协议提出了协议端口的概念,用于标识通信的进程.<br>端口是一种抽象的软件结构(包括一些数据结构和I/O缓冲区).应用程序(即进程)通过系统调用与某端口建立连接(绑定)后,传输层传递给该端口的数据都被相应的进程接收,相应的进程发给传输层的数据都通过该端口输出.<br>类似于文件描述符,每个端口都拥有一个叫端口号(port number)的整数型标识符,用于区别不同的端口,由于TCP/IP传输层的两个协议TCP和UDP是完全独立的软件模块,因此各自的端口号也相互独立,如TCP有一个255号端口,UDP也可以有一个255号端口,两者并不冲突.<br>端口号的分配是一个重要问题.有两种基本分配方式:第一种叫全局分配,这是一种集中控制方式,由一个公认的中央机构根据用户进行统一分配,并将结果公布于众,第二种是本地分配,又称动态连接,即进程需要访问传输层服务时,向本地操作系统提出申请,操作系统返回一个本地唯一的端口号,进程再通过合适的系统调用将自己与该端口号联系起来.TCP/IP端口号的分配综合了上述两种方式,TCP/IP将端口分为两部分,少量的作为保留端口,剩余的为自由端口,以本地方式进行分配.TCP和UDP均规定,小于256的端口才能作为保留端口.<br>2.地址<br>网络通信中通信的两个进程分别在两台地址不同的机器上,在互联网络上,两台机器可能位于不同位置的网络上,这些网络通过网络互连设备(网关,网桥,路由器等)连接.因此需要三级寻址:<br>1.某一主机可与多个网络相连,必须指定一个特定网络地址<br>2.网络上每一台主机应有唯一的地址<br>3.每一台主机上的每一个进程应有在该主机上的唯一标识符.<br>主机地址通常由网络ID和主机ID组成,在TCP/IP协议中用32位整数值表示;TCP和UDP均使用16位端口号标识用户进程.<br>3.IPV4和IPV6<br>IPV4是互联网协议的第4版,也是第一个被广泛使用,构成现代互联网技术的基础协议.<br>1981年,Jon Postel在RFC791中定义了IP,IPV4可以运行在各种各样的底层网络上,比如端对端的串行数据链路(PPP协议和SLIP协议),卫星链路等.最常用的局域网是以太网,IPV6是IETF设计的用于替代现行版本IP协议的下一代IP协议.目前IP协议的版本号是4(简称为IPV4),下一版本就是IPV6.<br>4.广播<br>广播是指在一个局域网中向所有的网络节点发送信息.广播有一个广播组,即只有一个广播组内的节点才能收到发往这个广播组的信息.什么决定了一个广播组呢,就是端口号,局域网内一个节点,如果设置了广播属性并监听了端口A,那么他就加入了A组广播,这个局域网内所有发往广播端口A的信息它都收的到,在广播的实现中,如果一个节点想接受A组广播信息,那么就要先将它绑定给地址和端口A,然后设置这个Socket的属性为广播属性,如果一个节点不想接受广播信息,而只想发送广播信息,那么不用绑定端口,只需要先为socket设置广播属性,然后向广播地址的A端口发送信息即可.<br>5.TCP协议<br>TCP是Tranfer Control Protocol的简称,是一种面向连接的保证可靠传输的协议.通过TCP协议传输,得到的是一个顺序的,无差错的数据流,发送方和接收方的两个成对的socket之间必须建立连接,以便在TCP协议的基础上进行通信,当一个socket(通常都是server socket)等待建立连接时,另一个socket可以要求进行连接,一旦这两个socket连接起来,它们就可以进行双向数据传输,双方都可以进行发送或接收操作.<br>6.UDP协议.<br>UDP是User Datagram Protocol的简称,是一种无连接的协议,每个数据报都是一个独立的信息,包括完整的源地址或目的地址,它在网络上以任何可能的路径传往目的地,因此能否到达目的地,到达目的地的时间以及内容的正确性都是不能被保证的.<br>7.TCP协议和UDP协议的区别<br>UDP:<br>1.每个数据报中都给出了完整的地址信息,因此无需要建立发送方和接收方的连接.<br>2.UDP传输数据时是有大小限制的,每个被传输的数据报必须限定在64KB之内.<br>3.UDP是一个不可靠的协议,发送方所发送的数据报并不一定以相同的次序到达接收方.<br>4.TCP在网络通信上有极强的生命力,例如远程连接(Telnet)和文件传输(FTP)都需要可靠的传输不确定长度的数据.但是可靠的传输是要付出代价的,对数据内容正确性的检验必须占用计算机的处理时间和网络的带宽,因此TCP传输的效率不如UDP高.<br>1.面向连接的协议,在Socket之间进行数据传输之前必须要建立连接,所以在TCP中需要连接时间.<br>2.TCP传输数据大小限制,一旦连接建立起来,双方的Socket就可以按统一的格式传输大数据.<br>3.TCP是一个可靠的协议,它确保接收方完全正确的获取发送方所发送的全部数据.<br>4.UDP操作简单,而且仅需要较少的监护,因此常用于局域网高可靠性的分散系统中的client/server应用程序,<br>8.Socket连接与HTTP连接的区别<br>通常情况下,Socket连接就是TCP连接,因此Socket连接一旦建立,通信双方即可相互发送数据内容,直到双方连接断开,但在实际网络应用中,客户端到服务器之间的通信往往需要穿越多个中间节点,例如路由器,网关,防火墙等,大部分防火墙默认会关闭长时间处于非活跃状态的连接而导致Socket连接中断,因此需要通过轮询告诉网络,该连接处于活跃状态.而HTTP连接使用的是”请求——响应”的方式,不仅在请求时需要先建立连接,而且需要客户端向服务器发出请求后,服务器端才能回复数据.很多情况下,需要服务器端主动向客户端推送数据,保持客户端与服务器数据的实时与同步.若双方建立的是HTTP连接,则服务器需要等到客户端发送一次请求后才能将数据传回给客户端.因此,客户端定时向服务器端发送连接请求,不仅可以保持在线,同时也是在”询问”服务器是否有新的数据,如果有就将数据传给客户端.<br>15.12.Socket通信的过程<br>Socket通信在客户端和服务器进行的,建立Socket连接至少需要一对Socket,其中一个运行于客户端.称为ClientSocket,另一个运行于服务器端,称为ServerSocket.<br>Socket之间的连接过程分为三个步骤:服务器监听,客户端请求,连接确认.<br>服务器监听:服务器端Socket并不定位具体的客户端Socket,而是处于等待连接的状态,实时监控网络状态,等待客户端的连接请求.<br>客户端请求:指客户端的Socket提出连接请求,要连接的目标是服务器端的Socket.为此,客户端的Socket必须首先描述它要连接的服务器的Socket,指出服务器端Socket的地址和端口号,然后再向服务器端Socket提出连接请求.<br>连接确认:当服务器端Socket监听到或者说接收到客户端Socket的连接请求时,就响应客户端Socket的请求,建立一个新的线程,把服务器端Socket的描述发给客户端,一旦客户确认了此描述,双方就正式建立连接.而服务器端Socket继续处于监听状态,继续接收其他客户端Socket的连接请求.<br>整个Win10应用程序Socket通信的过程包括了七个步骤<br>第一步:创建一个客户端和服务器端的Socket连接<br>第二步:客户端发送消息的过程,客户端向服务器端发送消息,服务器端接收客户端发过来的消息.<br>第三步:客户端接收消息的过程，客户端接收服务端返回来的消息.<br>第四步:连接继续保持,将可以不断地重复第二步和第三步地发送消息和接受消息地动作.<br>第五步:关闭发送接收通道,可以只关闭发送通道或者接收通道,也可以两者同时关闭.<br>第六步:关闭Socket连接.<br>第七步:整个通信过程到此终止.<br>15.2.Socket编程之TCP协议<br>在Win10里不仅仅可以实现客户端的Socket编程,还可以实现服务器端的Socket监听客户端的TCP协议主要依赖于StreamSocket类来实现相关的功能,对应的服务器端的监听则可以使用StreamSocketListener类<br>15.21.StreamSocket介绍及TCP Socket编程步骤<br>StreamSocket类在Windows.Networking.Sockets空间下,表示对象连接到网络资源,以使用异步方法发送数据,<br>StreamSocket类成员<br>StreamSocket()<br>创建新的StreamSocket对象<br>StreamSocketControl Control<br>获取StreamSocket对象上的套接字控件数据;返回某一StreamSocket对象上的套接字控件数据.<br>StreamSocketInformation Information<br>获取StreamSocket对象上的套接字信息:返回该StreamSocket对象的套接字信息<br>IIputStream InputStream<br>获取要从StreamSocket对象上的远程目标读取的输入流,返回要从远程目标读取的有序字节流<br>IOutputStream OutputStream<br>获取StreamSocket对象上的远程目标读取的输出流,返回要写入远程目标的有序字节流<br>IAsyncAction ConnectAsync(EndpointPair endpointPair)<br>启动Stream对象连接到被指定为EndPointPair对象的远程网络目标的异步操作,endPointPair:指定本地主机名或IP地址,本地服务名或UDP端口,远程主机名或IP地址,以及远程网络目标的远程服务名或远程TCP端口的EndpointPair对象:返回StreamSocket对象的异步连接操作.<br>IAsyncAction ConnectAsync(EndpointPair endpointPair,SocketProtectionLevel protectionLevel)<br>启动StreamSocket对象连接到被指定为EndpointPair对象和SocketProtectionLevel枚举的远程网络目标的异步操作,protectionLevel:表示StreamSocket对象的完整性和加密的保护级别,返回StreamSocket对象的异步连接操作<br>IAsyncAction ConnectAsync(HostName remoteHostName,string remoteServiceName)<br>在StreamSocket上启动远程主机名和远程服务名所指定的远程网络目标的连接操作;remoteHostName:远程网络目标的主机名或IP地址;remoteServiceName:远程网络目标的服务名称或TCP端口号,返回StreamSocket对象的异步连接操作.<br>IAsyncAction ConnectAsync(HostName remoteHostName,string remoteServiceName,SocketProtectionLevel protectionLevel)<br>启动StreamSocket对象连接远程主机名,远程服务名以及SocketProtectionLevel所指定的远程目标的异步操作<br>IASyncAction UpgradeToSslAsync(SocketProtectionLevel protectionLevel,HostName validationHostName)<br>启动StreamSocket对象将连接的套接字升级到使用SSL的异步操作;protectionLevel:表示StreamSocket对象上完整性和加密的保护级别,validationHostName:在升级到SSL时用于验证的远程网络目标的主机名,返回StreamSocket对象升级到使用SSL的异步操作.<br>使用StreamSocket类进行TCP Socket编程的步骤如下:<br>1.使用StreamSocket类创建TCP协议的Socket对象.<br>2.使用StreamSocket.ConnectAsync方法之一建立与TCP网络服务器的网络连接.<br>3.使用Streams.DataWriter对象将数据发送到服务器,该对象允许程序员在任何流上写入常用类型(例如整数和字符串)<br>4.使用Streams.DataReader对象从服务器接收数据,该对象允许程序员在任何流上读取常用类型(例如整数和字符串).<br>15.22.连接Socket<br>连接Socket是使用Socket编程的第一步,创建StreamSocket并连接到服务器,在这个步骤里还会定义主机名和服务名(TCP端口)以连接到服务器.连接的过程是采用异步任务的模式,当连接成功时会继续执行到await连接服务器后面的代码,如果连接失败,ConnectAsync方法将会抛出异常,表示无法与网络服务器建立TCP连接,连接失败,需要捕获异常的信息来获取是什么类型的异常,然后判断是否需要重新连接还是释放掉资源.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public async void <span class="function"><span class="title">Connect</span></span>() &#123;</span><br><span class="line">            //创建一个StreamSocket对象</span><br><span class="line">            StreamSocket clientSocket = new StreamSocket();</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //创建一个主机名字</span><br><span class="line">                HostName serverHost = new HostName(serverHostName);</span><br><span class="line">                //开始链接</span><br><span class="line">                await clientSocket.ConnectAsync(serverHost,serverPort);</span><br><span class="line">                //链接成功</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                //获取错误的类型 SocketError.GetStatus(exception.HResult)</span><br><span class="line">                //错误消息 exception.Message</span><br><span class="line">                //如果关闭Socket则释放资源</span><br><span class="line">                clientSocket.Dispose();</span><br><span class="line">                clientSocket = null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>15.23.发送和接收信息<br>Socket连接成功之后便可以发送和接收Socket消息,发送消息需要使用Streams.DataWriter对象将数据发送到服务器,接收消息使用Streams.DataReader对象从服务器接收数据.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 发送消息</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public async void <span class="function"><span class="title">Send</span></span>() &#123;</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               //发送消息</span><br><span class="line">               string sendData = <span class="string">&quot;Test Message str&quot;</span>;</span><br><span class="line">               //创建一个DataWriter对象</span><br><span class="line">               DataWriter writer = new DataWriter(clientSocket.OutputStream);</span><br><span class="line">               //获取UTF-8字符串的长度</span><br><span class="line">               Int32len = writer.MeasureString(sendData);</span><br><span class="line">               //存储数据到输出流里面</span><br><span class="line">               await writer.StoreAsync();</span><br><span class="line">               //发送成功释放资源</span><br><span class="line">               writer.DetachStream();</span><br><span class="line">               writer.Dispose();</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception ex)</span><br><span class="line">           &#123;</span><br><span class="line">               //获取错误的类型SocketError.GetStatus(exception.HResult)</span><br><span class="line">               //错误消息exception.Message</span><br><span class="line">               //如果关闭Socket则释放资源</span><br><span class="line">               clientSocket.Dispose();</span><br><span class="line">               clientSocket = null;</span><br><span class="line">               </span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">       &#125;</span><br><span class="line">       public async void <span class="function"><span class="title">Receive</span></span>() &#123;</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               //接收数据</span><br><span class="line">               DataReader reader = new DataReader(clientSocket.InputStream);</span><br><span class="line">               //设置接收数据的模式</span><br><span class="line">               reader.InputStreamOptions = InputStreamOptions.Partial;</span><br><span class="line">               await reader.LoadAsync(reader.UnconsumedBufferLength);</span><br><span class="line">               //接收成功</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception excepiton)</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">              //... ...</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>15.24.TCP协议服务器端监听消息<br>在Win10应用程序里面,不仅仅是创建客户端的TCP程序,还可以创建服务器端的服务,相当于在本地创建了Socket的服务器,服务器端监听消息表示服务器端程序对客户端的Socket连接和发送消息的监听,在Win10里可以通过Windows.Networking.Sockets空间下的StreamSocketListener类来实现监听的操作,StreamSocketListener的使用需要在配置文件中添加privateNetworkClientServer的权限,TCP协议服务器端监听消息实现的步骤如下:<br>1.注册ConnectionReceived事件获取成功建立监听的消息.<br>2.使用BindServiceNameAsync方法建立起本地服务器的监听.<br>3.循环获取监听的消息,用监听成功的Socket对象创建DataReader,如DataReader reader=new DataReader(args.Socket.InputStream),然后循环等待监听.<br>4.向客户端发送消息,用监听成功的socket对象创建DataWriter,如DataWriter server=new DataWriter(args.Socket.OutputStream);<br>StreamSocketListener类成员<br>StreamSocketListener()<br>创建新的StreamSocketListener对象<br>StreamSocketListenerControl Control<br>获取StreamSocketListener对象上的套接字控件数据;返回某一StreamSocketListener<br>对象上的套接字控件数据.<br>StreamSocketListenerInformation Information<br>获取该StreamSocketListener对象的套接字信息;返回该StreamSocketListener对象的套接字信息<br>eventTypedEventHandler&lt;StreamSocketlistener,StreamSocketListenerConnectionReceivedEventArgs&gt; ConnectionReceived<br>指示在StreamSocketListener对象上收到连接的事件<br>IAsyncAction BindEndpointAsync(HostName localHostName)<br>启动StreamSocketListener本地主机名和本地服务名的绑定操作.<br>localHostName:用于绑定StreamSocketListener对象的本地服务器名称或TCP端口号,返回StreamSocketListener对象的异步绑定操作.<br>IAsyncAction BindServiceNameAsync(string localService)<br>启动StreamSocketListener本地服务名的绑定操作.localServiceName:用于绑定StreamSocketListener对象的本地服务名称或TCP端口号.返回StreamSocketListener对象的异步绑定操作.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 监听的连接事件处理</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private async void Listener_ConnectionReceived(StreamSocketListener sender, StreamSocketListenerConnectionReceivedEventArgs args)</span><br><span class="line">       &#123;</span><br><span class="line">           DataReader reader = new DataReader(args.Socket.InputStream);</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               //循环接收数据</span><br><span class="line">               <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   //读取监听到的消息</span><br><span class="line">                   uint stringLength = reader.ReadUInt32();</span><br><span class="line">                   uint actualStringLength = await reader.LoadAsync(stringLength);</span><br><span class="line">                   //通过reader去读取监听到的消息内容 如reader.ReadString(actualStringLength)</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception ex)</span><br><span class="line">           &#123;</span><br><span class="line">               //异常处理</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>15.25.实例:模拟TCP协议通信过程<br>下面给出模拟TCP协议通信过程的示例:在Win10上模拟TCP协议的客户端和服务器端编程的实现.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.TcpPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;开始监听&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;btStartListener&quot;</span> Click=<span class="string">&quot;btStartListener_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;连接socket&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;btConnectSocket&quot;</span> Click=<span class="string">&quot;btConnectSocket_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox Text=<span class="string">&quot;hello&quot;</span> x:Name=<span class="string">&quot;tbMsg&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;发送消息&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;btSendMsg&quot;</span> Click=<span class="string">&quot;btSendMsg_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;关闭&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;btClose&quot;</span> Click=<span class="string">&quot;btClose_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;ScrollViewer&gt;</span><br><span class="line">                &lt;StackPanel x:Name=<span class="string">&quot;lbMsg&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;收到的消息:&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/ScrollViewer&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Networking;</span><br><span class="line">using Windows.Networking.Sockets;</span><br><span class="line">using Windows.Storage.Streams;</span><br><span class="line">using Windows.UI.Popups;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class TcpPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">TcpPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        //监听器</span><br><span class="line">        StreamSocketListener listener;</span><br><span class="line">        //Socket数据流对象</span><br><span class="line">        StreamSocket socket;</span><br><span class="line">        //输出流的写入数据对象</span><br><span class="line">        DataWriter writer;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 监听</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void btStartListener_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;监听已经启动了&quot;</span>).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            listener= new StreamSocketListener();</span><br><span class="line">            listener.ConnectionReceived += Listener_ConnectionReceived;</span><br><span class="line">            //开始监听操作</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                await listener.BindServiceNameAsync(<span class="string">&quot;22112&quot;</span>);</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;正在监听中&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                listener = null;</span><br><span class="line">                //未知错误</span><br><span class="line">                <span class="keyword">if</span> (SocketError.GetStatus(ex.HResult)==SocketErrorStatus.Unknown)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 监听成功后的连接事件处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;连接的监听者&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;连接的监听到的数据参数&lt;/param&gt;</span><br><span class="line">        private async void Listener_ConnectionReceived(StreamSocketListener sender, StreamSocketListenerConnectionReceivedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            DataReader reader = new DataReader(args.Socket.InputStream);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //循环接收数据</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    //读取数据前面的4个字节,代表的是接收到的数据的长度</span><br><span class="line">                    uint sizeFieldCount = await reader.LoadAsync(sizeof(uint));</span><br><span class="line">                    <span class="keyword">if</span> (sizeFieldCount!=sizeof(uint))</span><br><span class="line">                    &#123;</span><br><span class="line">                        //在socket被关闭之前才可以读取全部的数据</span><br><span class="line">                        <span class="built_in">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    //读取字符串</span><br><span class="line">                    uint stringLength=reader.ReadUInt32();</span><br><span class="line">                    uint actualStringLength=await reader.LoadAsync(stringLength);</span><br><span class="line">                    <span class="keyword">if</span> (stringLength!=actualStringLength) &#123;</span><br><span class="line">                        //在socket被关闭之前才可以读取全部数据</span><br><span class="line">                        <span class="built_in">return</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    string msg = reader.ReadString(actualStringLength);</span><br><span class="line">                    //通知到界面监听到的消息</span><br><span class="line">                    await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        TextBlock tb = new TextBlock &#123; Text = msg, FontSize = 20 &#125;;</span><br><span class="line">                        lbMsg.Children.Add(tb);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                //未知异常</span><br><span class="line">                <span class="keyword">if</span> (SocketError.GetStatus(ex.HResult)==SocketErrorStatus.Unknown)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw;</span><br><span class="line">                &#125;</span><br><span class="line">               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //连接Socket</span><br><span class="line">        private async void btConnectSocket_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (socket!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;已经连接了Socket&quot;</span>).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            HostName hostName= null;</span><br><span class="line">            string message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                hostName = new HostName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (ArgumentException)</span><br><span class="line">            &#123;</span><br><span class="line">                message = <span class="string">&quot;主机名不可用&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (message!=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(message).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            socket = new StreamSocket();</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //连接到socket服务器</span><br><span class="line">                await socket.ConnectAsync(hostName,<span class="string">&quot;22112&quot;</span>);</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;连接成功&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                //未知异常</span><br><span class="line">                <span class="keyword">if</span> (SocketError.GetStatus(ex.HResult)==SocketErrorStatus.Unknown)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 发送消息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void btSendMsg_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener==null)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;监听未启动&quot;</span>).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (writer==null)</span><br><span class="line">            &#123;</span><br><span class="line">                writer = new DataWriter(socket.OutputStream);</span><br><span class="line">            &#125;</span><br><span class="line">            //先写入数据的长度,长度的类型为UInt32,然后再写入数据</span><br><span class="line">            string stringToSend = tbMsg.Text;</span><br><span class="line">            writer.WriteUInt32(writer.MeasureString(stringToSend));</span><br><span class="line">            writer.WriteString(stringToSend);</span><br><span class="line">            //把数据发送到网络</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                await writer.StoreAsync();</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;发送成功&quot;</span>).ShowAsync() ;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (SocketError.GetStatus(ex.HResult)==SocketErrorStatus.Unknown)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 关闭连接,清空资源</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void btClose_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (writer!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                writer.DetachStream();</span><br><span class="line">                writer.Dispose();</span><br><span class="line">                writer= null;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (socket!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                socket.Dispose();</span><br><span class="line">                socket= null; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (listener!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                listener.Dispose();</span><br><span class="line">                listener= null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>15.3.Socket编程之UDP协议<br>UDP协议和TCP协议都是Socket编程的协议,但是与TCP协议不同,UDP协议并不提供超时重传,出错重传等功能,也就是说它是不可靠的协议.UDP适用于一次只传送少量数据,对可靠性要求不高的应用环境,既然UDP是一种不可靠的网络协议,在有些情况下,UDP协议可能会变得非常有用,因为UDP具有TCP所望尘莫及的速度优势,虽然TCP协议中植入了各种安全保障功能,但是在实际执行的过程中会占用大量的系统开销,无疑使速度受到严重影响,反观UDP,由于排除了信息可靠传递机制,将安全和排序等功能移交给上层应用来完成,极大的降低了执行时间,使速度得到了保证.Win10里的UDP协议的通信是通过DatagramSocket类来实现消息的发送,接受和监听等功能的.<br>15.31.发送和接收消息<br>使用UDP协议进行消息发送和接收跟TCP协议是有区别的,UDP协议不一定要进行连接的操作,它可以直接通过主机地址进行消息发送和接收.使用UDP协议进行消息发送和接收也一样要依赖DataWriter类和DataReader类来分别进行数据发送和接收.下面来看一下Win10中使用UDP协议进行发送和接收信息的两种方式.<br>1.使用主机名和端口号直接发送和接收消息<br>创建一个DatagramSocket类对象,调用GetOutputStreamAsync方法获取输出流IOutputStream对象创建DataWriter对象进行消息的发送,接收消息直接订阅DatagramSocket对象的MessageReceived事件接收消息,使用DataReader对象获取消息的内容.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public async void <span class="function"><span class="title">GetUDPMessage</span></span>() &#123;</span><br><span class="line">           //主机名</span><br><span class="line">           HostName hostName = new HostName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">           DatagramSocket datagramSocket= new DatagramSocket();</span><br><span class="line">           //订阅接收消息的事件</span><br><span class="line">           datagramSocket.MessageReceived += DatagramSocket_MessageReceived;</span><br><span class="line">           //获取输出流</span><br><span class="line">           IOutputStream outputStream = await datagramSocket.GetOutputStreamAsync(hostName,<span class="string">&quot;22112&quot;</span>);</span><br><span class="line">           //创建DataWriter对象发送消息</span><br><span class="line">           DataWriter writer= new DataWriter(outputStream);</span><br><span class="line">           writer.WriteString(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">           await writer.StoreAsync();</span><br><span class="line">          </span><br><span class="line">         </span><br><span class="line">       &#125;</span><br><span class="line">//接受消息的事件处理程序</span><br><span class="line">       private void DatagramSocket_MessageReceived(DatagramSocket sender, DatagramSocketMessageReceivedEventArgs args)</span><br><span class="line">       &#123;</span><br><span class="line">          //获取DataReader对象,读取消息内容</span><br><span class="line">          DataReader dataReader=args.GetDataReader();</span><br><span class="line">           uint length = dataReader.UnconsumedBufferLength;</span><br><span class="line">           string Content = dataReader.ReadString(length);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>2.先连接Socket再发送接收消息<br>DatagramSocket类提供了ConnectAsync方法来负责Socket的连接,连接成功之后可以使用该DatagramSocket对象进行消息的发送,消息的接收和第一种方式的实现是一样的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public async void <span class="function"><span class="title">ConnectSend</span></span>() &#123; </span><br><span class="line">           ///创建DatagramSocket</span><br><span class="line">           DatagramSocket datagramSocket= new DatagramSocket();</span><br><span class="line">           datagramSocket.MessageReceived += DatagramSocket_MessageReceived;</span><br><span class="line">           //连接服务器</span><br><span class="line">           await datagramSocket.ConnectAsync(new HostName(<span class="string">&quot;localhost&quot;</span>),<span class="string">&quot;22112&quot;</span>);</span><br><span class="line">           //发送消息</span><br><span class="line">           DataWriter writer = new DataWriter(datagramSocket.OutputStream);</span><br><span class="line">           writer.WriteString(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">           await writer.StoreAsync();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>15.32.UDP协议服务器端监听消息<br>UDP协议在实现服务器端监听消息的功能也是使用DatagramSocket类去实现,<br>实现的步骤如下:<br>1.注册DatagramSocket对象的MessageReceived事件接收消息(注意和TCP的ConnectionReceived事件的区别);<br>2.使用BindServiceNameAsync方法建立本地服务器的监听<br>3.使用GetOutputStreamAsync方法传入服务器地址和端口号,获取IOutputStream对象,从而创建DataWriter对象向客户端发送消息.<br>UDP协议服务器端监听消息的示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.UdpPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;开始监听消息&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;listener&quot;</span></span><br><span class="line">                    Click=<span class="string">&quot;listener_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;发送消息&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;send&quot;</span> Click=<span class="string">&quot;send_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;关闭&quot;</span> Margin=<span class="string">&quot;12&quot;</span> x:Name=<span class="string">&quot;close&quot;</span> Click=<span class="string">&quot;close_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;ScrollViewer Height=<span class="string">&quot;300&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel x:Name=<span class="string">&quot;msgList&quot;</span>&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/ScrollViewer&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Networking;</span><br><span class="line">using Windows.Networking.Sockets;</span><br><span class="line">using Windows.Storage.Streams;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class UdpPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        //客户端的DatagramSocket对象</span><br><span class="line">        DatagramSocket datagramSocket;</span><br><span class="line">        //客户端的DataWriter对象</span><br><span class="line">        DataWriter writer;</span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">UdpPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 启动本地服务器的监听</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void listener_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            DatagramSocket datagramSocket = new DatagramSocket();</span><br><span class="line">            datagramSocket.MessageReceived += DatagramSocket_MessageReceived;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                await datagramSocket.BindServiceNameAsync(<span class="string">&quot;22112&quot;</span>);</span><br><span class="line">                msgList.Children.Add(new TextBlock &#123; Text = <span class="string">&quot;监听成功&quot;</span>, FontSize = 20 &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (SocketError.GetStatus(ex.HResult)==SocketErrorStatus.AddressAlreadyInUse)</span><br><span class="line">                &#123;</span><br><span class="line">                    //异常消息,使用SocketErrorStatus枚举来判断Socket的异常类型</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 本地服务器的消息接收事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private async void DatagramSocket_MessageReceived(DatagramSocket sender, DatagramSocketMessageReceivedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            DataReader dataReader=args.GetDataReader();</span><br><span class="line">            uint length = dataReader.UnconsumedBufferLength;</span><br><span class="line">            string content = dataReader.ReadString(length);</span><br><span class="line">            await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                msgList.Children.Add(new <span class="function"><span class="title">TextBlock</span></span>() &#123; Text = <span class="string">&quot;服务器受到的消息:&quot;</span> + content, FontSize = 20 &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line">            //通过远程的地址和端口号,回应给相应的客户端的消息</span><br><span class="line">            IOutputStream outputStream = await sender.GetOutputStreamAsync(</span><br><span class="line">                args.RemoteAddress,args.RemotePort);</span><br><span class="line">            DataWriter writer= new DataWriter(outputStream);</span><br><span class="line">            writer.WriteString(content+<span class="string">&quot;(服务器发送)&quot;</span>);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                await writer.StoreAsync();</span><br><span class="line">                await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal,()=&gt;msgList.Children.Add(new TextBlock &#123; Text=<span class="string">&quot;服务器发送的消息:&quot;</span>+content+<span class="string">&quot;(服务器发送)&quot;</span>,FontSize=20&#125;));</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 向本地服务器发送消息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void send_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (writer==null)</span><br><span class="line">            &#123;</span><br><span class="line">                HostName hostName = new HostName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">                datagramSocket=new DatagramSocket();</span><br><span class="line">                datagramSocket.MessageReceived += DatagramSocket_MessageReceived1;</span><br><span class="line">                IOutputStream outputStream = await datagramSocket.GetOutputStreamAsync(hostName,<span class="string">&quot;22212&quot;</span>);</span><br><span class="line">                writer= new DataWriter(outputStream);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                writer = new DataWriter(datagramSocket.OutputStream);</span><br><span class="line">            &#125;</span><br><span class="line">            //写入消息</span><br><span class="line">            writer.WriteString(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //发送消息</span><br><span class="line">                await writer.StoreAsync();</span><br><span class="line">                msgList.Children.Add(new <span class="function"><span class="title">TextBlock</span></span>()</span><br><span class="line">                &#123;</span><br><span class="line">                    Text = <span class="string">&quot;客户端发送的消息:&quot;</span>+<span class="string">&quot;test&quot;</span>,</span><br><span class="line">                    FontSize=20</span><br><span class="line">                &#125;) ;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 客户端接收消息的事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void DatagramSocket_MessageReceived1(DatagramSocket sender, DatagramSocketMessageReceivedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                DataReader dataReader = args.GetDataReader();</span><br><span class="line">                uint length = dataReader.UnconsumedBufferLength;</span><br><span class="line">                string content = dataReader.ReadString(length);</span><br><span class="line">                await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    msgList.Children.Add(new TextBlock &#123; Text = <span class="string">&quot;客户端收到的消息:&quot;</span> + content, FontSize = 20 &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">             </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 释放Socket资源</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void close_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (datagramSocket!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                datagramSocket.Dispose();</span><br><span class="line">                datagramSocket = null;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (writer!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                writer.Dispose();</span><br><span class="line">                writer= null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="蓝牙和近场通信"><a href="#蓝牙和近场通信" class="headerlink" title="蓝牙和近场通信"></a>蓝牙和近场通信</h4><p>在win10上的蓝牙和近场通信的编程也是使用Socket相关的API来进行消息的发送和接收的<br>16.1 蓝牙原理<br>蓝牙是一种低成本,短距离的无线通信技术,蓝牙技术支持设备短距离通信(一般10m内),能在包括移动电话,PDA,无线耳机,笔记本电脑,相关外设等众多设备之间进行无线信息交换,利用”蓝牙”技术,能够有效的简化设备与因特网之间的通信,从而数据传输变得更加迅速高效,为无线通信扩宽道路.蓝牙采用分散式网络结构以及快跳频和短包技术,支持点对点及点对多点通信,工作在全球通用的2.4GHz ISM(即工业,科学和医学)频段,其数据速率为1Mbps.采用时分双工传输方案实现全双工传输.<br>蓝牙技术是一种无线数据与语音通信的开放性全球规范,它以低成本的近距离无线连接为基础,为固定设备与移动设备通信环境建立一个特别的连接,其程序写在一个9X9mm的微芯片中.<br>蓝牙协议栈允许采用多种方法,包括RFCOMM和Object Exchange(OBEX),在设备之间发送和接收文件<br>协议栈的细节<br>TCP/IP<br>IP OBEX<br>BNEP RFCOMM SDP AVCTP AVDTP<br>L2CAP<br>HCI<br>栈的最底层是HCI,即主机控制器接口,就是主机和控制器(蓝牙设备)之间的接口,可以看到,其他层都要经过HCI,HCI上面的一层是L2CAP,即逻辑链接控制器适配协议(Logical Link Controller Adaptation Protocol).<br>这一层充当其他所有层的数据多路复用器,接下来一层是BNEP,即蓝牙网络封装协议(Bluetooth Network Encapsulation Protocol).使用BNEP可以在蓝牙上运行其他网络协议,例如,IP,TCP和UDP,RFCOMM称作虚拟串口协议(virtual serial port protocol),因为它允许蓝牙设备模拟串口的功能,OBEX协议层是在RFCOMM层上面实现的,如果想把数据以对象的形式传输,那么OBEX很有用.SDP是服务防线协议(Service Discovery Protocol)层,用于在远程蓝牙设备上寻找服务.最后两层是AVCTP和AVDTP,用于蓝牙上音频和视频的控制和发布.AVCTP和AVDTP是蓝牙协议中增加的相对较新的层,如果要控制媒体播放器的功能或想以立体声播放音频流,则要使用它们<br>Win10蓝牙技术支持两个蓝牙方案:一个是应用程序到应用程序的通信,另外一个是应用程序到设备的通信.<br>在每种方案中,都在应用或设备之间建立StreamSocket连接,然后再进行数据的发送和接收.<br>1.应用程序到应用程序的通信<br>应用程序到应用程序的通信过程是:应用程序使用蓝牙去查找正在广播蓝牙服务的对等的应用程序,如果在应用程序提供服务的范围内发现一个应用程序,那么该程序可以发起连接请求,当这两个应用程序接受连接,它们之间就可以进行通信了,通信的过程是使用Socket的消息发送接收机制,在Win10中使用应用程序到应用程序的蓝牙通信技术,需要在项目的Package.appxmanifest文件中添加Proximity的功能选项,表示支持临近的设备通信能力,否则程序会出现异常.<br>2.应用程序到设备的通信<br>在应用程序到设备的通信过程中,应用程序使用蓝牙去查找提供服务的设备,如果提供的服务范围之内发现一个可以连接的蓝牙设备,那么该应用程序可以发起连接请求,当应用程序和设备同时接受该连接,它们之间就可以进行通信了,通信的过程也是使用Socket的消息发送接受机制,类似于应用程序到应用程序的通信.<br>16.13.蓝牙编程类<br>在Win10中,使用蓝牙编程主要会用到PeerFinder类,PeerInformation类,StreamSocket类和ConnectionRequestedEventArgs类,因为蓝牙也是基于TCP协议进行消息传递,所以需要用到StreamSocket类<br>蓝牙编程类的说明<br>PeerFinder<br>用于查找附近的设备是否有运行和当前应用程序相同的应用程序,并且可以在两个应用程序之间建立Socket连接,从而可以进行通信,对等应用程序是在其他设备上运行的应用程序的另一个新实例<br>PeerInformation<br>包含对等应用程序或设备的识别信息<br>StreamSocket<br>支持使用一个TCP的Socket流的网络通信<br>ConectionRequestedEventArgs<br>表示传递到一个应用程序的ConnectionRequested事件的属性<br>PeerFinder类的成员<br>bool AllowBluetooth<br>指定PeerFinder类的此实例是否可以通过使用Bluetooth来连接ProximityStreamSocket对象,如果PeerFinder的此实例可以通过使用Bluetooth来连接ProximityStreamSocket对象,则为true,否则为false,默认为true.<br>bool AllowWiFiDirect<br>指定PeerFinder类的此实例是否可以通过Wifi Direct来连接ProximityStreamSocket对象,如果PeerFinder的此实例可以通过使用Wifi Direct来连接ProximityStreamSocket对象,则为true,否则为false,默认为true<br>IDictionary&lt;string,string&gt; AlternateIdentities 获取要与其他平台上的对等应用程序匹配的备用AppId值列表,<br>IDictionary&lt;string,string&gt; AlternateIdentities<br>获取要与其他平台上的对等应用程序匹配的备用AppId值列表,返回要与其他平台的对等应用程序匹配的备用AppId值列表<br>string DisplayName<br>获取或设置标识计算机到远程对等类的名称<br>PeerDiscoveryTypes SupportedDiscoveryTypes<br>获取一个值,该值指示哪些发现选项可与PeerFinder类一同使用.<br>eventTypedEventHandler&lt;object,ConnectionRequestedEventArgs&gt; ConnectionRequested<br>远程对等类使用ConnectAsync方法请求连接时发生<br>IAsyncOperation<StreamSocket> ConnectAsync(PeerInformation peerInformation)<br>连接已发现了对FindAllPeersAsync方法的调用的对等类,peerInformation:表示连接到的对等类的对等类信息对象.返回通过使用所提供的临近StreamSocket对象连接远程对等类的异步操作<br>IAsyncOperation&lt;IReadOnlyList<PeerInformation>&gt; FindAllPeers.Async()<br>适用于无线范围内运行相同应用程序的对等计算机的异步浏览.返回通过使用Wifi直连技术浏览对等类的异步操作.<br>void Start(string peerMessage)<br>向临近设备上的对等类应用程序传递信息<br>void Stop()<br>停止查找对等类应用程序或广播对等类连接的过程<br>16.14.查找蓝牙设备和对等类<br>查找在服务范围内的蓝牙设备和对等项是蓝牙编程的第一步,会用到PeerFinder类的FindAllPeersAsync方法去进行查找,然后以异步的方式返回查找到的对等项列表的信息IReadOnlyList<PeerInformation>,注意要使查找对等的应用程序时,在调用FindAllPeersAsync方法前必须先调用PeerFinder类的Start方法,主要的目的是启动广播服务,让对方的应用程序也能查找到自己.PeerInformation包含三个属性:一个是DisplayName表示对等项的名字,这个名字一般都是由对方的设备的名称或者查找到的应用程序自身设置的现实名字,一个是HostName表示主机名字或者IP地址,还有一个属性是ServiceName表示服务名称或者TCP协议的端口号,然后可以利用查找到的PeerInformation信息进行连接和通信<br>查找对等的应用程序的代码示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 查找对等的应用程序</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       async void <span class="function"><span class="title">AppToApp</span></span>() &#123; </span><br><span class="line">           //启动查找服务</span><br><span class="line">           PeerFinder.Start();</span><br><span class="line">           //开始查找</span><br><span class="line">           ObservableCollection&lt;PeerInformation&gt; peers= (ObservableCollection&lt;PeerInformation&gt;)await PeerFinder.FindAllPeersAsync();</span><br><span class="line">           <span class="keyword">if</span> (peers.Count==0)</span><br><span class="line">           &#123;</span><br><span class="line">               //未找到任何的对等项</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               //处理查找到的对等项,可以使用PeerFinder类的ConnectAsync方法来连接选择的要进行通信的对等项</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 查找蓝牙设备</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       async void <span class="function"><span class="title">AppToDevice</span></span>() &#123;</span><br><span class="line">           //设置查找所匹配的蓝牙设备</span><br><span class="line">           PeerFinder.AlternateIdentities[<span class="string">&quot;Bluetooth:Paired&quot;</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">           //开始查找</span><br><span class="line">           ObservableCollection&lt;PeerInformation&gt; pairedDevices= (ObservableCollection&lt;PeerInformation&gt;)await PeerFinder.FindAllPeersAsync();</span><br><span class="line">           <span class="keyword">if</span> (pairedDevices.Count==0)</span><br><span class="line">           &#123;</span><br><span class="line">               //没有找到可用的蓝牙设备</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               //处理查找到的蓝牙设备,可以新建一个StreamSocket对象,然后使用StreamSocket类的ConnectAsync方法通过HostName和ServiceName来连接蓝牙设备</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>16.15.蓝牙发送消息<br>蓝牙编程的发送消息机制使用的是TCP的StreamSocket的方式,原理与Socket的一致.在蓝牙连接成功后,可以获取到一个StreamSocket类的对象,然后我们使用该对象的OutputStream属性来初始化一个DataWriter对象,通过DataWriter对象来发送消息,OutputStream属性表示Socket的输出流,用于发送消息给对方.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 蓝牙发送消息</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;message&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       async void SendMessage(string message) &#123;</span><br><span class="line">           //连接选中的对等项,selectedPeer为查找到的PeerInformation对象</span><br><span class="line">           StreamSocket _socket = await PeerFinder.ConnectAsync(selectedPeer);</span><br><span class="line">           //创建DataWriter</span><br><span class="line">           DataWriter _dataWriter= new DataWriter(_socket.OutputStream);</span><br><span class="line">           //先写入发送消息的长度</span><br><span class="line">           _dataWriter.WriteInt32(message.Length);</span><br><span class="line">           await _dataWriter.StoreAsync();</span><br><span class="line">           //最后写入发送消息的内容</span><br><span class="line">           _dataWriter.WriteString(message);</span><br><span class="line">           await _dataWriter.StoreAsync();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>16.16.蓝牙接收消息<br>蓝牙编程的接收消息机制同样也是使用TCP的StreamSocket的方式,原理与Socket一致,在蓝牙连接成功后，可以获取到一个StreamSocket类的对象,然后我们使用该对象的InputStream属性来初始化一个DataReader对象,通过DataReader对象来进行接收消息,InputStream属性表示的是Socket的输入流,用于接收对方的消息.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 蓝牙接收消息</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       async Task&lt;string&gt; <span class="function"><span class="title">GetMessage</span></span>() &#123; </span><br><span class="line">           //连接选中的对等项,selectedPeer为查找到的PeerInformation对象</span><br><span class="line">           StreamSocket _socket=await PeerFinder.ConnectAsync(selectedPeer);</span><br><span class="line">           //创建DataReader</span><br><span class="line">           DataReader _dataReader= new DataReader(_socket.InputStream);</span><br><span class="line">           //先读取消息的长度</span><br><span class="line">           await _dataReader.LoadAsync(4);</span><br><span class="line">           uint messageLen=(uint)_dataReader.ReadInt32();</span><br><span class="line">           //最后读取消息的内容</span><br><span class="line">           await _dataReader.LoadAsync(messageLen);</span><br><span class="line">           <span class="built_in">return</span> _dataReader.ReadString(messageLen);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>16.17.实例:实现蓝牙程序对程序的传输<br>下面给出蓝牙程序对程序传输的示例,通过蓝牙功能查找周边设备,互相建立起连接和发送测试消息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.BtToApPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;Button x:Name=<span class="string">&quot;btFindBluetooth&quot;</span> Content=<span class="string">&quot;通过蓝牙查找该应用设备&quot;</span> Click=<span class="string">&quot;btFindBluetooth_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;ListBox x:Name=<span class="string">&quot;lbBluetoothApp&quot;</span> ItemsSource=<span class="string">&quot;&#123;Binding&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;ListBox.ItemTemplate&gt;</span><br><span class="line">                    &lt;DataTemplate&gt;</span><br><span class="line">                        &lt;StackPanel&gt;</span><br><span class="line">                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding DisplayName&#125;&quot;</span>/&gt;</span><br><span class="line">                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding ServiceName&#125;&quot;</span>/&gt;</span><br><span class="line">                            &lt;Button Content=<span class="string">&quot;连接&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> Width=<span class="string">&quot;308&quot;</span> Height=<span class="string">&quot;91&quot;</span></span><br><span class="line">                                    Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;/DataTemplate&gt;</span><br><span class="line">                &lt;/ListBox.ItemTemplate&gt;</span><br><span class="line">            &lt;/ListBox&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Networking.Proximity;</span><br><span class="line">using Windows.Networking.Sockets;</span><br><span class="line">using Windows.Storage.Streams;</span><br><span class="line">using Windows.UI.Popups;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class BtToApPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">BtToApPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">            Loaded += BtToApPage_Loaded;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 页面加载事件处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void BtToApPage_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //订阅连接请求事件</span><br><span class="line">            PeerFinder.ConnectionRequested += PeerFinder_ConnectionRequested;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void PeerFinder_ConnectionRequested(object sender, ConnectionRequestedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            //使用UI线程弹出连接请求的接收和拒绝弹窗</span><br><span class="line">            await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, async () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                MessageDialog md = new MessageDialog(<span class="string">&quot;是否接收&quot;</span>+args.PeerInformation.DisplayName+<span class="string">&quot;连接请求&quot;</span>,<span class="string">&quot;蓝牙连接&quot;</span>);</span><br><span class="line">                UICommand <span class="built_in">yes</span> = new UICommand(<span class="string">&quot;接收&quot;</span>);</span><br><span class="line">                UICommand no = new UICommand(<span class="string">&quot;拒绝&quot;</span>);</span><br><span class="line">                md.Commands.Add(<span class="built_in">yes</span>);</span><br><span class="line">                md.Commands.Add(no);</span><br><span class="line">                var result=await md.ShowAsync();</span><br><span class="line">                <span class="keyword">if</span> (result==<span class="built_in">yes</span>) &#123;</span><br><span class="line">                    //连接并且发送消息</span><br><span class="line">                    ConnectToPeer(args.PeerInformation);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 连接并发送消息给对方</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;peerInformation&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private async void ConnectToPeer(PeerInformation peer)</span><br><span class="line">        &#123;</span><br><span class="line">            _socket = await PeerFinder.ConnectAsync(peer);</span><br><span class="line">            _dataReader = new DataReader(_socket.InputStream);</span><br><span class="line">            _dataWriter= new DataWriter(_socket.OutputStream);</span><br><span class="line">            string message = <span class="string">&quot;测试消息&quot;</span>;</span><br><span class="line">            uint strLength=_dataWriter.MeasureString(message);</span><br><span class="line">            //写入消息的长度</span><br><span class="line">            _dataWriter.WriteUInt32(strLength);</span><br><span class="line">            //写入消息的内容</span><br><span class="line">            _dataWriter.WriteUInt32(strLength);</span><br><span class="line">            uint numBytesWritten=await _dataWriter.StoreAsync();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //Socket数据流对象</span><br><span class="line">        private StreamSocket _socket=null;</span><br><span class="line">        //数据写入对象</span><br><span class="line">        private DataWriter _dataWriter;</span><br><span class="line">        //数据读取对象</span><br><span class="line">        private DataReader _dataReader;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 查找蓝牙对等项按钮事件处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void btFindBluetooth_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            string message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                //开始查找对等项</span><br><span class="line">                PeerFinder.Start();</span><br><span class="line">                //等待找到的对等项</span><br><span class="line">                var peers=await PeerFinder.FindAllPeersAsync();</span><br><span class="line">                <span class="keyword">if</span> (peers.Count == 0) &#123;</span><br><span class="line">                    message = <span class="string">&quot;没有发现对等的蓝牙应用&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    //把对等项目绑定到列表中</span><br><span class="line">                    lbBluetoothApp.ItemsSource= peers;</span><br><span class="line">                &#125;</span><br><span class="line">               </span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((uint)ex.HResult==0x8007048F)</span><br><span class="line">                &#123;</span><br><span class="line">                    message = <span class="string">&quot;Bluetooth已关闭请打开蓝牙开关&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    message= ex.Message;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (message != <span class="string">&quot;&quot;</span>)</span><br><span class="line">                await new MessageDialog(message).ShowAsync();</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 连接蓝牙对等项的按钮事件处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Button deleteButton=sender as Button;</span><br><span class="line">            PeerInformation selectedPeer=deleteButton.DataContext as PeerInformation;</span><br><span class="line">            //连接到选择的对等项</span><br><span class="line">            _socket=await PeerFinder.ConnectAsync(selectedPeer);</span><br><span class="line">            //使用输出输入流建立数据读写对象</span><br><span class="line">            _dataReader = new DataReader(_socket.InputStream);</span><br><span class="line">            _dataWriter= new DataWriter(_socket.OutputStream);</span><br><span class="line">            //开始读取消息</span><br><span class="line">            PeerFinder_StartReader();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 读取消息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private async void <span class="function"><span class="title">PeerFinder_StartReader</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            string message = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                uint bytesRead = await _dataReader.LoadAsync(sizeof(uint));</span><br><span class="line">                <span class="keyword">if</span> (bytesRead&gt;0)</span><br><span class="line">                &#123;</span><br><span class="line">                  //获取消息内容的大小</span><br><span class="line">                  uint strLength=(uint)_dataReader.ReadUInt32();</span><br><span class="line">                    bytesRead = await _dataReader.LoadAsync(strLength);</span><br><span class="line">                    <span class="keyword">if</span> (bytesRead&gt;0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        string content = _dataReader.ReadString(strLength);</span><br><span class="line">                        await new MessageDialog(<span class="string">&quot;获取到消息:&quot;</span>+content).ShowAsync();</span><br><span class="line">                        //开始下一条消息读取</span><br><span class="line">                        PeerFinder_StartReader();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        message = <span class="string">&quot;对方已关闭连接&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    message = <span class="string">&quot;对方已关闭连接&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                message=<span class="string">&quot;读取失败:&quot;</span>+ex.Message;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (message!=<span class="string">&quot;&quot;</span>)</span><br><span class="line">           await new MessageDialog(message).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Windows应用开发" scheme="https://drfengling.github.io/categories/Windows%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="UWP" scheme="https://drfengling.github.io/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>Windows通用应用程序开发(三)</title>
    <link href="https://drfengling.github.io/qm/50fedeca.html"/>
    <id>https://drfengling.github.io/qm/50fedeca.html</id>
    <published>2022-12-10T00:54:21.000Z</published>
    <updated>2022-12-20T05:16:49.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>8.1变化特效<br>当使用Canvas布局时,可以使用Canvas.Left和Canvas.Top属性改变一个对象相对Canvas的位置,当使用Grid或StackPanel布局时,可以使用Margin属性声明元素的各方向间距,然而在这些属性中并不包括直接去改变某个Win10UI对象形状的方法,变化的实现会依赖于RenderTransform类,RenderTransform包含的变换属性成员就是专门来改变Win10UI对象形状的,它可以实现对元素拉伸,旋转,扭曲等效果,同时变换特效也常用于辅助产生各种动画效果.<br>8.11.变换的原理二维变换矩阵<br>变换定义如何将一个坐标空间中的点映射或变化到另一个坐标空间,在Windows 10里通过仿射变换实现.<br>仿射变换可以理解为对坐标进行放缩,旋转,平移后取得新坐标的值,仿射变换可以让UI元素产生视觉的旋转,它的原理并不是让UI元素的位置变化,而是变化平面X,Y的坐标系,间接的让UI元素的坐标发生转变,而如何让坐标系的旋转精确的控制UI元素的旋转,这就是仿射变换矩阵的作用了.<br>Windows10变换映射是由变换Matrix来描述,Matrix是表示用于二维空间变换的3X3仿射变换矩阵,3X3矩阵用于在二维平面中进行变换.通过让仿射变换矩阵相乘可形成任意数目的线性变换,例如先旋转扭曲,再平移,仿射矩阵变换用于操作二维平面中的对象或坐标系,由于仿射变换时,平行的边依然平行,所以我们无法对一个矩形的位图进行随意变换,比如无法拉伸一个角,也无法把它变成梯形,仿射变换矩阵的最后一列等于0，0，1,<br>因此只需指定前两列的成员.矢量用行矢量表示<br>TranslateTransform 能够让某对象的位置发生平移变化<br>RotateTransform 能够让某对象产生旋转变化,根据中心点进行顺时针旋转或逆时针旋转<br>ScaleTransform 能够让某对象产生缩放变化<br>SkewTransform 能够让某对象产生扭曲变化<br>TransformGroup 能够让某对象缩放,旋转,扭曲等变化效果合并起来使用.<br>MatrixTransform 能够让某对象通过矩阵算法实现更为复杂的变形<br>变换元素包括平移变换,旋转变换,缩放变换,扭曲变换,矩形变换和组合变换元素,变换特效常用于在不改变自身的情况下,使对象产生变形效果,所以变换元素常辅助产生win10中的各种动画效果<br>8.12.平移变换<br>TranslateTransform 能够让某对象的位置发生平移变化,按指定的X和Y移动元素,TranslateTransform类对移动不支持绝对定位的面板内的元素特别有用.<br>通过将TranslateTransform应用到元素的RenderTransform属性,可以移动StackPanel内的元素,使用TranslateTransform的X属性指定将元素沿X轴移动的量,使用Y属性指定将元素沿Y轴移动的量,最后将TranslateTransform应用于元素的RenderTransform属性.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                        &lt;TranslateTransform X=<span class="string">&quot;50&quot;</span> Y=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                &lt;/Rectangle&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br></pre></td></tr></table></figure><p>8.13.旋转变换(RotateTransform)<br>RotateTransform:能够让某对象产生旋转变化,根据中心点进行顺时针旋转或逆时针旋转,按指定的Angle旋转元素,RotateTransform围绕点CenterX和CenterY将对象旋转指定的Angle.在使用RotateTransform时,请注意变换将围绕点(0,0)旋转某个特定对象的坐标系.因此,根据对象的位置,对象可能不会就地围绕其中心旋转.例如,如果对象位于X轴上距0为200个单位的位置,旋转30°可以让该对象沿着原点为圆心,以200为半径所画的圆摆动30°.若要就地旋转某个对象,请将RotateTransform的CenterX和CenterY设置为该对象的旋转中心.<br>以Polyline对象的左上角为旋转点将其旋转了45°.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Canvas height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">&lt;!--以Polyline 对象的左上角(0,0)为旋转点将其旋转了45°--&gt;</span><br><span class="line">&lt;Polyline Points=<span class="string">&quot;25,25,0,50,25,75,50,50,25,25,25,0&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span></span><br><span class="line">StrokeThickness=<span class="string">&quot;10&quot;</span> Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span>&gt;</span><br><span class="line">&lt;Polyline.RenderTransform&gt;</span><br><span class="line">&lt;RotateTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">&lt;/Polyline.RenderTransform&gt;</span><br><span class="line">&lt;/Canvas&gt;</span><br><span class="line">&lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                        &lt;Polyline Points=<span class="string">&quot;25,25,0,50,25,75,50,50,25,25,25,0&quot;</span></span><br><span class="line">                                  Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span> Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span>&gt;</span><br><span class="line">                            &lt;Polyline.RenderTransform&gt;</span><br><span class="line">                                &lt;RotateTransform CenterX=<span class="string">&quot;25&quot;</span> CenterY=<span class="string">&quot;50&quot;</span> Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Polyline.RenderTransform&gt;</span><br><span class="line">                        &lt;/Polyline&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br></pre></td></tr></table></figure><p>8.14.缩放变换(ScaleTransform)<br>ScaleTransform 能够让某对象产生缩放变化,按指定的ScaleX和ScaleY量按比例缩放元素.使用ScaleX和ScaleY量按比例缩放元素.使用ScaleX和ScaleY属性可以按照指定的系数调整元素的大小.例如,ScaleX值为1.5时,会将元素拉伸到其原始宽度的150%.ScaleY值为0.5时,会将元素的高度缩小50%.使用CenterX和CenterY属性可以指定缩放操作的中心点,默认情况下,ScaleTransform的中心点是(0,0),该点与矩形的左上角相对应,这会导致该元素移动并使其看上去更大,原因是当应用Transform时,对象所在的坐标空间会改变.<br>使用ScaleTransform将长和宽均为50的Rectangle尺寸放大一倍,对于CenterX和CenterY来说,ScaleTransform的值均为0.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                       &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                           &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                               &lt;ScaleTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> ScaleX=<span class="string">&quot;2&quot;</span> ScaleY=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                           &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                           </span><br><span class="line">                       &lt;/Rectangle&gt;</span><br><span class="line">                       &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                           &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                               &lt;ScaleTransform CenterX=<span class="string">&quot;25&quot;</span></span><br><span class="line">                                               CenterY=<span class="string">&quot;25&quot;</span></span><br><span class="line">                                               ScaleX=<span class="string">&quot;2&quot;</span></span><br><span class="line">                                               ScaleY=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                           &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                       &lt;/Rectangle&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br></pre></td></tr></table></figure><p>8.15.扭曲变换(SkewTransform)<br>SkewTransform:能够让某对象产生扭曲变化,按指定的AngleX和AngleY量扭曲元素.扭曲是一种以非均匀方式拉伸坐标空间的变换.SkewTransform的一个典型用法是在二维对象中模拟三维深度.使用CenterX和CenterY属性可以指定SkewTransform的中心点,使用AngleX和AngleY属性可以指定X轴和Y轴的扭曲角度.<br>使当前坐标系沿着这些轴扭曲,若要预测扭曲变换的效果,请考虑AngleX相对于原始坐标系扭曲X轴的值,因此，如果AngleY为30,则会将该形状的Y轴值从原点扭曲30°.在X或Y轴中将坐标系变换30°效果不相同.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Rectangle height=<span class="string">&quot;50&quot;</span> width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> Strokethickness=<span class="string">&quot;2&quot;</span></span><br><span class="line">Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">&lt;Rectangle.RenderTransform&gt;</span><br><span class="line">&lt;SkewTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> AngleX=<span class="string">&quot;45&quot;</span> AngleY=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">&lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">&lt;/Rectangle&gt;</span><br></pre></td></tr></table></figure><p>8.16.组合变换(TransformGroup)<br>TransformGroup:能够让某对象的缩放,扭曲等变化效果合并起来使用,将多个TransformGroup对象组合为可以随后应用于变换属性的单一Transform,在复合变换中,单个变换的顺序非常重要.例如,依次旋转,缩放,平移与依次平移,旋转和缩放得到的结果不同,造成顺序很重要的一个原因就是像旋转和缩放这样的变换是针对坐标系的原点进行的,缩放以原点为中心的对象与缩放已离开原点的对象所得到的结果不同.同样,旋转以原点为中心的对象与旋转已离开原点的对象所得到的结果也不同.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button RenderTransformOrigin=<span class="string">&quot;0.5,0.5&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;Click</span><br><span class="line">                   &lt;Button.RenderTransform&gt;</span><br><span class="line">                       &lt;TransformGroup&gt;</span><br><span class="line">                           &lt;ScaleTransform ScaleY=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">                           &lt;RotateTransform Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                       &lt;/TransformGroup&gt;</span><br><span class="line">                   &lt;/Button.RenderTransform&gt;</span><br><span class="line">               &lt;/Button&gt;</span><br></pre></td></tr></table></figure><p>8.17.矩阵变换(MatrixTransform)<br>MatrixTransform是通过矩阵演算的方式来计算变换后的坐标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;MatrixTransform Matrix=<span class="string">&quot;M11,M12,M21,M22,OffsetX,OffsetY&quot;</span>/&gt;</span><br><span class="line">&lt;Button MinWidth=<span class="string">&quot;100&quot;</span>&gt;Click</span><br><span class="line">                    &lt;Button.RenderTransform&gt;</span><br><span class="line">                        &lt;MatrixTransform x:Name=<span class="string">&quot;myMatrixTransform&quot;</span>&gt;</span><br><span class="line">                            &lt;MatrixTransform.Matrix&gt;</span><br><span class="line">                                &lt;Matrix OffsetX=<span class="string">&quot;10&quot;</span> OffsetY=<span class="string">&quot;100&quot;</span> M11=<span class="string">&quot;3&quot;</span> M12=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                            &lt;/MatrixTransform.Matrix&gt;</span><br><span class="line">                        &lt;/MatrixTransform&gt;</span><br><span class="line">                    &lt;/Button.RenderTransform&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8.2.三维特效<br>Win10UI元素的三维特效是通过UIElement的PlaneProjection属性来进行设置的.<br>8.22.三维旋转<br>PlaneProjection三维旋转相关的属性<br>1.CenterOfRotationX/CenterOfRotationY/CenterOfRotatinZ.表示旋转中心X轴/Y轴/Z轴坐标<br>可以通过使用这三个属性,设置三维旋转的旋转中心,默认情况下,旋转轴直接穿过对象的中心,这表示对象围绕其中心旋转.CenterOfRotationX和CenterOfRotationY的默认值为0.5,而CenterOfRotationZ的默认值为0.<br>CenterOfRotationX取值0表示UI元素最左边的边缘,1是UI元素最右边的边缘.<br>CenterOfRotationY取值0表示UI元素最上边的边缘,1是UI元素最上边的边缘.<br>CenterOfRotationZ取值为负表示将旋转中心移到该对象后面,取值为正数表示将旋转中心移到该对象上方.<br>2.RotationX/RotationY/RotationZ表示沿X/Y/Z轴旋转的角度.<br>默认值都是0 可以超过360.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid x:Name=<span class="string">&quot;SanWeiContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                   &lt;!--旋转的对象--&gt;</span><br><span class="line">                   &lt;TextBlock Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;3D&quot;</span> FontSize=<span class="string">&quot;120&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                       &lt;TextBlock.Projection&gt;</span><br><span class="line">                           &lt;PlaneProjection x:Name=<span class="string">&quot;planeProjection&quot;</span>/&gt;</span><br><span class="line">                       &lt;/TextBlock.Projection&gt;</span><br><span class="line">                   &lt;/TextBlock&gt;</span><br><span class="line">                   &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                       &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                           &lt;RadioButton x:Name=<span class="string">&quot;rotationRadioButton&quot;</span> Content=<span class="string">&quot;Rotation&quot;</span> Checked=<span class="string">&quot;rotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                           &lt;RadioButton x:Name=<span class="string">&quot;centerOfRotationRadioButton&quot;</span></span><br><span class="line">                                        Content=<span class="string">&quot;CenterOfRotation&quot;</span> Checked=<span class="string">&quot;centerOfRotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                           </span><br><span class="line">                       &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;TextBlock x:Name=<span class="string">&quot;infoTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                       &lt;TextBlock x:Name=<span class="string">&quot;xTextBlock&quot;</span> Text=<span class="string">&quot;沿着X轴旋转&quot;</span>/&gt;</span><br><span class="line">                       &lt;Slider x:Name=<span class="string">&quot;xSlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;xSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                       &lt;TextBlock x:Name=<span class="string">&quot;yTextBlock&quot;</span> Text=<span class="string">&quot;沿着Y轴旋转&quot;</span>/&gt;</span><br><span class="line">                       &lt;Slider x:Name=<span class="string">&quot;ySlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;ySlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                       &lt;TextBlock x:Name=<span class="string">&quot;zTextBlock&quot;</span> Text=<span class="string">&quot;沿着Z轴旋转&quot;</span>/&gt;</span><br><span class="line">                       &lt;Slider x:Name=<span class="string">&quot;zSlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;zSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                   &lt;/StackPanel&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line"></span><br><span class="line">//X滑块的滑动事件</span><br><span class="line">       private void xSlider_ValueChanged(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (centerOfRotationRadioButton.IsChecked==<span class="literal">false</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               //Slider控制的值范围是0-100,所以旋转的角度控制在0-360</span><br><span class="line">               double xValue = e.NewValue * 360 / 100;</span><br><span class="line">               planeProjection.RotationX = xValue;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               //中心点的坐标控制在0-1的值范围中变动</span><br><span class="line">               planeProjection.CenterOfRotationX = e.NewValue / 100;</span><br><span class="line">               </span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void ySlider_ValueChanged(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (centerOfRotationRadioButton.IsChecked==<span class="literal">false</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               double yValue = e.NewValue * 360 / 100;</span><br><span class="line">               planeProjection.RotationY = yValue;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               planeProjection.CenterOfRotationY = e.NewValue / 100;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void zSlider_ValueChanged(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (centerOfRotationRadioButton.IsChecked==<span class="literal">false</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               double zValue = e.NewValue * 360 / 100;</span><br><span class="line">               planeProjection.RotationZ = zValue;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               planeProjection.CenterOfRotationZ = e.NewValue / 100;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>8.23.三维平移<br>设置UI元素平移的距离的属性分为两种类型,一种是以屏幕为参考对象来定义坐标轴,另外一种类型是以UI对象本身作为参考对象来定义坐标轴,如果这个UI对象本身并没有做旋转相关的特效,这两种类型的属性所显示的效果是一样的,当UI对象应用了一些旋转特效,这两种类型还是有较大的区别的.<br>GlobalOffsetX/GlobalOffsetY/GlobalOffsetZ表示相对于屏幕沿X轴/Y轴/Z轴平移对象,LocalOffsetX/LocalOffsetY/LocalOffsetZ表示沿对象旋转后对象平面的X/Y/Z轴平移对象.<br>下面的示例把TextBlock控件沿着X轴旋转45°,然后通过Slider控件来控制修改TextBlock控件相对于屏幕沿X/Y/Z平移的特效效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SanweiPingyi&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;SanweiContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;!--平移的对象--&gt;</span><br><span class="line">                    &lt;TextBlock Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;3D&quot;</span> FontSize=<span class="string">&quot;120&quot;</span> Foreground=<span class="string">&quot;red&quot;</span></span><br><span class="line">                               HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock.Projection&gt;</span><br><span class="line">                            &lt;PlaneProjection x:Name=<span class="string">&quot;pingyiProjection&quot;</span> RotationX=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                        &lt;/TextBlock.Projection&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                    &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;globalRadioButton&quot;</span> Content=<span class="string">&quot;GlobalOffset&quot;</span> Checked=<span class="string">&quot;rotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;localRadioButton&quot;</span></span><br><span class="line">                                         Content=<span class="string">&quot;LocalOffset&quot;</span> Checked=<span class="string">&quot;centerOfRotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;infoTextBlock1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;xTextBlock1&quot;</span> Text=<span class="string">&quot;沿着X轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;xSlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;xSlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;yTextBlock1&quot;</span> Text=<span class="string">&quot;沿着Y轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;ySlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;ySlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;zTextBlock1&quot;</span> Text=<span class="string">&quot;沿着Z轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;zSlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;zSlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                 </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 三维平移 z轴移动的距离</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void zSlider_ValueChanged1(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (globalRadioButton.IsChecked == <span class="literal">true</span>) &#123;</span><br><span class="line">                pingyiProjection.GlobalOffsetZ = e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                pingyiProjection.LocalOffsetZ= e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            ShowCenterOfRotationValue();</span><br><span class="line">        &#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 展示Textblock控件当前各个位置平移的值</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">        private void <span class="function"><span class="title">ShowCenterOfRotationValue</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            infoTextBlock1.Text = $<span class="string">&quot;GlobaloffsetX:&#123;pingyiProjection.GlobalOffsetX&#125;&quot;</span> +</span><br><span class="line">                $<span class="string">&quot;Y:&#123;pingyiProjection.GlobalOffsetY&#125; Z:&#123;pingyiProjection.GlobalOffsetZ&#125; LocalOffsetX:&#123;pingyiProjection.LocalOffsetX&#125; Y:&#123;pingyiProjection.LocalOffsetY&#125; Z:&#123;pingyiProjection.LocalOffsetZ&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void ySlider_ValueChanged1(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (globalRadioButton.IsChecked == <span class="literal">true</span>) &#123; </span><br><span class="line">                pingyiProjection.GlobalOffsetY= e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                pingyiProjection.LocalOffsetY= e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            ShowCenterOfRotationValue();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void xSlider_ValueChanged1(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (globalRadioButton.IsChecked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                pingyiProjection.GlobalOffsetX = e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                pingyiProjection.LocalOffsetX = e.NewValue;</span><br><span class="line">            &#125;</span><br><span class="line">            ShowCenterOfRotationValue();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>8.24.用矩阵实现三维特效<br>用矩阵实现三维特效主要是依赖Matrix3DProjection和Matrix3D类型来实现,Matrix3DProjection是Matrix3D周围的包装类.<br>Matrix3D类表示一个转换矩阵,该矩阵确定三维(3D)显示对象的位置和方向,该矩阵可以执行转换功能,包括平移(沿X,Y和Z轴重新定位),旋转和缩放(调整大小).Matrix3D类还可以执行透视投影,这会将3D坐标空间中的点映射到二维(2D)视图.<br>Matrix3D类使用1个4x4正方形矩阵,即一个由四行和四列数字构成的表,其中容纳了用于转换的数据.矩阵的前三行容纳每个3D轴(X,Y,Z)的数据.平移信息位于最后一列中,方向和缩放数据位于前三个列中,缩放因子是位于前三个列中的对角数字,单一矩阵可以将多个转换组合在一起,并一次性对3D显示对象应用这些转换.例如,可以将一个矩阵应用于3D坐标,以便依次执行旋转和平移.如果三维特效之前的点坐标为(X,Y,Z),实现矩阵三维特效后的点坐标(X<code>,Y</code>,Z<code>)的计算公式如下: X</code>=M11<em>X+M21</em>Y+M31<em>Z+OffsetX.<br>Y<code>=M12*X+M22*Y+M32*Z+OffsetY. Z</code>=M13</em>X+M23<em>Y+M33</em>Z+OffsetZ.<br>Matrix3D的行向量语法<br>M11    M12    M13    M14<br>M21    M22    M23    M24<br>M31    M32    M33    M34<br>OffsetX    OffsetY    OffsetZ    M44<br>为了更好理解矩阵,总共有五种不同类型的矩阵,4X4矩阵结构,单位矩阵，平移矩阵，缩放矩阵和旋转矩阵.<br>单位矩阵表示三维物体在世界空间内的初始位置.如果将一个矩阵乘以单位矩阵还会得到原来的矩阵,没有变换.<br>单位矩阵<br>1    0    0    0<br>0    1    0    0<br>0    0    1    0<br>0    0    0    1<br>缩放矩阵<br>表示用来对物体进行缩放变换,只需将三维物体乘以缩放矩阵就可以实现缩放的效果.在表中Sx,Sy,Sz分别表示沿着不同的方向进行缩放的比例.<br>缩放矩阵<br>Sx    0    0    0<br>0    Sy    0    0<br>0    0    Sz    0<br>0    0    0    1<br>//向X,Y,Z轴缩放</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private Matrix3D CreateScaleTransform(double sx,double sy,double sz)&#123;</span><br><span class="line">Matrix3D m=new Matrix3D();</span><br><span class="line">m.M11=sx;m.M12=0.0;m.M13=0.0;m.M14=0.0;</span><br><span class="line">m.M21=0.0;m.M22=sy;m.M23=0.0;m.M24=0.0;</span><br><span class="line">m.M31=0.0;m.M32=0.0;m.M33=sz;m.M34=0.0;</span><br><span class="line">m.OffsetX=0.0;m.OffsetY=0.0;m.OffsetZ=0.0;m.M44=1.0;</span><br><span class="line"><span class="built_in">return</span> m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>平移矩阵表示用来对物体进行平移变换,只需将三维物体乘以平移矩阵就可以实现平移效果,在表中Tx,Ty和Tz分别表示沿着不同方向进行缩放的比例.<br>平移矩阵<br>1    0    0    0<br>0    1    0    0<br>0    0    1    0<br>Tx    Ty    Tz    1<br>//向x,y,z轴移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 平移矩阵 向x,y,z轴移动</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=<span class="string">&quot;tx&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=<span class="string">&quot;ty&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=<span class="string">&quot;tz&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">private Matrix3D TranslationTransform(double tx,double ty,double tz) &#123;</span><br><span class="line">    Matrix3D m = new Matrix3D();</span><br><span class="line">    m.M11 = 1.0;m.M12 = 0.0;m.M13 = 0.0;m.M14 = 0.0;</span><br><span class="line">    m.M21 = 0.0;m.M22 = 1.0;m.M23 = 0.0;m.M24 = 0.0;</span><br><span class="line">    m.M31 = 0.0;m.M32 = 0.0;m.M33 = 1.0;m.M34 = 0.0;</span><br><span class="line">    m.OffsetX = tx;m.OffsetY = ty;m.OffsetZ = tz;m.M44 = 1.0;</span><br><span class="line">    <span class="built_in">return</span> m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沿着X,Y,Z轴旋转的矩阵分别如下所示 0表示旋转的角度<br>X轴旋转矩阵<br>1    0    0    0<br>0    cos0    sin0    0<br>0    -sin0    cos0    0<br>0    0    0    1<br>RotationX<br>Y轴旋转矩阵<br>cos0    0    sin0    0<br>0    1    0    0<br>-sin0    0    cos0    0<br>0    0    0    1<br>RotationY<br>Z轴旋转矩阵<br>cos0    sin0    0    0<br>-sin0    cos0    0    0<br>0    0    1    0<br>0    0    0    1<br>RotationZ</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">///旋转矩阵</span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 沿X轴移动</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=<span class="string">&quot;theta&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">      private Matrix3D RotateXTransform(double theta) &#123; </span><br><span class="line">          double sin=Math.Sin(theta);</span><br><span class="line">          double cos=Math.Cos(theta);</span><br><span class="line">          Matrix3D  m=new Matrix3D();</span><br><span class="line">          m.M11 = 1.0;m.M12 = 0.0;m.M13 = 0.0;m.M14 = 0.0;</span><br><span class="line">          m.M21 = 0.0;m.M22 = cos; m.M23 = sin;m.M24 = 0.0;</span><br><span class="line">          m.M31= 0.0; m.M32 = -sin;m.M24 = cos;m.M34 = 0.0;</span><br><span class="line">          m.OffsetX=0.0; m.OffsetY= 0.0;m.OffsetZ = 0.0;m.M44 = 1.0;</span><br><span class="line">          <span class="built_in">return</span> m;</span><br><span class="line">      &#125;</span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 沿Y轴移动</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=<span class="string">&quot;theta&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">      private Matrix3D RotateYTransform(double theta) &#123;</span><br><span class="line">          double sin=Math.Sin(theta);</span><br><span class="line">          double cos=Math.Cos(theta);</span><br><span class="line">          Matrix3D m=new Matrix3D();</span><br><span class="line">          m.M11 = cos;m.M12 = 0.0;m.M13 = -sin;m.M14 = 0.0;</span><br><span class="line">          m.M21 = 0.0;m.M22 = 1.0;m.M23 = 0.0;m.M24=0.0;</span><br><span class="line">          m.M31 = sin;m.M32 = 1.0;m.M33 = cos;m.M34 = 0.0;</span><br><span class="line">          m.OffsetX = 0.0;m.OffsetY = 0.0;m.OffsetY = 0.0;m.M44 = 1.0;</span><br><span class="line">          <span class="built_in">return</span> m;</span><br><span class="line">      &#125;</span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 沿Z轴移动</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=<span class="string">&quot;theta&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">      private Matrix3D RotateZTransform(double theta) &#123; </span><br><span class="line">          double cos=Math.Cos(theta);</span><br><span class="line">          double sin=Math.Sin(theta);</span><br><span class="line">          Matrix3D m=new Matrix3D();</span><br><span class="line">          m.M11 = cos;m.M12 = sin;m.M13= 0.0;m.M14 = 0.0;</span><br><span class="line">          m.M21 = -sin;m.M22 = cos;m.M23 = 0.0;m.M24 = 0.0;</span><br><span class="line">          m.M31 = 0.0;m.M32 = 0.0;m.M33 = 1.0;m.M34= 0.0;</span><br><span class="line">          m.OffsetX = 0;m.OffsetY = 0.0;m.OffsetZ = 0.0;m.M44= 1.0;</span><br><span class="line">          <span class="built_in">return</span> m;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h4 id="动画编程"><a href="#动画编程" class="headerlink" title="动画编程"></a>动画编程</h4><p>实现动画的原始办法是配置一个定时器,然后根据定时器的频率循环的回调.在回调方法中,可以手动更新目标属性,根据时间的变化用数学计算来决定当前值,直到它达到最终值,这时就可以停止定时器,并移除时间处理程序.<br>9.12.动画的目标属性<br>普通的win10动画一定需要一个动画的目标属性,通过改变这个属性值从而实现动画的效果.可以把目标属性分为以下3类:<br>1.普通的UI控件属性,如宽度,高度等.这些属性和布局系统相关,当这些属性改变时会重新触发布局系统的工作.<br>2.变换特效属性<br>变换特效的属性可以作为动画的目标属性,实现从一个变换状态转换到另外一个变换状态.变换特效是不会重新触发UI布局系统的.要实现把矩形的宽度慢慢方法到两倍的动画,可以对Width属性进行动画处理,也可以对ScaleTransform对象的属性进行处理,这时候就应该选择用变换特效属性来实现,除非变换特效属性无法满足动画的实现效果,才去选择对普通的UI控件属性进行动画处理.<br>3.三维特效属性.<br>9.13.动画的类型<br>Win10主要提供两类动画–线性插值动画和关键帧动画,线性插值动画也称为From/To/By动画,用来反映某个对象在指定时间范围内持续渐变的过程.关键帧动画可以指定任意数量的目标值,并可以控制它们的内插方法.还有一种比较少用的动画——基于帧动画.通常一些复杂的动画才会使用基于帧动画.<br>基于帧动画 需要做的全部工作是响应静态的CompositionTarget.Rendering事件,触发该事件可以为每帧获取内容.线性插值动画和关键帧动画是要对UI元素的某个属性或某种变换变换进行动画清理的,也就是动态的在时间轴上改变UI元素的某个属性或者某种变换,所以也可以根据动画所要改变的对象来分为针对属性的动画和针对变换的动画,Storyboard类提供TargetName和TargetProperty附加属性,通过在动画上设置这些属性,将告诉动画对哪些内容进行处理.不过在动画以对象作为处理目标之前,必须使用x:Name属性为该对象提供一个名称,否则必须间接地以属性作为目标.针对属性地动画需要将TargetName和TargetProperty附加属性赋值为元素地名称和元素地属性名称,基于帧动画比较特殊,这是一种低级地动画处理方式.相当于每一帧地动画都需要通过事件来重绘界面.<br>9.2.线性插值动画<br>线性插值实际上就是通过给定两个关键帧图形线性地求出两帧之间地中间帧图形,这里的线性插值动画是把两个对应的开始值和结束值之间间隔划分,然后线性的实现等量递增或递减的效果.在Windows10中,线性插值动画表现为:界面上某个元素的某个属性在开始值和结束值之间递增或递减,比如淡入淡出效果,时钟转动.<br>9.21.动画的基本语法.<br>Win10动画类位于System.Windows.Media.Animation命令空间下,Win10的线性插值动画和关键帧动画都是基于Timeline(时间线)的动画,所有的动画都是继承于Timeline类,Timeline用来表示动画的某一时刻或某段时间的范围.用来记录动画的状态,行为,顺序,起始位置和结束位置及动画持续时间.<br>Storyboard是Win10动画的基本单元,派生于Timeline类,用来分配动画时间,可以使用同一个故事板对象产生一种或多种动画效果,并且允许控制动画的播放,暂停,停止及在何时何地播放,使用故事板时,必须指定TargetProperty(目标属性)和TargetName(目标名称)属性,这两个属性把故事板和所有产生的动画效果衔接起来,起到桥梁的作用.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Storyboard x:Name=<span class="string">&quot;storyboard1&quot;</span>&gt;</span><br><span class="line">                          &lt;DoubleAnimation EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                           Storyboard.TargetName=<span class="string">&quot;ellipse1&quot;</span></span><br><span class="line">                                           Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span></span><br><span class="line">                                           From=<span class="string">&quot;150&quot;</span> To=<span class="string">&quot;300&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span>/&gt;</span><br><span class="line">                      &lt;/Storyboard&gt;</span><br></pre></td></tr></table></figure><p>9.22.线性动画的基本语法<br>System.Windows.Media.Animation命名空间,并且都以Animation结尾,这些类主要有DoubleAnimation类,ColorAnimation类和PointAnimation类.这三个类分别对Double,Color和Point属性进行动画处理.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                   &lt;StackPanel.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;myStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;300&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                            RepeatBehavior=<span class="string">&quot;Forever&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span></span><br><span class="line">                                            Storyboard.TargetName=<span class="string">&quot;rect&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                           </span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/StackPanel.Resources&gt;</span><br><span class="line">                   &lt;Rectangle x:Name=<span class="string">&quot;rect&quot;</span> Width=<span class="string">&quot;0&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;启动动画&quot;</span> Click=<span class="string">&quot;Button_Click_3&quot;</span>/&gt;</span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">       /// 播放动画</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_Click_3(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           myStoryboard.Begin();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.From属性<br>From值是Width属性的开始数值,如果多次单击,每次都会将Width重新设置为0,并重新开始动画.<br>每个依赖属性每次只能响应一个动画,如果开始第二个动画,第一个动画就会自动放弃,在许多情况下,可能不希望动画从最初的From值开始:<br>    1.动画多次启动需要在上次基础上延续下去,需要创建一个能够被多次触发,并且逐次累加效果的动画,例如创建一个每次单击时都大一点的按钮.<br>    2.创建相互重叠的动画,可以使用PointerEnter事件触发一个扩展按钮的动画,并使用PointerLeave事件触发一个将按钮缩小为原始尺寸的互补动画,如果连续快速的将鼠标多次移动到这种按钮上并移开,每个新动画就会打断上一个动画,导致按钮跳回到From属性设置的值.<br>如果当矩形正在增大时单击按钮,按钮宽度就会被重新设置为0个像素.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Storyboard x:Name=<span class="string">&quot;myStoryboard&quot;</span>&gt;</span><br><span class="line">&lt;DoubleAnimation To=<span class="string">&quot;300&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span> AutoReserve=<span class="string">&quot;True&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;rect&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span>/&gt;</span><br><span class="line">&lt;/Storyboard&gt;</span><br></pre></td></tr></table></figure><p>2.To属性<br>3.By属性<br>不使用To属性,也可以使用By属性,By属性用于创建通过设置变化的数量改变数值的动画,而不是通过设置达到的目标改变数值.<br>From 0By100<br>4.Duration属性<br>它是在动画开始和结束之间的时间间隔，没有指定,默认1秒<br>Duration类型还提供了两个特殊的不能通过Timespan对象表示的数值,Duration.Automatic和Duration.Forever.<br>5.AutoReverse属性<br>指定时间线在到达其Duration的终点后是否倒退.如果将此动画属性设置为true,则动画在到达其Duration终点后将倒退,即从其终止值向其起始值反向播放,默认情况下,该属性为false.<br>6.RepeatBehavior属性<br>指定时间线播放次数,默认情况下,时间线重复次数为1.0,即播放一次时间线,根本不进行重复,RepeatBehavior属性的设置有三种语法:<br>Forever:一直重复运行下去.<br>二是设置重复运行的次数,叫做迭代形式,迭代形式占位符是一个整数,用于指定动画应重复的次数.迭代次数后面总是跟一个小写的原义字符x.可以将它想象为一个乘法字符,3x表示3倍.<br>三是设置动画运行的时间跨度,这个时间跨度和Duration属性有很大区别,这个时间表示的是动画从运行到停止的时间,Duration属性的时间表示动画重复一次的时间.时间跨度的语法格式是”[天.]小时:分钟:秒[.秒的小数部分]”,方括号[]表示可选值,重复15秒可以设置RepeatBehavior=”0:0:15”.小时,分钟和数值可以是0-59中的任意整数,天的值可以很大,但其具有未指定的上限.秒的小数部分(包含小数点)的小数值必须介于0-1之间.<br>9.23.DoubleAnimation实现变换动画.<br>下面示例将Storyboard和DoubleAnimation与ScaleTransform一起使用,以便在动画运行时,Rectangle的高度慢慢向下伸长至原来的两倍.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;Canvas&gt;</span><br><span class="line">                   &lt;Canvas.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;storyBoard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--对ScaleTransform对象的ScaleY属性应用动画,表示沿着Y轴缩放倍数变化的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;scacleTransform&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span></span><br><span class="line">                                            From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span></span><br><span class="line">                                            RepeatBehavior=<span class="string">&quot;Forever&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           </span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                       </span><br><span class="line">                   &lt;/Canvas.Resources&gt;</span><br><span class="line">                   &lt;Rectangle x:Name=<span class="string">&quot;rectangle&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;75&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                       &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                           &lt;!--&lt;注意需要对ScaleTransform命名,否则无法定义动画的目标对象&gt;--&gt;</span><br><span class="line">                           &lt;ScaleTransform x:Name=<span class="string">&quot;scaleTransform&quot;</span>&gt;</span><br><span class="line">                           &lt;/ScaleTransform&gt;</span><br><span class="line">                       &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                   &lt;/Rectangle&gt;</span><br><span class="line">               &lt;/Canvas&gt;</span><br><span class="line"> private void Page_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           storyBoard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.24.ColorAnimation实现颜色渐变动画<br>ColorAnimation类是用于属性为Color类型的UI元素的线性插值动画的类型,与色调相关的渐变动画可以使用DoubleAnimation类来实现,通常使用UI元素的Fill属性,Background属性值等来实现对象的填充色调的变化效果.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel&gt;</span><br><span class="line">                   &lt;StackPanel.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;storybord1&quot;</span>&gt;</span><br><span class="line">                           &lt;ColorAnimation From=<span class="string">&quot;Red&quot;</span> To=<span class="string">&quot;Yellow&quot;</span></span><br><span class="line">                                           Storyboard.TargetName=<span class="string">&quot;button&quot;</span></span><br><span class="line">                                           Storyboard.TargetProperty=<span class="string">&quot;(Button.Background).(SolidColorBrush.Color)&quot;</span></span><br><span class="line">                                           Duration=<span class="string">&quot;0:0:5&quot;</span>&gt;</span><br><span class="line">                           &lt;/ColorAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/StackPanel.Resources&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;开始动画&quot;</span> Margin=<span class="string">&quot;12&quot;</span> Click=<span class="string">&quot;Button_Click_4&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;Test&quot;</span> x:Name=<span class="string">&quot;button&quot;</span> Margin=<span class="string">&quot;12&quot;</span> Click=<span class="string">&quot;button_Click_5&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">                   </span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           storybord1.Begin();</span><br></pre></td></tr></table></figure><p>9.25.PointAnimation实现Path图形动画<br>PointAnimation类是用于属性为Point类型的UI元素的线性插值动画的类型,在两个Point值之间做线性内插动画处理,用于改变某些UI元素对象的X,Y值,如元素的Center属性.如果要对Path图形应用动画,动态地改变Path图形上的点,需要用PathGeometry的方式来创建Path图形.<br>我们用一个例子来演示如何实现Path图形的动画,这个动画的运行效果是一个四分之三的圆通过线性动画慢慢变成一个完整的圆,不断地重复这样的动画效果,这个Path圆形的构造原理是从圆最右边的点出发,使用BezierSegment画4条曲线和一条直线连接到中心点形成一个闭合的图形.对第4条曲线BezierSegment的终点Point3进行动画处理,让其从圆的最上边的点坐标运动到最右边的点坐标.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel&gt;</span><br><span class="line">    &lt;StackPanel.Resources&gt;</span><br><span class="line">        &lt;Storyboard x:Name=<span class="string">&quot;storyboard1&quot;</span>&gt;</span><br><span class="line">            &lt;PointAnimation From=<span class="string">&quot;50,0&quot;</span> To=<span class="string">&quot;100,50&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;bezierSegment&quot;</span></span><br><span class="line">                            Storyboard.TargetProperty=<span class="string">&quot;Point3&quot;</span> RepeatBehavior=<span class="string">&quot;5&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">        &lt;/Storyboard&gt;</span><br><span class="line">    &lt;/StackPanel.Resources&gt;</span><br><span class="line">    &lt;Button Content=<span class="string">&quot;运行动画&quot;</span> Click=<span class="string">&quot;Button_Click_6&quot;</span> Margin=<span class="string">&quot;12&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">    &lt;!--&lt;Data属性由4个BezierSegment曲线和1条直线LineSegment组成&gt;--&gt;</span><br><span class="line">    &lt;Path Fill=<span class="string">&quot;#FF4080FF&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> Height=<span class="string">&quot;100&quot;</span> Margin=<span class="string">&quot;162,164,0,0&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">        &lt;Path.Data&gt;</span><br><span class="line">            &lt;PathGeometry&gt;</span><br><span class="line">                &lt;PathFigure StartPoint=<span class="string">&quot;100,50&quot;</span>&gt;</span><br><span class="line">                    &lt;BezierSegment Point1=<span class="string">&quot;100,77.6142&quot;</span> Point2=<span class="string">&quot;77.6142,100&quot;</span> Point3=<span class="string">&quot;50,100&quot;</span>/&gt;</span><br><span class="line">                    &lt;BezierSegment Point1=<span class="string">&quot;22.3858,100&quot;</span> Point2=<span class="string">&quot;0,77.6142&quot;</span> Point3=<span class="string">&quot;0,50&quot;</span>/&gt;</span><br><span class="line">                    &lt;BezierSegment Point1=<span class="string">&quot;0,22.3858&quot;</span> Point2=<span class="string">&quot;22.3858,0&quot;</span> Point3=<span class="string">&quot;50,0&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--BezierSegment表示是圆右上的弧线,对其终点Point3进行动画处理--&gt;</span><br><span class="line">                    &lt;BezierSegment x:Name=<span class="string">&quot;bezierSegment&quot;</span> Point1=<span class="string">&quot;77.6142,0&quot;</span> Point2=<span class="string">&quot;100,22.3858&quot;</span> Point3=<span class="string">&quot;100,50&quot;</span>/&gt;</span><br><span class="line">                    &lt;LineSegment Point=<span class="string">&quot;50,50&quot;</span>/&gt;</span><br><span class="line">                &lt;/PathFigure&gt;</span><br><span class="line">            &lt;/PathGeometry&gt;</span><br><span class="line">        &lt;/Path.Data&gt;</span><br><span class="line">    &lt;/Path&gt;</span><br><span class="line">&lt;/StackPanel&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9.3.关键帧动画<br>1.关键帧动画的概念<br>一个动画轨迹里有多个关键帧,每个关键帧具有自己的相关信息,每个关键帧还同时保存自己在整个动画轨迹里所处的时间点.在实际运行时,根据当前时间,通过对两个关键帧的插值可以得到当前帧.动画运行时,随着时间的变化,插值得到的当前帧也是变化的,从而产生了动画的效果,由于关键帧包括长度,颜色,位置等信息,所以可以实现运动动画,缩放动画,渐变动画,旋转动画以及混合动画.<br>2.关键帧动画与线性插值动画的区别<br>关键帧动画的目标值是使用关键帧对象进行描述的,因此称作”关键帧动画”,通过指定多个值来创建关键帧动画,关键帧还会启用不同的插入逻辑,每个插入逻辑根据动画类型作为不同的”KeyFrame”子类实现,确切的说,每个关键帧动画类型具有KeyFrame类的Discrete,Linear,Spline和Easing变体,用于指定其关键帧,例如,若要指定以Double为目标并使用关键帧的动画,则可声明具有DiscreteDoubleKeyFrame,LinearDoubleKeyFrame,SplineDoubleKeyFrame和EasingDoubleKeyFrame的关键帧.可以在一个KeyFrame集合中使用所有这些类型,用以更改每次新关键帧到达的插入.<br>3.关键帧动画需要注意的属性<br>对于插入行为,每个关键帧控制该插入,直至到达其KeyTime时间.其Value也会在该时间到达,如果有更多关键帧超出范围,则该值将称为序列中下一个关键帧的起始值.<br>关键帧动画的持续时间为隐式持续时间,它等于其任一关键帧中设置的最高KeyTime值.如果需要,可以设置一个显式Duration,但应注意该值不应小于关键帧中的KeyTime,否则将会截断部分动画,除了Duraiton,还可以在关键帧动画上设置基于Timeline的属性,因为关键帧动画类也派生自Timeline.这些属性主要有:<br>    1.AutoReverse:在到达最后一个关键帧后,从结束位置开始反向重复帧.这使得动画的显示持续时间加倍.<br>    2.BeginTime:延迟动画的起始部分.帧内KeyTime值的时间线在BeginTime到达前不开始计数,<br>因此不存在截断帧的风险.<br>    3.FillBehavior:控制到达最后一帧发生的操作.FillBehavior不会对任何中间关键帧产生任何影响.<br>    4.RepeatBehavior:如果该数不是时间线的隐式持续时间的整数倍数,则可能会截断关键帧序列中的部分动画.<br>4.关键帧动画的类别<br>关键帧动画分为线性关键帧,样条关键帧和离散关键帧三种类型.关键帧动画类属于System.Windows.Media.Animation命名空间.并遵守下列命名规定:&lt;类型&gt;AnimationUsingKeyFrame.<br>其中&lt;类型&gt;是该类进行动画处理的值的类型.<br>关键帧的分类<br>所属类型    对应的关键帧动画类    支持的动画过渡方法<br>Color    ColorAnimationUsingKeyFrame    离散，线性，样条<br>Double    DoubleAmimationUsingKeyFrame    离散,线性,样条<br>Point<br>Object                    离散<br>9.32.线性关键帧<br>线性关键帧动画是由许多比较短的段构成的动画.每段表示动画中的初始值,最终值成中间值,当运行动画时,它从一个值光滑的移动到另外一个值,使用线性过度,指定时间段内,动画的播放速度是固定的,比如,如果关键帧段在5秒内,从0过度到10.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;PointAnimation Storyboard.TargetName=<span class="string">&quot;myradialgradientbrush&quot;</span></span><br><span class="line">Storyboard.TargetProperty=<span class="string">&quot;GradientOrigin&quot;</span> From=<span class="string">&quot;0.1,0.7&quot;</span> To=<span class="string">&quot;0.3,0.7&quot;</span></span><br><span class="line">Duration=<span class="string">&quot;0:0:10&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">&lt;/PointAnimation&gt;</span><br></pre></td></tr></table></figure><p>可以使用一个效果相同的PointAnimationUsingKeyFrames对象代替上面的PointAnimation对象.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;PointAnimationUsingKeyFrames Storyboard.TargetName=<span class="string">&quot;myradialgradientbrush&quot;</span> </span><br><span class="line">Storyboard.TargetProperty=<span class="string">&quot;GradientOrigin&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">&lt;LinearPointKeyFrame Value=<span class="string">&quot;0.1,0.7&quot;</span> KeyTime=<span class="string">&quot;0:0:0&quot;</span>/&gt;</span><br><span class="line">&lt;LinearPointKeyFrame Value=<span class="string">&quot;0.3,0.7&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">&lt;/PointAnimationUsingKeyFrames&gt;</span><br></pre></td></tr></table></figure><p>这个动画包含两个关键帧,当动画开始时第一个关键帧设置Point值(如果希望在RadialGradientBrush画刷中设置的当前值,可以省略这个关键帧).第二个关键帧定义结束值,这是10秒之后到达的数值,PointAnimationUsingKeyFrames对象执行线性插值,这样第一个关键帧平滑移动到第二个关键帧,就像PointAnimation对象使用From值和To值一样.<br>每个关键帧动画都使用自己的关键帧对象(LinearPointKeyFrame),对于大部分内容,这些类时相同的,它们包含一个保存目标值的Value属性和一个指示帧何时到达目标值的KeyTime属性,唯一的区别是Value属性的数据类型,在LinearPointKeyFrame类中是Point类型,在DoubleKeyFrame类中是double类型.<br>除了指定动画的Duration外,还需要指定向每个关键帧分配持续时间内的多长一段时间.你可以为动画的每个关键帧描述其KeyTime来实现此目的.每个关键帧的KeyTime都指定了该关键帧的结束时间.KeyTime属性并不能指定关键时间播放的长度,关键帧播放时间长度由关键帧的结束时间,前一个关键帧的结束时间以及动画的持续时间来确定.可以以时间值或百分比形式来指定关键时间,也可以将其指定为特殊值Uniform或Paced.<br>9.33.样条关键帧<br>为了使若干个关键帧间的动画连续流畅,经常采用样条关键帧插值法.具有二阶连续性,即C2连续性,在win10中,每个支持线性关键帧的类也支持样条关键帧,并且它们使用”Spline+数据类型+KeyFrame”形式进行命名.<br>和线性关键帧一样,样条关键帧使用插值从一个值平滑的移动到另外一个值,区别是每个样条关键帧都有一个KeySpline属性.可以使用该属性定义一个影响插值方式的三次贝塞尔样条.<br>样条关键帧使用的是三次方贝塞尔曲线来计算动画运动的轨迹.贝塞尔曲线的每一个顶点都有两个控制点,用于控制在该顶点两侧的曲线的弧度,它是应用于二维图形应用程序的数学曲线.曲线的定义有四个点,起始点,终止点，以及两个相互分离的中间点,滑动两个中间点,贝塞尔曲线的形状会发生变化,三次贝塞尔曲线,则需要一个起点，一个终点，两个控制点来控制曲线的形状.<br>P0,P1,P2,P3四个点在平面或三维空间中定义了三次方贝塞尔曲线,曲线起始于P0,走向P1,并从P2的方向来到P3.曲线一般不会经过P1或P2,这两个点只是提供方向信息.P0和P1之间的距离,决定了曲线在趋进P3之前,走向P2方向的长度有多长,曲线的参数形式为<br>    B(t)=P0(1-t)3+3P1t(1-t)2+3P2t2(1-t)+P3t3,t属于[0,1]<br>样条关键帧可用于达到更真实的记时效果,使用其他关键帧,可以指定一个Value和KeyTime，使用样条关键帧,还需要指定一个KeySpline.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;SplineDoubleKeyFrame Value=<span class="string">&quot;500&quot;</span> KeyTime=<span class="string">&quot;0:0:7&quot;</span> KeySpline=<span class="string">&quot;0.0,1.0 1.0,0.0&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>样条关键帧根据KeySpline属性的值在值之间创建可变的过度,KeySpline属性是从(0,0)延伸到(1,1)的贝塞尔曲线的两个控制点，用于控制在该顶点两侧的曲线的弧度,描述了动画的加速.第一个控制点控制贝塞尔曲线前半部分的曲线因子,第二个控制点控制贝塞尔线段后半部分的曲线因子.此属性基本上定义了一个时间关系间的函数,其中函数-时间图形采用贝塞尔曲线的形状,所得到的曲线是对该样条关键帧的更改速率所进行的描述.曲线陡度越大,关键帧更改其值的速度越快,曲线趋于平缓,关键帧更改其值的速度也趋于缓慢.<br>在XAML属性字符串中指定一个KeySpline值,该字符串具有四个以空格或逗号分隔的Double值,如KeySpline=”0.0,1.0 1.0,0.0”.这些值用作贝塞尔曲线的两个控制点X,Y对.X是时间,Y是对值的函数修饰符.<br>每个值应该始终介于0-1之间.控制点更改该曲线的形状,并因此会更改样条动画的函数随时间变化的行为.<br>每个控制点会影响控制样式动画速率的概念曲线的形状,同时更改(0,0)和(1,1)之间的线性进度,keySplines的语法必须指定且仅指定两个控制点,如果曲线只需要一个控制点,可以重复同一个控制点,如果不将控制点修改为KeySpline,则从(0,0)到(1,1)的直线是线性插入的时间函数的表示形式.<br>下面的示例,通过对比在Canvas控件上移动的两个矩形,演示了一个样条关键帧动画的运动轨迹和一个线性关键帧动画运行轨迹的对比.第一个矩形使用一个具有SplineDoubleKeyFrame对象的DoubleAnimationUsingKeyFrames动画来控制Canvas.Top属性使它从400到0按照样条关键帧的轨迹变化和使用一个具有LinearDoubleKeyFrame对象的DoubleAnimationUsingKeyFrames动画来控制Canvas.Left属性使它从0到400按照线性关键帧的轨迹变化,第二个矩形使用了两个具有DoubleAnimationUsingKeyFrames动画来控制Canvas.Top和Canvas.Left属性,使其匀速的从左下角向右上角运动,两个矩形同时到达目标位置(10秒之后),但是第一个矩形在其运动过程中会有明显的加速和减速,加速时会超过第二个矩形,而减速又会落后于第二个矩形.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid x:Name=<span class="string">&quot;LayoutRoot&quot;</span> Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">    &lt;Grid.Resources&gt;</span><br><span class="line">        &lt;Storyboard x:Name=<span class="string">&quot;SplineKeyStoryBoard&quot;</span>&gt;</span><br><span class="line">            &lt;!--对第一个矩形的Canvas.Top属性使用样条关键帧动画--&gt;</span><br><span class="line">            &lt;DoubleAnimationUsingKeyFrames </span><br><span class="line">                Storyboard.TargetName=<span class="string">&quot;srect&quot;</span></span><br><span class="line">                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span></span><br><span class="line">                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                &lt;SplineDoubleKeyFrame Value=<span class="string">&quot;0&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                      KeySpline=<span class="string">&quot;0.0,1.0 1.0,0.0&quot;</span>/&gt;</span><br><span class="line">            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">            &lt;!--对第一个矩形的Canvas.Left属性使用线性关键帧动画--&gt;</span><br><span class="line">            &lt;DoubleAnimationUsingKeyFrames</span><br><span class="line">                Storyboard.TargetName=<span class="string">&quot;srect&quot;</span></span><br><span class="line">                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span></span><br><span class="line">                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;400&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">            &lt;!--对第二个矩形的Canvas.Top属性使用线性关键帧动画--&gt;</span><br><span class="line">            &lt;DoubleAnimationUsingKeyFrames </span><br><span class="line">                Storyboard.TargetName=<span class="string">&quot;srect2&quot;</span></span><br><span class="line">                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span></span><br><span class="line">                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;0&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">            &lt;!--对第二个矩形的Canvas.Left属性使用线性关键帧动画--&gt;</span><br><span class="line">            &lt;DoubleAnimationUsingKeyFrames</span><br><span class="line">                Storyboard.TargetName=<span class="string">&quot;srect2&quot;</span></span><br><span class="line">                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span></span><br><span class="line">                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;400&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">        &lt;/Storyboard&gt;</span><br><span class="line">    &lt;/Grid.Resources&gt;</span><br><span class="line">    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">            &lt;!--第一个矩形的运动轨迹时采用样条关键帧的方式从左下角向右上角用变化的加速度运动--&gt;</span><br><span class="line">            &lt;Rectangle x:Name=<span class="string">&quot;srect&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Purple&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--第二个矩形的运动轨迹是采用线性关键帧的方式从左下角向右上角匀速运动--&gt;</span><br><span class="line">            &lt;Rectangle x:Name=<span class="string">&quot;srect2&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;运行动画&quot;</span> Canvas.Top=<span class="string">&quot;500&quot;</span> Click=<span class="string">&quot;Button_Click_7&quot;</span>/&gt;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    &lt;/Canvas&gt;</span><br><span class="line">&lt;/Grid&gt;</span><br></pre></td></tr></table></figure><p>9.34.离散关键帧<br>离散关键帧就不会进行平滑的过度,而是当到达关键时间时,属性突然改变到新数值,离散关键帧根本不使用任何插入,使用离散关键帧,动画函数将从一个值跳到下一个没有内插的值.动画在持续时间结束之前不会更改其输出值,直到结束时间点,才会修改.也就是说在KeyTime到达后,只是简单的应用新的Value,离散关键帧可以比线性和样条支持更多类型属性进行动画处理.无法线性变化的属性使用离散关键帧.<br>线性关键帧类使用Linear+数据类型+KeyFrame的形式进行命名.离散关键帧类使用Discrete+数据类型+KeyFrame形式进行命名.当运行这个动画时,中心点会在合适的时间从一个位置跳到下一个位置,这是不平稳的动画效果.下面来看一个针对Point属性的离散关键帧动画,通过改变椭圆填充LinearGradientBrush画刷的开始点的值从而实现了椭圆的颜色渐变的变化效果.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">        &lt;Grid&gt;</span><br><span class="line">            &lt;Grid.Resources&gt;</span><br><span class="line">                &lt;Storyboard x:Name=<span class="string">&quot;Discretestoryboard&quot;</span>&gt;</span><br><span class="line">                    &lt;PointAnimationUsingKeyFrames Storyboard.TargetName=<span class="string">&quot;myLinearGradientBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;StartPoint&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.1,0.3&quot;</span> KeyTime=<span class="string">&quot;0:0:0&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.2,0.4&quot;</span> KeyTime=<span class="string">&quot;0:0:1&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.3,0.5&quot;</span> KeyTime=<span class="string">&quot;0:0:2&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.4,0.6&quot;</span> KeyTime=<span class="string">&quot;0:0:3&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.5,0.7&quot;</span> KeyTime=<span class="string">&quot;0:0:4&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.6,0.8&quot;</span> KeyTime=<span class="string">&quot;0:0:5&quot;</span>/&gt;</span><br><span class="line">                        &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.7,0.9&quot;</span> KeyTime=<span class="string">&quot;0:0:6&quot;</span>/&gt;</span><br><span class="line">                    &lt;/PointAnimationUsingKeyFrames&gt;</span><br><span class="line">                &lt;/Storyboard&gt;</span><br><span class="line">            &lt;/Grid.Resources&gt;</span><br><span class="line">            &lt;StackPanel&gt;</span><br><span class="line">                &lt;Ellipse x:Name=<span class="string">&quot;ellipse&quot;</span>&gt;</span><br><span class="line">                    &lt;Ellipse.Fill&gt;</span><br><span class="line">                        &lt;LinearGradientBrush x:Name=<span class="string">&quot;myLinearGradientBrush&quot;</span></span><br><span class="line">                                             StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;1,0&quot;</span>&gt;</span><br><span class="line">                            &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.001&quot;</span>/&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;Blue&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                            &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                        &lt;/LinearGradientBrush&gt;</span><br><span class="line">                    &lt;/Ellipse.Fill&gt;</span><br><span class="line">                &lt;/Ellipse&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;100&quot;</span> Click=<span class="string">&quot;Button_Click_8&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_8(object sender, RoutedEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    Discretestoryboard.Begin();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一种动画类型是可以将动画化的值应用于其类型不是Double,Point,Color的属性的唯一方法,它就是关键帧动画ObjectAnimationUsingKeyFrames.使用Object值的动画非常不同.因为不可能在帧之间插入值.当帧的KeyTime到达时,动画化的值将立即设置为关键帧的Value中指定的值,由于没有任何插入,因此只有一种关键帧用于ObjectAnimationUsingKeyFrame.关键帧集合:DiscreteObjectKeyFrame.DiscreteObjectKeyFrame的Value通常使用属性元素语法设置.因为设置的对象值通常不可表示为字符串以采用属性语法填充Value.如果使用引用,例如StaticResource,则可以使用属性语法.<br>在使用的Button控件的默认样式里面可以发现,按钮的点击状态和不可用状态都使用了ObjectAnimationUsingKeyFrames的离散关键帧动画来改变按钮的背景画刷颜色.因为系统的背景资源、是SolidColorBrush对象,而不仅仅是Color值,但由于SolidColorBrush不是Double,Point或Color,因此必须使用ObjectAnimationUsingKeyFrames才能使用该资源.<br>另外,还可使用ObjectAnimationUsingKeyFrames来设置使用枚举值的属性的动画,如果把按钮的Disabled状态改成要隐藏按钮,可以获取Visibility枚举常量的Visibility属性,在这种情况下,可以使用属性语法设置该值,使用枚举值设置属性,例如Collapsed.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;VisualState x:Name=<span class="string">&quot;Disabled&quot;</span>&gt;</span><br><span class="line">&lt;Storyboard&gt;</span><br><span class="line">&lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName=<span class="string">&quot;ContentContainer&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Visibility&quot;</span>&gt;</span><br><span class="line">&lt;DiscreteObjectKeyFrame KeyTime=<span class="string">&quot;0&quot;</span> Value=<span class="string">&quot;Collapsed&quot;</span>/&gt;</span><br><span class="line">&lt;/ObjectAnimationUsingKeyFrames&gt;</span><br><span class="line">&lt;/Storyboard&gt;</span><br><span class="line">&lt;/VisualState&gt;</span><br></pre></td></tr></table></figure><p>9.4.缓动函数动画<br>Window10内置了11种缓动函数动画:BackEase,BounceEase,CircleEase,CubicEase,ElasticEase,ExponentialEase,PowerEase,QuadraticEase,QuinticEase和SineEase.<br>    有些缓动函数具有其自己的属性,例如BounceEase具有两个属性(Bounces和Bounciness),用于修改该特定的BounceEase随时间变化的函数行为,其他缓动函数(CubicEase)不具有除所有缓动函数共享的EasingMode属性之外的任何属性,并且始终产生相同的随时间变化的函数行为,根据你在具有多个属性的缓动函数上设置的属性,这些缓动函数中的某些函数会有些重叠,例如,QuadraticEase与其Power等于2的PowerEase完全相同.并且CircleEase基本上就是具有默认值的ExponentialEase.<br>BackEase缓动函数是唯一的,因为它可以更改正常范围之外的值(在由From/To设置时)或关键帧的值,它通过更改相反方向的值启动动画,按照预期从正常的From/To行为开始,再次返回至From或起始值,然后按正常行为运行动画.<br>    缓动函数可以以三种方式应用于动画:<br>    1.通过在关键帧动画中使用缓动关键,使用EasingColorKeyFrame.EasingFunction,EasingDoubleKeyFrame,EasingFunction或EasingPointKeyFrame.EasingFunction.<br>    2.通过在线性插值动画类型上设置EasingFunction属性,使用ColorAnimation.EasingFunction,DoubleAnimation.EasingFunction或PointAnimation.EasingFunction.<br>    3.通过将GeneratedEasingFunction设置为VisualTransition的一部分,这种方式专用于定义控件的视觉状态.<br>9.42.BackEase动画<br>BackEase:在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动通过指定动画的EasingMode属性值,可以控制动画中Back行为发生的时间.<br>用于此动画的函数公式如下所示:f(t)=t3-t<em>a</em>sin(t*Π) a:amplitude<br>EasingMode=”EaseIn”    EasingMode=”EaseOut”    EasingMode=”EaseInOut”<br>因为此动画导致值在前进前收回,所以动画可能会意外插入到负数中,当对不支持负数的属性进行动画处理时,可能会引发错误.如果将此动画应用到对象的Height(例如,对于EaseIn的EasingMode,应为0-200),则该动画将尝试对Height插入负数,从而引发错误.<br>下面用一个示例来演示BackEase的EaseInOut的动画效果,注意动画快要结束时可以发现第一个椭圆是先变大再变小,第二个椭圆的运动轨迹与上面的图形是相似的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;Easestoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselScaleTransform&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;ScaleX&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselScaleTransform&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse4&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse4&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;!--第一个椭圆展示了BackEase的放大动画效果--&gt;</span><br><span class="line">                       &lt;Ellipse Name=<span class="string">&quot;ellipse3&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                           &lt;Ellipse.RenderTransform&gt;</span><br><span class="line">                               &lt;ScaleTransform x:Name=<span class="string">&quot;ellipselScaleTransform&quot;</span>&gt;</span><br><span class="line">                                   </span><br><span class="line">                               &lt;/ScaleTransform&gt;</span><br><span class="line">                           &lt;/Ellipse.RenderTransform&gt;</span><br><span class="line">                       &lt;/Ellipse&gt;</span><br><span class="line">                       &lt;!--第二个椭圆展示了BackEase的运动轨迹--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse4&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_10&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line"></span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_10(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Easestoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.43.BounceEase动画<br>BounceEase:创建弹跳效果.f(t)表示动画进度,t表示时间<br>EasingMode=”EaseIn”    EasingMode=”EaseOut” EasingMode=”EaseInOut”<br>可以使用Bounces属性指定弹跳次数并使用Bounciness属性指定弹跳程度(弹性大小).Bounciness属性指定下一个反弹的幅度缩放,例如反弹度值2会使渐入中下一个反弹的幅度翻倍,并且会使渐出中下一个反弹的幅度减半.<br>下面用一个示例演示BounceEase的EaseOut的动画效果,第一个椭圆会有几次变大变小的效果,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;Bouncestoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                            Storyboard.TargetName=<span class="string">&quot;ellipse5&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;80&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                            Storyboard.TargetName=<span class="string">&quot;ellipse5&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;Height&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                  </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse6&quot;</span>         Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse6&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;!--第一个椭圆展示了BounceEase的动画效果--&gt;</span><br><span class="line">                       &lt;Ellipse Name=<span class="string">&quot;ellipse5&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                       &lt;!--第二个椭圆展示了BounceEase的运动轨迹--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse6&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_11&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_11(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Bouncestoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.44.CircleEase动画<br>CircleEase:创建使用循环函数加速和/或减速的动画.通过指定EasingMode,可以控制动画加速与减速.<br>用于此函数的函数公式如下:<br>f(t)=1-(1-t2)平方根<br>t的有效值为-1&lt;=t&lt;=1,大于1的值将被计算为1,而小于-1的值则被计算为-1<br>这意味着此时间间隔之外的值的动画继续,但缓动函数在进入无效的域时暂停,并在离开无效的域时恢复.<br>下面用一个示例来演示一下CircleEase的EaseOut的动画效果,第一个椭圆的宽度会先快速的拉长然后再慢慢的拉长,第二个椭圆的运动轨迹与上面EaseOut的动画轨迹图形是相似的,类似沿着一个四分之一圆的轨迹进行运动.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;CircleEasestoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;80&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;ellipse7&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CircleEase EasingMode=<span class="string">&quot;EaseOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse8&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse8&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CircleEase EasingMode=<span class="string">&quot;EaseOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了CircleEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse7&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了CircleEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse8&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_12&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line"> private void Button_Click_12(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            CircleEasestoryboard.Begin();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>9.45.CubicEase动画<br>CubicEase:创建使用公式f(t)=t3加速和/或减速的动画,通过指定EasingMode,可以控制动画加速或减速.<br>下面来演示CircleEase的EaseOut的动画效果,第一个椭圆展示出来的是一种很自然的翻转效果,像是上面被推了一下然后突然翻转过来到前端时间比较慢,后半段时间速度就快速增大,第二个椭圆的运动轨迹与上面EaseInOut动画轨迹是相似的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;Cubicstoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;180&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselPlaneProjection&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;RotationX&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;CubicEase EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse10&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse10&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;CubicEase EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;!--第一个椭圆展示了CubicEase的动画效果--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse9&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                           &lt;Ellipse.Projection&gt;</span><br><span class="line">                               &lt;PlaneProjection RotationX=<span class="string">&quot;0&quot;</span> x:Name=<span class="string">&quot;ellipselPlaneProjection&quot;</span>&gt;</span><br><span class="line">                               &lt;/PlaneProjection&gt;</span><br><span class="line">                           &lt;/Ellipse.Projection&gt;</span><br><span class="line">                       &lt;/Ellipse&gt;</span><br><span class="line">                       &lt;!--第二个椭圆展示了CubicEase的运动轨迹--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse10&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_13&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line"> private void Button_Click_13(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Cubicstoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.46.ElasticEase动画<br>ElasticEase:创建类似于弹簧在停止前来回震荡的动画,通过指定EasingMode属性值,可以控制动画中”弹簧”行为发生的时间.<br>可以使用Oscillations属性指定动画来回振动的次数,以及使用Springiness属性指定振动弹性的张紧程度,<br>因为此动画导致值来回振动,所以此动画可能会意外插入到负数中.当对不支持负数的属性进行动画处理时,这可能会引发错误.<br>下面用一个示例来演示ElasticEase的EaseOut的动画效果,第一个椭圆和线条展示出来的是用有弹性的绳子栓住吊球,然后往下掉落的这种自然效果,线条相当于是有弹性的绳子,而第一个椭圆相当于吊球,第二个椭圆模拟了上面EaseOut的动画轨迹图形</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;Elasticstoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--线条的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                            Storyboard.TargetName=<span class="string">&quot;line1&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;Y2&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse11&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse12&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse12&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;!--线条展示了ElasticEase的动画效果--&gt;</span><br><span class="line">                       &lt;Line x:Name=<span class="string">&quot;line1&quot;</span> X1=<span class="string">&quot;50&quot;</span> Y1=<span class="string">&quot;0&quot;</span> X2=<span class="string">&quot;50&quot;</span> Y2=<span class="string">&quot;50&quot;</span></span><br><span class="line">                             Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                       &lt;!--第一个椭圆展示了ElasticEase的动画效果--&gt;</span><br><span class="line">                       &lt;Ellipse Name=<span class="string">&quot;ellipse11&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span> Width=<span class="string">&quot;100&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                       &lt;!--第二个椭圆展示了ElasticEase的运动轨迹--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse12&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_14&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_14(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Elasticstoryboard.Begin();  </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.47.ExponentialEase动画<br>ExponentialEase:创建使用指数公式加速和/或减速的动画.通过指定EasingMode,可以控制动画加速与减速<br>下面来演示ExponentialEase的EaseIn的动画效果,第一个动画开始时非常缓慢,然后突然间加速冲到最底下,<br>第二个类似EaseIn动画轨迹图形</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;ExponentialStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse13&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;ExponentialEase Exponent=<span class="string">&quot;10&quot;</span> EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse14&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse14&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;ExponentialEase Exponent=<span class="string">&quot;10&quot;</span> EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;!--第一个椭圆展示了ExponentialEase的动画效果--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse13&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                       &lt;!--第二个椭圆展示了ExponentialEase的运动轨迹--&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse14&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_15&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_15(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           ExponentialStoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.48.PowerEase/QuadraticEase/QuarticEase/QuinticEase动画<br>PowerEase:创建使用公式f(t)=tp次方(其中,p等于Power属性)加速和/减速的动画<br>公式f(t)=tp次方,因此,PowerEase函数可由QuadraticEase(ft=t2),CubicEase(ft=t3),QuarticEase(ft=t4)和QuinticEase(ft=t5)替代.<br>如果希望用PowerEase函数来创建与QuadraticEase函数(ft=t2)创建的行为相同的行为,应将Power属性指定为2,QuadraticEase:创建使用ft=t2加速和/或减速的动画.QuarticEase:创建使用公式ft=t4加速和/或减速的动画<br>下面演示PowerEase的EaseIn的动画效果,通过Slider控件设置PowerEase的Power值,Power值越大第一个椭圆后面掉落的加速度就越大,加速的时间也越短.第二个椭圆的运动轨迹模拟了上面EaseIn的动画轨迹图形.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;powerStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse15&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;PowerEase EasingMode=<span class="string">&quot;EaseIn&quot;</span> x:Name=<span class="string">&quot;powerEase1&quot;</span>/&gt;</span><br><span class="line">                                   </span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse16&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse16&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;PowerEase EasingMode=<span class="string">&quot;EaseIn&quot;</span> x:Name=<span class="string">&quot;powerEase2&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;Ellipse Name=<span class="string">&quot;ellipse15&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse16&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_16&quot;</span>/&gt;</span><br><span class="line">                       &lt;Slider x:Name=<span class="string">&quot;powerSlider&quot;</span> Margin=<span class="string">&quot;200,500,0,0&quot;</span></span><br><span class="line">                               Width=<span class="string">&quot;200&quot;</span> Background=<span class="string">&quot;Red&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> Minimum=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_16(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           powerEase1.Power = powerSlider.Value;</span><br><span class="line">           powerEase2.Power= powerSlider.Value;</span><br><span class="line">           powerStoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.49.SineEase动画<br>SineEase:创建使用正弦公式加速和/或减速的动画.<br>ft=1-[sin(1-t)*(Π/2)]<br>下面用一个示例演示SineEase的EaseIn动画效果,相比PowerEase平缓了许多.第二个模拟了EaseIn动画轨迹图形</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">  &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;SineStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse17&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;SineEase EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse18&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                           &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse18&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                               &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                   &lt;SineEase EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                               &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/Grid.Resources&gt;</span><br><span class="line">                   &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;Ellipse Name=<span class="string">&quot;ellipse17&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                       &lt;Ellipse x:Name=<span class="string">&quot;ellipse18&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_17&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">private void Button_Click_17(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           SineStoryboard.Begin();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.5.基于帧动画<br>9.51.原理<br>基于帧动画的创建主要是依赖CompositionTarget类,CompositionTarget是一个静态类,表示应用程序要在其上进行绘制的显示画面.每次绘制场景时,都会引发Rendering事件,创建基于帧动画的语法很简单,只需要为静态的CompositionTarget.Rendering事件关联事件处理程序,然后在事件处理程序处理动画的内容.<br>如果要结束动画,就移除CompositionTarget.Rendering关联事件处理程序.由此可见,基于帧动画只能使用C#代码进行创建,不能像其他动画用Xaml来编写,同时也无法在样式,控件模板或数据模板中定义.<br>当构建基于帧的动画时:它们不是依赖于时间的.动画可能在性能好的设备上运动更快,因为帧速率会增加,从而会更频繁的调用CompositionTarget.Rendering事件.CompositionTarget.Rendering事件的调用频率并不是一个固定值,它是和设备及当前应用程序的运行状况紧密相关,如果程序在基于帧动画的时候还在处理其他耗时操作时,CompositionTarget.Rendering事件的调用频率就会比较低.由于CompositionTarget.Rendering事件可以根据当前的状况来调整动画的频率使得动画更加流畅,所以它比直接使用定时器DispatcherTimer做原始的动画处理更加优越.<br>9.52.基于帧动画的应用场景<br>1.线性插值动画和关键帧动画实现不了或很难实现的动画.<br>2.创建一个基于物理的动画或者构建粒子效果模型如火焰,雪以及气泡.<br>9.53.基于帧动画的实现<br>下面通过一个例子来演示基于帧动画的运用,动画要实现的效果是通过在Canvas面板中触摸滑动来控制矩形Rectangle滑块的运动,滑块会往面板触摸的方向运动,但是滑块不能离开Canvas面板.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"> &lt;Canvas Background=<span class="string">&quot;Gray&quot;</span> PointerMoved=<span class="string">&quot;Canvas_PointerMoved&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle x:Name=<span class="string">&quot;prectangle&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;100&quot;</span></span><br><span class="line">                               RadiusX=<span class="string">&quot;12.5&quot;</span> RadiusY=<span class="string">&quot;12.5&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.Fill&gt;</span><br><span class="line">                            &lt;LinearGradientBrush&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                            &lt;/LinearGradientBrush&gt;</span><br><span class="line">                        &lt;/Rectangle.Fill&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line"> ///基于帧动画</span><br><span class="line">            ///</span><br><span class="line">            CompositionTarget.Rendering += CompositionTarget_Rendering;</span><br><span class="line">            this.prectangle.RenderTransform = translateTransform;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 处理基于帧的事件,动画的逻辑在这个事件里面进行处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void CompositionTarget_Rendering(object sender, object e)</span><br><span class="line">        &#123;</span><br><span class="line">           var currentTime=DateTime.Now;</span><br><span class="line">            //计算两帧之间的时间差,把时间差作为计算位移的系数</span><br><span class="line">            double elapsedTime = (currentTime - preTime).TotalSeconds;</span><br><span class="line">            preTime=currentTime;</span><br><span class="line">            //控制矩形的移动不超过画布面板的边界</span><br><span class="line">            translateTransform.X += mouseLocation.X * elapsedTime;</span><br><span class="line">            <span class="keyword">if</span> (translateTransform.X &gt; 300) translateTransform.X = 300;</span><br><span class="line">            <span class="keyword">if</span>(translateTransform.X&lt;0)translateTransform.X = 0;</span><br><span class="line">            translateTransform.Y+= mouseLocation.Y * elapsedTime;</span><br><span class="line">            <span class="keyword">if</span> (translateTransform.Y &gt; 450) translateTransform.Y = 450;</span><br><span class="line">            <span class="keyword">if</span> (translateTransform.Y &lt; 0)translateTransform.Y= 0;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"> //触摸点的位置</span><br><span class="line">        Point mouseLocation;</span><br><span class="line">        //用于矩形的位移变换改变矩形的位置</span><br><span class="line">        TranslateTransform translateTransform=new TranslateTransform();</span><br><span class="line">        //用于保存上一帧时间,计算时间差</span><br><span class="line">        DateTime preTime=DateTime.Now;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 通过PointerMoved事件获取当前的触摸点相对于矩形的坐标,滑动点在矩形左边X值为负值,右边X值为正值.在上边Y值为负值,在下便Y值为正值.</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Canvas_PointerMoved(object sender, PointerRoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            mouseLocation = e.GetCurrentPoint(this.prectangle).Position;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>9.61.帧速率<br>帧速率是用于测量显示帧数的量度,测量单位为”每秒显示帧数”,是指每秒钟刷新画面的帧数，判断一个动画是否能够流畅的运行,就需要关注动画的帧速率指标是否足够高.<br>在Win10里面虽然不能直接设置动画帧速率,但是可以测量出来,在应用程序里面把属性Application.Current.Host.Settings.EnableFrameRateCounter设置为true将可以在设备的顶部左侧看到帧速率的计数变化情况,默认情况采用Debug调试状态下就会显示出应用当前的帧速率.帧速率的范围是0-60，帧速率越大,应用程序的响应性能越高.帧速率的值一般应在20以上,该值小于30表示存在性能问题.<br>默认情况下会在文件App.xaml.cs中添加启用帧速率计数器的代码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (System.Diagnostics.Debugger.IsAttached) &#123; </span><br><span class="line">           this.DebugSettings.EnableFrameRateCounter = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>表示当启动Debug状态调试应用程序时会启用帧速率计数器.其中Application.Current.Host.Settings.EnableFrameRateCounter=true表示启用帧速率计数器,设置为false则禁用帧速率计数器.<br>9.62.UI线程和构图线程<br>2.构图线程<br>工作是合并图形纹理并将其传递到GPU以供绘制,设备上的GPU将在称为自动缓存的进程中自动缓存并处理运行在构图线程上的动画,构图线程处理与变换特效(RenderTransform)和三维特效(Projection)属性关联的动画(如针对ScaleTransform,TranslateTransform,RotateTransform,PlaneProjection的属性改变的Storyboard动画)都是完全运行在构图线程上的.另外,Opacity和Clip属性设置也由构图线程处理.但是,如果使用OpacityMask或非矩形剪辑,则这些操作将传递到UI线程.<br>3.动画和线程<br>下面通过一个例子来演示用两种不同的方法来实现一个相同的动画效果,所实现的动画效果是让矩形的高度慢慢变成原来的两倍,第一种方式是用线性插值动画对矩形的Height属性进行动画处理,第二种方式也是线性插值动画,但是针对的动画目标属性是ScaleTransform的ScaleY属性,然后用一个按钮单击事件阻塞UI线程2秒钟,可以看到针对Height属性的动画会暂停2秒钟再继续运行,而针对ScaleTransform的ScaleY属性不会受UI线程阻塞的影响.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel&gt;</span><br><span class="line">                   &lt;StackPanel.Resources&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;heightStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--针对Height属性的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;rectangle1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Height&quot;</span></span><br><span class="line">                                            RepeatBehavior=<span class="string">&quot;Forever&quot;</span></span><br><span class="line">                                            EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                            From=<span class="string">&quot;100&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:2&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                       &lt;Storyboard x:Name=<span class="string">&quot;scaleTransformStoryboard&quot;</span>&gt;</span><br><span class="line">                           &lt;!--针对ScaleTransform的ScaleY属性的动画--&gt;</span><br><span class="line">                           &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;scaleTransform1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span> From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:2&quot;</span>&gt;</span><br><span class="line">                           &lt;/DoubleAnimation&gt;</span><br><span class="line">                       &lt;/Storyboard&gt;</span><br><span class="line">                   &lt;/StackPanel.Resources&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;阻塞UI线程&quot;</span> Click=<span class="string">&quot;Button_Click_18&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;heightAnimationButton&quot;</span> Content=<span class="string">&quot;Height属性动画&quot;</span> Click=<span class="string">&quot;heightAnimationButton_Click&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;scaleTransformAnimationButton&quot;</span> Content=<span class="string">&quot;ScaleTransform属性动画&quot;</span> Click=<span class="string">&quot;scaleTransformAnimationButton_Click&quot;</span>/&gt;</span><br><span class="line">                   &lt;Rectangle Height=<span class="string">&quot;100&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span> x:Name=<span class="string">&quot;rectangle1&quot;</span>&gt;</span><br><span class="line">                       &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                           &lt;ScaleTransform x:Name=<span class="string">&quot;scaleTransform1&quot;</span>/&gt;</span><br><span class="line">                       &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                   &lt;/Rectangle&gt;</span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 阻塞线程2秒钟</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_Click_18(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Task.Delay(2000).Wait();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void heightAnimationButton_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //播放改变高度属性的动画,高度由100变成200</span><br><span class="line">           scaleTransformStoryboard.Stop();</span><br><span class="line">           heightStoryboard.Begin();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void scaleTransformAnimationButton_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           heightStoryboard.Stop();</span><br><span class="line">           scaleTransformStoryboard.Begin();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.7.模拟实现微信的彩蛋动画<br>9.72.星星创建工厂<br>实现星星的创建工厂StarFactory类,StarFactory类的作用是创建动画里面的星星对象,动画的实现需要向调用StarFactory类创建出星星对象,然后对星星进行动画处理,所以StarFactory类是一个非常单一的星星构造工厂,不涉及动画的操作,只涉及Path对象的创建<br>下面是星星图形形状的构造封装的3个方法:1._RefactorPoints方法是用于取两个点线段之间的1/3,2/3点和两点间的随机点,最后再加上原来的两个点,返回5个点的点集合;2._RecurseSide方法是封装两个点之间递归之后所取到的点集合;3._CreatePath方法则是把这些点集合连接起来创建一个Path图形表示星星图形.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">public class StarFactory</span><br><span class="line">   &#123;</span><br><span class="line">       public <span class="function"><span class="title">StarFactory</span></span>() &#123; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 把两个点转换成多级的点的集合</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;a&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;b&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;level&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       private static List&lt;Point&gt; _RecurseSide(Point a,Point b,int level) &#123;</span><br><span class="line">           ///递归完成后,返回此线段</span><br><span class="line">           <span class="keyword">if</span> (level==0)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="built_in">return</span> new List&lt;Point&gt; &#123; a,b&#125;;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               //首先,需要建立起第一次递归的点的列表,一直递归到级别为0</span><br><span class="line">               List&lt;Point&gt; newPoints = new List&lt;Point&gt;();</span><br><span class="line">               //把区域分成5个点</span><br><span class="line">               foreach (Point item <span class="keyword">in</span> _RefactorPoints(a,b))</span><br><span class="line">               &#123;</span><br><span class="line">                   newPoints.Add(item);</span><br><span class="line">               &#125;</span><br><span class="line">               List&lt;Point&gt; aggregatePoints= new List&lt;Point&gt;();</span><br><span class="line">               //把每一个线段进一步分解</span><br><span class="line">               <span class="keyword">for</span> (int i = 0; i &lt; newPoints.Count; i++)</span><br><span class="line">               &#123;</span><br><span class="line">                   int y = i + 1 == newPoints.Count ? 0 : i + 1;</span><br><span class="line">                   aggregatePoints.AddRange(_RecurseSide(newPoints[i], newPoints[y],level-1));</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="built_in">return</span> aggregatePoints;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     static Random _random= new Random();</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 通过输入两个点来构建一个有多个三角形组成的Star形状</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;a&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;b&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private static IEnumerable&lt;Point&gt; _RefactorPoints(Point a, Point b)</span><br><span class="line">       &#123;</span><br><span class="line">          //第一个点</span><br><span class="line">          yield <span class="built_in">return</span> a;</span><br><span class="line">           double dX = b.X - a.Y;</span><br><span class="line">           double dY= b.Y - a.Y;</span><br><span class="line">           //第一点到第二个点1/3处的一个点</span><br><span class="line">           yield <span class="built_in">return</span> new Point(a.X+dX/3.0,a.Y+dY/3.0);</span><br><span class="line">           double <span class="built_in">factor</span>=_random.NextDouble()- 0.5;</span><br><span class="line">           double vX = (a.X + b.X) / (2.0 + <span class="built_in">factor</span>)+Math.Sqrt(3.0+<span class="built_in">factor</span>)*(b.Y-a.Y)/(6.0+<span class="built_in">factor</span>*2.0);</span><br><span class="line">           double vY = (a.Y + b.Y) / (2.0 + <span class="built_in">factor</span>) + Math.Sqrt(3.0+<span class="built_in">factor</span>)*(a.X-b.X)/(6.0+<span class="built_in">factor</span>*2.0);</span><br><span class="line">           //中间的三角形的顶点</span><br><span class="line">           yield <span class="built_in">return</span> new Point(vX,vY);</span><br><span class="line">           //第二个点到第一个点1/3处的一个点</span><br><span class="line">           yield <span class="built_in">return</span> new Point(b.X-dX/3.0,b.Y-dY/3.0);</span><br><span class="line">           //第二个点</span><br><span class="line">           yield <span class="built_in">return</span> b;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 使用一系列点来创建路径图形</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       private static Path _CreatePath(List&lt;Point&gt; points) &#123; </span><br><span class="line">           PathSegmentCollection segments= new PathSegmentCollection();</span><br><span class="line">           bool first = <span class="literal">true</span>;</span><br><span class="line">           //把点添加到线段里面</span><br><span class="line">           foreach (Point item <span class="keyword">in</span> points)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (first)</span><br><span class="line">               &#123;</span><br><span class="line">                   first = <span class="literal">false</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   segments.Add(new LineSegment &#123; Point = item &#125;);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           PathGeometry pathGeometry= new PathGeometry();</span><br><span class="line">           //通过线段构建几何图形</span><br><span class="line">           pathGeometry.Figures.Add(new PathFigure</span><br><span class="line">           &#123;</span><br><span class="line">               IsClosed = <span class="literal">true</span>,</span><br><span class="line">               StartPoint = points[0],</span><br><span class="line">               Segments = segments</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="built_in">return</span> new Path &#123; Data = pathGeometry &#125;;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>2.星星颜色的随机生成<br>这里用LinearGradientBrush来填充Path图形,封装的方法_GetColor表示创建随机的颜色对象,_ColorFactory表示对Path图形填充随机的颜色画刷.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 添加颜色到路径图形</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;input&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private static void _ColorFactory(Path input) &#123;</span><br><span class="line">            LinearGradientBrush brush = new LinearGradientBrush();</span><br><span class="line">            brush.StartPoint = new Point(0,0);</span><br><span class="line">            brush.EndPoint= new Point(1.0,1.0);</span><br><span class="line">            GradientStop start=new GradientStop();</span><br><span class="line">            start.Color = _GetColor();</span><br><span class="line">            start.Offset = 0;</span><br><span class="line">            GradientStop middle=new GradientStop();</span><br><span class="line">            middle.Color = _GetColor();</span><br><span class="line">            middle.Offset=_random.NextDouble();</span><br><span class="line">            GradientStop end=new GradientStop();</span><br><span class="line">            end.Color= _GetColor();</span><br><span class="line">            end.Offset = 1.0;</span><br><span class="line">            brush.GradientStops.Add(start);</span><br><span class="line">            brush.GradientStops.Add(middle);</span><br><span class="line">            brush.GradientStops.Add(end);</span><br><span class="line">            input.Fill = brush;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 获取一个随机的颜色</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        private static Color <span class="function"><span class="title">_GetColor</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            Color color = new Color();</span><br><span class="line">            color.A = (byte)(_random.Next(200) + 20);</span><br><span class="line">            color.R = (byte)(_random.Next(200) + 50);</span><br><span class="line">            color.G = (byte)(_random.Next(200) + 50);</span><br><span class="line">            color.B = (byte)(_random.Next(200) + 50);</span><br><span class="line">            <span class="built_in">return</span> color;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>3.创建星星对象<br>创建星星对象需要先有3个点,然后再利用这3个点根据创建星星图形的原理(3*4的n次方),n表示星星递归的层次.创建星星图形,然后用随机颜色画刷填充图形.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">const int MIN = 0;</span><br><span class="line">       const int MAX = 2;</span><br><span class="line">       //随机数产生器</span><br><span class="line">       static <span class="built_in">readonly</span> Random _random=new Random();</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 创建一个Star</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public static Path <span class="function"><span class="title">Create</span></span>() &#123; </span><br><span class="line">       Point a=new Point(0,0);</span><br><span class="line">           Point b = new Point(_random.NextDouble() * 70.0 + 15.0, 0);</span><br><span class="line">           Point c=new Point(0,b.X);</span><br><span class="line">           int levels=_random.Next(MIN,MAX);</span><br><span class="line">           List&lt;Point&gt; points=new List&lt;Point&gt;();</span><br><span class="line">           points.AddRange(_RecurseSide(a,b,levels));</span><br><span class="line">           points.AddRange(_RecurseSide(b,c,levels));</span><br><span class="line">           points.AddRange(_RecurseSide(c,a,levels));</span><br><span class="line">           //画边</span><br><span class="line">           Path retVal=_CreatePath(points);</span><br><span class="line">           //添加颜色</span><br><span class="line">           _ColorFactory(retVal);</span><br><span class="line">           //建立一个旋转的角度</span><br><span class="line">           RotateTransform rotate=new RotateTransform();</span><br><span class="line">           rotate.CenterX = 0.5;</span><br><span class="line">           rotate.CenterY = 0.5;</span><br><span class="line">           rotate.Angle=_random.NextDouble()*360.0;</span><br><span class="line">           retVal.SetValue(Path.RenderTransformProperty,rotate);</span><br><span class="line">           <span class="built_in">return</span> retVal;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>9.73.实现单个星星的动画轨迹<br>要实现对星星实体(StarEntity类)的封装,在StarEntity类里面要实现基于帧动画,在帧刷新事件处理程序里实现星星飘落的动画逻辑.首先需要处理的是确定星星在区域最顶部的随机位置,下落的随机速度和方向,然后在动画的过程中需要去判断星星是否碰撞到了区域的左边距或右边距,碰撞之后则需要再反弹回来往另外一边运动,最后还需要判断星星是否已经落到了最底下,如果落到了区域最底下,则需要移除CompositionTarget.Rendering事件和从画布上移除星星图形,还要触发StarflakeDied事件告知调用方星星已经销毁掉了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">public class StarEntity</span><br><span class="line">   &#123;</span><br><span class="line">       //左边距</span><br><span class="line">       const double LEFT = 460;</span><br><span class="line">       //上边距</span><br><span class="line">       const double TOP = 800;</span><br><span class="line">       //离开屏幕</span><br><span class="line">       const double GONE = 480;</span><br><span class="line">       //随机近似数</span><br><span class="line">       private double _affinity;</span><br><span class="line">       //Star实体的唯一ID</span><br><span class="line">       private Guid _identifier=Guid.NewGuid();</span><br><span class="line">       //随机数产生器</span><br><span class="line">       private static Random _raodom=new Random();</span><br><span class="line">       //Star所在的画布</span><br><span class="line">       private Canvas _surface;</span><br><span class="line">       //获取Star所在的画布</span><br><span class="line">       private Canvas Surface &#123;</span><br><span class="line">           get &#123; <span class="built_in">return</span> _surface; &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       //x,y坐标和相对速度</span><br><span class="line">       private double x, y, velocity;</span><br><span class="line">       //Star的路径图形</span><br><span class="line">       private Path _starflake;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 当Star飘落到底下时回收Star事件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       private EventHandler StarflakeDied;</span><br><span class="line"></span><br><span class="line">       //获取Star实体的唯一ID</span><br><span class="line">       public Guid Identifier</span><br><span class="line">       &#123;</span><br><span class="line">           get &#123; <span class="built_in">return</span> _identifier; &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       //默认的构造器</span><br><span class="line">       public StarEntity(Action&lt;Path&gt; insert) : this(insert, <span class="literal">true</span>) &#123; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 星星对象构造方法 是否从顶下落下</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;insert&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;v&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       public StarEntity(Action&lt;Path&gt; insert, bool fromTop)</span><br><span class="line">       &#123;</span><br><span class="line">           _starflake = StarFactory.Create();</span><br><span class="line">           ///产生0-1的随机数</span><br><span class="line">           _affinity=_raodom.NextDouble();</span><br><span class="line">           ///设置速度,初始化x,y轴</span><br><span class="line">           velocity=_raodom.NextDouble()*2;</span><br><span class="line">           x = _raodom.NextDouble() * LEFT;</span><br><span class="line">           y=fromTop?0:_raodom.NextDouble() * TOP;</span><br><span class="line">           //设置Star在画布的位置</span><br><span class="line">           _starflake.SetValue(Canvas.LeftProperty,x);</span><br><span class="line">           _starflake.SetValue(Canvas.TopProperty,y);</span><br><span class="line">           //添加到画布上</span><br><span class="line">           insert(_starflake);</span><br><span class="line">           //记录下Star的画布</span><br><span class="line">           _surface = _starflake.Parent as Canvas;</span><br><span class="line">           //订阅基于帧动画事件</span><br><span class="line">           CompositionTarget.Rendering += CompositionTarget_Rendering;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 基于帧动画事件处理</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private void CompositionTarget_Rendering(object sender, object e)</span><br><span class="line">       &#123;</span><br><span class="line">           _Frame();</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;44</span><br><span class="line">       /// Star下落的每一帧的处理</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       private void <span class="function"><span class="title">_Frame</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           //下降的y轴的大小</span><br><span class="line">           y = y + velocity + 3.0 * _raodom.NextDouble() - 1.0;</span><br><span class="line">           //判断是否离开了屏幕</span><br><span class="line">           <span class="keyword">if</span> (y&gt;GONE)</span><br><span class="line">           &#123;</span><br><span class="line">               CompositionTarget.Rendering -= CompositionTarget_Rendering;</span><br><span class="line">               _surface.Children.Remove(_starflake);</span><br><span class="line">               //通知外部,Star已经被清除</span><br><span class="line">               EventHandler handler = StarflakeDied;</span><br><span class="line">               <span class="keyword">if</span> (handler!=null)</span><br><span class="line">               &#123;</span><br><span class="line">                   handler(this,EventArgs.Empty);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               //水平轻推</span><br><span class="line">               double xFactor = 10.0 * _affinity;</span><br><span class="line">               <span class="keyword">if</span> (_affinity &lt; 0.5) xFactor *= -1.0;//小于0.5向左边移动,大于0.5向右边移动，等于0.5垂直下降</span><br><span class="line">               &#123;</span><br><span class="line">                   x = x + _raodom.NextDouble() * xFactor;</span><br><span class="line">               &#125;</span><br><span class="line">               //左边的边缘</span><br><span class="line">               <span class="keyword">if</span> (x&lt;0)</span><br><span class="line">               &#123;</span><br><span class="line">                   x = 0;</span><br><span class="line">                   _affinity = 1.0 - _affinity;</span><br><span class="line">               &#125;</span><br><span class="line">               //右边的边缘</span><br><span class="line">               <span class="keyword">if</span> (x&gt;LEFT)</span><br><span class="line">               &#123;</span><br><span class="line">                   x = LEFT;</span><br><span class="line">                   _affinity=1.0- _affinity;</span><br><span class="line">               &#125;</span><br><span class="line">               _starflake.SetValue(Canvas.LeftProperty,x);</span><br><span class="line">               _starflake.SetValue(Canvas.TopProperty,y);</span><br><span class="line">           &#125;</span><br><span class="line">           //转动</span><br><span class="line">           RotateTransform rotate = (RotateTransform)_starflake.GetValue(Path.RenderTransformProperty);</span><br><span class="line">           rotate.Angle += _raodom.NextDouble() * 4.0 * _affinity;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 重载获取唯一的对象码</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public override int <span class="function"><span class="title">GetHashCode</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">return</span> Identifier.GetHashCode();</span><br><span class="line">       &#125;</span><br><span class="line">       public override bool Equals(object obj)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">return</span> obj is StarEntity &amp;&amp; ((StarEntity)obj).Identifier.Equals(Identifier);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>9.74.封装批量星星飘落的逻辑<br>实现一个StarBehavior类用附加属性的方式在Canvas上添加批量的星星飘落的动画,StarBehavior类里面通过AttachStarFlake属性表示是否在该Canvas面板上添加星星飘落动画,当设置为true则表示触发动画的开始,false则表示停止添加星星,直到星星全部飘落到底下时动画停止.在开始播放动画时会初始化多个StarEntity对象,并运行其飘落的动画效果,当飘落到底下StarEntity对象被销毁时,会触发StarflakeDied事件,在StarflakeDied事件里面继续初始化新的StarEntity对象,如果动画停止了,beginning=false,则不再创建新的StarEntity对象.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">using App1.Models;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line"></span><br><span class="line">namespace App1.Behaviors</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// StarBehavior类管理附加属性的行为触发批量星星的构造和动画的实现</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public static class StarBehavior</span><br><span class="line">    &#123;</span><br><span class="line">        //屏幕上生成的Star数量</span><br><span class="line">        const int CAPACITY = 75;</span><br><span class="line">        //动画是否已经开始的标识符</span><br><span class="line">        private static bool begining=<span class="literal">false</span>;</span><br><span class="line">        //Star对象列表</span><br><span class="line">        private static List&lt;StarEntity&gt; _starflakes=new List&lt;StarEntity&gt;(CAPACITY);</span><br><span class="line">        //添加动画效果的属性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public static bool GetAttachStarFlake(DependencyObject obj)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> (bool)obj.GetValue(AttachStarFlakeProperty);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void SetAttachStarFlake(DependencyObject obj, bool value)</span><br><span class="line">        &#123;</span><br><span class="line">            obj.SetValue(AttachStarFlakeProperty, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> AttachStarFlake.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty AttachStarFlakeProperty =</span><br><span class="line">            DependencyProperty.RegisterAttached(<span class="string">&quot;AttachStar&quot;</span>, typeof(bool), typeof(StarBehavior), new PropertyMetadata(<span class="literal">false</span>,new PropertyChangedCallback(_Attach)));</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 附加属性改变事件处理方法</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;d&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private static void _Attach(DependencyObject d, DependencyPropertyChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">           Canvas canvas= d as Canvas;</span><br><span class="line">            <span class="keyword">if</span> (canvas != null &amp;&amp; e.NewValue!=null &amp;&amp; e.NewValue.GetType().Equals(typeof(bool))) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((bool)e.NewValue) &#123;</span><br><span class="line">                    //画布上还有子元素证明星星还没完全飘落下去</span><br><span class="line">                    <span class="keyword">if</span> (canvas.Children.Count&gt;0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    //开始动画</span><br><span class="line">                    begining=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">for</span> (int i = 0; i &lt; _starflakes.Capacity; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        StarEntity starflake = new StarEntity((o) =&gt; canvas.Children.Add(o));</span><br><span class="line">                        starflake.StarflakeDied +=new EventHandler(Starflake_StarflakeDied);</span><br><span class="line">                        _starflakes.Add(starflake);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    //结束动画</span><br><span class="line">                    begining = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //回收Star事件</span><br><span class="line">        private static void Starflake_StarflakeDied(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StarEntity starflake=sender as StarEntity;</span><br><span class="line">            //获取Star的面板,用来添加一个新的Star</span><br><span class="line">            Canvas canvas = starflake.Surface;</span><br><span class="line">            _starflakes.Remove(starflake);</span><br><span class="line">            <span class="keyword">if</span> (begining)</span><br><span class="line">            &#123;</span><br><span class="line">                //如果动画还在继续,运行一个Star消失之后再创建一个新的Star</span><br><span class="line">                StarEntity newFlake = new StarEntity((o)=&gt;canvas.Children.Add(o),<span class="literal">true</span>);</span><br><span class="line">                newFlake.StarflakeDied += Starflake_StarflakeDied;</span><br><span class="line">                _starflakes.Add(newFlake);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9.75.Star飘落演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid&gt;</span><br><span class="line">                   &lt;Canvas x:Name=<span class="string">&quot;myCanvas&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> VerticalAlignment=<span class="string">&quot;Stretch&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">                   &lt;/Canvas&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;btn&quot;</span> VerticalAlignment=<span class="string">&quot;Bottom&quot;</span> Content=<span class="string">&quot;开始星星飘落&quot;</span> Click=<span class="string">&quot;btn_Click&quot;</span>/&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 按钮事件,播放动画和停止动画</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void btn_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> ((bool)myCanvas.GetValue(StarBehavior.AttachStarFlakeProperty) == <span class="literal">false</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               //要等所有的星星全部落下去之后才可以再次播放动画</span><br><span class="line">               <span class="keyword">if</span> (myCanvas.Children.Count &gt; 0)</span><br><span class="line">               &#123;</span><br><span class="line">                   await new MessageDialog(<span class="string">&quot;星星动画未完全结束&quot;</span>).ShowAsync();</span><br><span class="line">                   <span class="built_in">return</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               myCanvas.SetValue(StarBehavior.AttachStarFlakeProperty, <span class="literal">true</span>);</span><br><span class="line">               button.Content = <span class="string">&quot;停止&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> &#123;</span><br><span class="line">               myCanvas.SetValue(StarBehavior.AttachStarFlakeProperty, <span class="literal">false</span>);</span><br><span class="line">               btn.Content = <span class="string">&quot;开始&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="样式和模板"><a href="#样式和模板" class="headerlink" title="样式和模板"></a>样式和模板</h4><p>10.11.创建样式<br>10.21.控件模板(ControlTemplate)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button Content=<span class="string">&quot;Hello World&quot;</span>&gt;</span><br><span class="line">                   &lt;Button.Template&gt;</span><br><span class="line">                       &lt;ControlTemplate&gt;</span><br><span class="line">                           &lt;Grid&gt;</span><br><span class="line">                               &lt;Ellipse Width=<span class="string">&quot;&#123;TemplateBinding Button.Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;TemplateBinding Height&#125;&quot;</span></span><br><span class="line">                                        Fill=<span class="string">&quot;&#123;TemplateBinding Button.Background&#125;&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span></span><br><span class="line">                                          VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                          Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                           &lt;/Grid&gt;</span><br><span class="line">                       &lt;/ControlTemplate&gt;</span><br><span class="line">                   &lt;/Button.Template&gt;</span><br><span class="line">               &lt;/Button&gt;</span><br></pre></td></tr></table></figure><p>10.22.ContentControl和ContentPresenter<br>ContentPresenter是用来显示控件ContentControl的Content属性的,ContentPresneter也有Content属性,默认的情况下可以把Content定义的内容投影到ContentControl的Content里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button&gt;</span><br><span class="line">                   &lt;Button.Template&gt;</span><br><span class="line">                       &lt;ControlTemplate&gt;</span><br><span class="line">                           &lt;Grid&gt;</span><br><span class="line">                               &lt;ContentPresenter HorizontalAlignment=<span class="string">&quot;&#123;TemplateBinding HorizontalAlignment&#125;&quot;</span> VerticalAlignment=<span class="string">&quot;&#123;TemplateBinding VerticalAlignment&#125;&quot;</span>/&gt;</span><br><span class="line">                           &lt;/Grid&gt;</span><br><span class="line">                       &lt;/ControlTemplate&gt;</span><br><span class="line">                   &lt;/Button.Template&gt;</span><br><span class="line">                   &lt;Button.Content&gt;</span><br><span class="line">                       &lt;Rectangle Fill=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Button.Content&gt;</span><br><span class="line">               &lt;/Button&gt;</span><br></pre></td></tr></table></figure><p>10.23.视觉状态管理(VisualStatesManager)<br>通过ControlTemplate修改过的Button控件,当我们单击控件时发现比系统默认的Button控件少了一些点击的状态,这时候就需要使用视觉状态管理类VisualStateManager了<br>VisualStateManager的作用是控制控件的状态转换,不同状态下的UI显示效果的区别及转换过程动画.视觉状态管理主要包括VisualStates(视觉状态),VisualStateGroups(视觉状态组)和VisualTransitions（视觉过度转换）.VisualStates是指控件在不同状态下显示的效果,如Button控件默认就包含(Normal,MouseOver,Pressed,Disabled,Unfocused,Focused)六种状态.Visual State Groups是为有互斥效果的控件提供的,对于相同的视觉状态组是互斥的,对于不同的视觉状态组是不互斥的,Visual Transitions是视觉状态切换时的过度的动画效果.<br>VisualStateManager通过在控件上设置VisualStateManager.VisualStateGroups附加属性向控件添加VisualStates和VisualTransitions.VisualStates是VisualState的集合,里面定义了多个VisualState表示控件在不同状态下的视觉表现效果,使用了Storyboard故事板属性来实现当前控件状态的转换,VisualTransitions是VisualTransition的集合,但是VisualTransitions不是必须的,如果控件在不同状态之间转换的时候不需要动画效果,就可以省略掉VisualTransitions.VisualTransition主要有三个属性:From(当前的状态),To(转换的状态)和GeneratedDuration(转换时间).状态的转换是通过调用VisualStateManager类的GoToState方法来实现的.<br>VisualStateManager的Xaml语法如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button Content=<span class="string">&quot;Hello World&quot;</span> LostFocus=<span class="string">&quot;Button_LostFocus&quot;</span> Tapped=<span class="string">&quot;Button_Tapped&quot;</span>&gt;</span><br><span class="line">                   &lt;Button.Template&gt;</span><br><span class="line">                       &lt;ControlTemplate TargetType=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                           &lt;Border&gt;</span><br><span class="line">                               &lt;VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                                   &lt;VisualStateGroup x:Name=<span class="string">&quot;CommonStates&quot;</span>&gt;</span><br><span class="line">                                       &lt;VisualStateGroup.Transitions&gt;</span><br><span class="line">                                           &lt;VisualTransition From=<span class="string">&quot;Test1&quot;</span> To=<span class="string">&quot;Test2&quot;</span> GeneratedDuration=<span class="string">&quot;0:0:1.5&quot;</span>&gt;</span><br><span class="line">                                               &lt;Storyboard&gt;</span><br><span class="line">                                                   </span><br><span class="line">                                               &lt;/Storyboard&gt;</span><br><span class="line">                                           &lt;/VisualTransition&gt;</span><br><span class="line">                                       &lt;/VisualStateGroup.Transitions&gt;</span><br><span class="line">                                       &lt;!--创建状态Test1把Border背景的颜色改成红色--&gt;</span><br><span class="line">                                       &lt;VisualState x:Name=<span class="string">&quot;Test1&quot;</span>&gt;</span><br><span class="line">                                           &lt;Storyboard&gt;</span><br><span class="line">                                               &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                           &lt;/Storyboard&gt;</span><br><span class="line">                                       &lt;/VisualState&gt;</span><br><span class="line">                                       &lt;!--创建状态Test2把Border背景的颜色改成蓝色--&gt;</span><br><span class="line">                                       </span><br><span class="line">                                           &lt;VisualState x:Name=<span class="string">&quot;Test2&quot;</span>&gt;</span><br><span class="line">                                           &lt;Storyboard&gt;</span><br><span class="line">                                               &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                                           &lt;/Storyboard&gt;</span><br><span class="line">                                       &lt;/VisualState&gt;</span><br><span class="line">                                   &lt;/VisualStateGroup&gt;</span><br><span class="line">                               &lt;/VisualStateManager.VisualStateGroups&gt;</span><br><span class="line"></span><br><span class="line">                               &lt;Border.Background&gt;</span><br><span class="line">                                   &lt;!--定义Border背景的颜色,用于测试不同状态的显示效果--&gt;</span><br><span class="line">                                   &lt;SolidColorBrush x:Name=<span class="string">&quot;BorderBrush&quot;</span> Color=<span class="string">&quot;Black&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                               &lt;/Border.Background&gt;</span><br><span class="line">                               &lt;Grid&gt;</span><br><span class="line">                                   &lt;Ellipse x:Name=<span class="string">&quot;ellipse19&quot;</span> Width=<span class="string">&quot;&#123;TemplateBinding Button.Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;TemplateBinding Height&#125;&quot;</span> Fill=<span class="string">&quot;&#123;TemplateBinding Button.Background&#125;&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                   &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                              Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                                   &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                               &lt;/Grid&gt;</span><br><span class="line">                           &lt;/Border&gt;</span><br><span class="line">                       &lt;/ControlTemplate&gt;</span><br><span class="line">                   &lt;/Button.Template&gt;</span><br><span class="line">               &lt;/Button&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 跳转到状态Test1</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_LostFocus(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           VisualStateManager.GoToState(sender as Button,<span class="string">&quot;Test1&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 跳转到状态Test2</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_Tapped(object sender, TappedRoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           VisualStateManager.GoToState(sender as Button,<span class="string">&quot;Test2&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>10.24.数据模板(DataTemplate)<br>DateTemplate和ControlTemplate所负责的任务是不一样的,ControlTemplate用于描述控件本身,而DataTemplate用于描述控件的数据对象的视觉格式.这两者并不是毫无关联,相反它们通常需要合作完成一些工作.在控件的模板上这两者有着非常微妙的关系,可以利用DataTemplate去辅助ControlTemplate实现一些效果.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button Content=<span class="string">&quot;Hello World&quot;</span> LostFocus=<span class="string">&quot;Button_LostFocus&quot;</span> Tapped=<span class="string">&quot;Button_Tapped&quot;</span>&gt;</span><br><span class="line">                  &lt;Button.Template&gt;</span><br><span class="line">                      &lt;ControlTemplate TargetType=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                          &lt;Border&gt;</span><br><span class="line">                              &lt;VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                                  &lt;VisualStateGroup&gt;</span><br><span class="line">                                      &lt;VisualStateGroup.Transitions&gt;</span><br><span class="line">                                          &lt;!--状态Test1转换为状态Test2的颜色变化动画--&gt;</span><br><span class="line">                                          &lt;VisualTransition From=<span class="string">&quot;Test1&quot;</span> To=<span class="string">&quot;Test2&quot;</span> GeneratedDuration=<span class="string">&quot;0:0:1.5&quot;</span>&gt;</span><br><span class="line">                                              &lt;Storyboard&gt;</span><br><span class="line">                                                  </span><br><span class="line">                                              &lt;/Storyboard&gt;</span><br><span class="line">                                          &lt;/VisualTransition&gt;</span><br><span class="line">                                         </span><br><span class="line">                                      &lt;/VisualStateGroup.Transitions&gt;</span><br><span class="line">                                      &lt;!--创建状态Test1把Border背景的颜色改成红色--&gt;</span><br><span class="line">                                      &lt;VisualState x:Name=<span class="string">&quot;Test3&quot;</span>&gt;</span><br><span class="line">                                          &lt;Storyboard&gt;</span><br><span class="line">                                              &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                          &lt;/Storyboard&gt;</span><br><span class="line">                                          </span><br><span class="line">                                      &lt;/VisualState&gt;</span><br><span class="line">                                      &lt;!--创建状态Test2把Border背景的颜色改成蓝色--&gt;</span><br><span class="line">                                      &lt;VisualState x:Name=<span class="string">&quot;Test4&quot;</span>&gt;</span><br><span class="line">                                          &lt;Storyboard&gt;</span><br><span class="line">                                              &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                                          &lt;/Storyboard&gt;</span><br><span class="line">                                      &lt;/VisualState&gt;</span><br><span class="line">                                      </span><br><span class="line">                                  &lt;/VisualStateGroup&gt;</span><br><span class="line">                              &lt;/VisualStateManager.VisualStateGroups&gt;</span><br><span class="line"></span><br><span class="line">                              &lt;Border.Background&gt;</span><br><span class="line">                                  &lt;SolidColorBrush x:Name=<span class="string">&quot;BorderBrush1&quot;</span></span><br><span class="line">                                                   Color=<span class="string">&quot;Black&quot;</span>/&gt;</span><br><span class="line">                              &lt;/Border.Background&gt;</span><br><span class="line">                              &lt;Grid&gt;</span><br><span class="line">                                  &lt;Ellipse x:Name=<span class="string">&quot;ellipse20&quot;</span> Width=<span class="string">&quot;&#123;Binding Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;Binding Height&#125;&quot;</span></span><br><span class="line">                                           Fill=<span class="string">&quot;&#123;Binding Background&#125;&quot;</span></span><br><span class="line">                                           Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                  &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                             Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span>/&gt;</span><br><span class="line">                                  &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span>/&gt;</span><br><span class="line">                                  </span><br><span class="line">                              &lt;/Grid&gt;</span><br><span class="line">                          &lt;/Border&gt;</span><br><span class="line">                      &lt;/ControlTemplate&gt;</span><br><span class="line">                  &lt;/Button.Template&gt;</span><br><span class="line">              &lt;/Button&gt;</span><br></pre></td></tr></table></figure><p>10.25.ItemTemplate,ContentTemplate和DataTemplate<br>ContentControl类是内容控件的基类,如Button,CheckBox,最明显的特征是这个控件有Content属性,具有Content属性的系统控件都是ContentControl的子类,ItemsControl类是列表控件的基类,如ListBox,它和ContentControl类类似,只不过ContentControl类是单项内容,ItemsControl是多项内容.<br>所有继承自ContentControl内容控件的ContentTemplate属性和所有继承自ItemsControl列表控件的ItemTemplate属性,都是DataTemplate类型,意思就是可以通过DataTemplate定义ContentControl和ItemsControl的控件的UI效果和数据显示.<br>10.26.数据模板的使用<br>DataTemplate是一种可视化的数据模板,其强大的作用在于可以把数据通过绑定的方式展现在控件上.<br>用DataTemplate去实现UI控件的内容显示,其实DataTemplate最主要的作用并不是去取代ControlTemplate的样式定义,而是通过数据绑定把数据控件的数据源信息展现到控件上.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;Style x:Name=<span class="string">&quot;ItemsControlStyle&quot;</span> TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">            &lt;Setter Property=<span class="string">&quot;Template&quot;</span>&gt;</span><br><span class="line">                &lt;Setter.Value&gt;</span><br><span class="line">                    &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                        &lt;ScrollViewer BorderBrush=<span class="string">&quot;Red&quot;</span> BorderThickness=<span class="string">&quot;6&quot;</span>&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Background=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                                &lt;Border BorderBrush=<span class="string">&quot;Yellow&quot;</span> BorderThickness=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">                                    &lt;ItemsPresenter/&gt;</span><br><span class="line">                                &lt;/Border&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/ScrollViewer&gt;</span><br><span class="line">                    &lt;/ControlTemplate&gt;</span><br><span class="line">                &lt;/Setter.Value&gt;</span><br><span class="line">            &lt;/Setter&gt;</span><br><span class="line">        &lt;/Style&gt;</span><br><span class="line"> ObservableCollection&lt;People&gt; peoples = new ObservableCollection&lt;People&gt;();</span><br><span class="line">            peoples.Add(new <span class="function"><span class="title">People</span></span>() &#123; FirstName=<span class="string">&quot;lee2&quot;</span>,LastName=<span class="string">&quot;Terry2&quot;</span>&#125;);</span><br><span class="line">            peoples.Add(new <span class="function"><span class="title">People</span></span>() &#123; FirstName=<span class="string">&quot;lee3&quot;</span>,LastName=<span class="string">&quot;Terry3&quot;</span>&#125;);</span><br><span class="line">            peoples.Add(new <span class="function"><span class="title">People</span></span>() &#123; FirstName = <span class="string">&quot;lee4&quot;</span>, LastName = <span class="string">&quot;Terry4&quot;</span> &#125;);</span><br><span class="line">            peoples.Add(new <span class="function"><span class="title">People</span></span>() &#123; FirstName = <span class="string">&quot;lee5&quot;</span>, LastName = <span class="string">&quot;Terry5&quot;</span> &#125;);</span><br><span class="line">            itemsControl.ItemsSource = peoples;</span><br><span class="line">            itemsControl1.ItemsSource = peoples; </span><br><span class="line">  &lt;ItemsControl x:Name=<span class="string">&quot;itemsControl1&quot;</span> ItemTemplate=<span class="string">&quot;&#123;StaticResource PersonNameDataTemplate&#125;&quot;</span> Style=<span class="string">&quot;&#123;StaticResource ItemsControlStyle&#125;&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>10.27.读取和更换数据模板<br>动态更换样式<br>1.定义3个DataTemplate资源,一个是非选中状态,一个是选中状态,还有一个是默认的状态,其实默认状态和非选中状态是一样的,但是默认状态的数据项样式不能在C#中再次调用.在两个模板中都添加了Tap事件,用户捕获点击事件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;ListBox x:Name=<span class="string">&quot;listbox&quot;</span> ItemTemplate=<span class="string">&quot;&#123;StaticResource dataTemplateDefaultKey&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;!--选中数据项的样式--&gt;</span><br><span class="line">       &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateSelectKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateSelectName&quot;</span>&gt;</span><br><span class="line">           &lt;Grid Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span> Background=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">           &lt;/Grid&gt;</span><br><span class="line">       &lt;/DataTemplate&gt;</span><br><span class="line">       &lt;!--默认数据项的样式,注意默认的数据项样式不能在C<span class="comment">#中再次调用--&gt;</span></span><br><span class="line">       &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateDefaultKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateDefaultName&quot;</span>&gt;</span><br><span class="line">           &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span>&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span>/&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;,&quot;</span>/&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span>/&gt;</span><br><span class="line">           &lt;/StackPanel&gt;</span><br><span class="line">       &lt;/DataTemplate&gt;</span><br><span class="line">       &lt;!--非选中数据项的样式--&gt;</span><br><span class="line">       &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateNoSelectKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateNoSelectName&quot;</span>&gt;</span><br><span class="line">           &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span>&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span>/&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;,&quot;</span>/&gt;</span><br><span class="line">               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span>/&gt;</span><br><span class="line">           &lt;/StackPanel&gt;</span><br><span class="line">       &lt;/DataTemplate&gt;</span><br><span class="line"> private void StackPanel_Tapped(object sender, TappedRoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //获取到的对象是ListBoxItem</span><br><span class="line">           ListBoxItem myListBoxItem = (ListBoxItem)(listbox.ContainerFromItem((sender as Panel).DataContext));</span><br><span class="line">           //在ListBoxItem中查找ContentPresenter</span><br><span class="line">           ContentPresenter myContentPresenter = FindVisualChild&lt;ContentPresenter&gt;(myListBoxItem);</span><br><span class="line">           //ContentPresenter myContentPresenter = (ContentPresenter)(listbox.ContainerFromItem((sender as Panel).DataContext));</span><br><span class="line">           <span class="keyword">if</span> (myContentPresenter.ContentTemplate.Equals(dataTemplateSelectName)) &#123; </span><br><span class="line">               myContentPresenter.ContentTemplate = dataTemplateNoSelectName;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               myContentPresenter.ContentTemplate = dataTemplateSelectName;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private childItem FindVisualChild&lt;childItem&gt;(DependencyObject obj) <span class="built_in">where</span> childItem:DependencyObject</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span> (int i = 0; i &lt; VisualTreeHelper.GetChildrenCount(obj); i++)</span><br><span class="line">           &#123;</span><br><span class="line">               DependencyObject child=VisualTreeHelper.GetChild(obj, i);</span><br><span class="line">               <span class="keyword">if</span> (child != null &amp;&amp; child is childItem)</span><br><span class="line">                   <span class="built_in">return</span> (childItem)child;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   childItem childOfChild=FindVisualChild&lt;childItem&gt;(child);</span><br><span class="line">                   <span class="keyword">if</span> (childOfChild != null)</span><br><span class="line">                       <span class="built_in">return</span> childOfChild;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">return</span> null;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><p>绑定四个组件:绑定目标对象,目标属性,绑定源,以及要使用的绑定源中的值的路径.<br>例如,如果要将TextBox的内容绑定到Employee对象的Name属性,则目标对象是TextBox,目标属性是Text，要使用的值是Name,源对象是Employee对象.<br>11.12.创建绑定<br>1.定义源对象<br>2.设置DataContext属性绑定到源对象<br>3.使用Binding标记扩展来绑定数据源对象的属性.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> public class MyData &#123; </span><br><span class="line">        public string Title &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  public MyData myData = new MyData &#123; Title = <span class="string">&quot;这是绑定的标题!&quot;</span> &#125;;</span><br><span class="line">this.DataContext = myData;</span><br><span class="line"> &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> Margin=<span class="string">&quot;12,100,0,28&quot;</span></span><br><span class="line">                               FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br></pre></td></tr></table></figure><p>11.13.用元素值绑定<br>用元素值绑定就是将某一个控件元素作为绑定的数据源,绑定的对象是控件元素,而绑定的数据源同时也是控件元素,这种绑定的方式,可以轻松实现两个控件之间的值的交互影响,用元素值进行绑定是通过设置Binding的ElementName属性和Path属性来实现的,ElementName属性赋值为数据源控件的Name的值,Path属性赋值则赋值为数据源控件的某个属性,这个属性就是数据源控件的一个数据变化的反映<br>2.在C#中可以通过类似语法指定属性的子属性,例如,字句Path=ShoppingCart.Order设置与对象或属性ShoppingCart的Order属性的绑定,也就是说ShoppingCart是绑定数据源的属性,而Order则是ShoppingCart的属性,相当于是数据源的属性的属性.<br>3.若要绑定到附加属性,应在附加属性周围放置圆括号,例如,若要绑定到附加属性Grid.Row,则语法是Path=(Grid.Row).<br>4.可以使用数组的索引器来实现数据的绑定.例如,字句Path=ShoppongCart[0]将绑定设置为与数组属性的内部对应的索引的数值.<br>5.可以在Path字句中混合索引器和子属性,例如,Path=ShoppingCart.ShippingInfo[MailingAddress.Street].<br>6.在索引器内部,可以由多个由逗号分隔的索引器参数.可以使用圆括号指定每个参数的类型.Path=”[(sys:Int32)42,(sys:Int32)24]”,其中sys映射到System命名空间.<br>7.如果源为集合视图,则可以用斜杠”/“指定当前项,例如,字句Path=/用于设置到视图中当前项的绑定,如果源为集合,则此语法指定默认集合视图的当前项.<br>8.可以结合使用属性名和斜杠来遍历作为集合的属性,例如,Path=/Offices/ManagerName指定源集合的当前项,该源集合包含作为集合的Offices属性,其当前项是一个包含ManagerName属性的对象.<br>9.也可以使用句点”.”路径绑定到当前源.例如,Text=”{Binding}”等效于Text=”{Binding Path=.}”<br>下面给出控制圆的半径的示例,圆形的半径绑定到Slider控件的值,从而实现通过即时改变Slider控件的值来改变Slider控件的值来改变圆的大小.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;圆形的半径会根据slider控件的值而改变&quot;</span>/&gt;</span><br><span class="line">                    &lt;Slider Name=<span class="string">&quot;slider&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;半径为:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Name=<span class="string">&quot;txtblk&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> FontSize=<span class="string">&quot;48&quot;</span>/&gt;</span><br><span class="line">                    &lt;Ellipse Height=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Width=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">``</span><br><span class="line">11.14.三种绑定模式</span><br><span class="line">1.OneTime</span><br><span class="line">OneTime表示一次绑定,在绑定创建时使用数据源更新目标,适用于只显示数据而不进行数据的更新.OneTime绑定会导致源属性初始化目标属性,但不传播后续更改.</span><br><span class="line">2.OneWay</span><br><span class="line">OneWay表示单向绑定,在绑定创建时或源数据发生变化时更新到目标,适用于显示变化的数据,这是默认模式.OneWay绑定导致对源属性的更改会自动更新目标属性,但是对目标属性的更改不会传播回源属性.此绑定类型适用于绑定的控件为隐式只读控件的情况,如果无需监视目标属性的更改,则使用OneWay的绑定模式可避免TwoWay绑定模式的系统开销</span><br><span class="line">3.TwoWay</span><br><span class="line">TwoWay表示双向绑定,可以同时更新源数据和目标数据,TwoWay绑定导致对源属性的更改会自动更新目标属性,而对目标属性的更改也会自动更新源属性.此绑定类型适用于输入框或其他完全交互式UI方案.大多数UI元素内部实现的属性都默认为OneWay绑定,但是一些依赖项属性,通常为用户可编辑的控件的属性,如TextBox的Text属性和CheckBox的IsChecked属性,默认为TwoWay绑定.</span><br><span class="line">下面演示三种绑定模式的区别</span><br><span class="line">``` bash</span><br><span class="line">&lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Slider x:Name=<span class="string">&quot;slider&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--OneTime--&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;41&quot;</span> Text=<span class="string">&quot;OneTime&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;112&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=OneTime&#125;&quot;</span> Width=<span class="string">&quot;269&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;46&quot;</span> Text=<span class="string">&quot;OneWay&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;99&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--OneWay--&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=OneWay&#125;&quot;</span> Width=<span class="string">&quot;269&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Height=<span class="string">&quot;40&quot;</span> FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;TwoWay&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;94&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--TwoWay--&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=TwoWay&#125;&quot;</span> Width=<span class="string">&quot;268&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;43&quot;</span> Text=<span class="string">&quot;slider的值:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;43&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Width=<span class="string">&quot;185&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br></pre></td></tr></table></figure><p>11.15.更改通知</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public class MyData : INotifyPropertyChanged</span><br><span class="line">    &#123;</span><br><span class="line">        private string title;</span><br><span class="line"></span><br><span class="line">        public string Title &#123; get =&gt; title;</span><br><span class="line">            <span class="built_in">set</span> &#123; title = value;</span><br><span class="line">                OnPropertyChanged(<span class="string">&quot;Title&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void OnPropertyChanged(string name)</span><br><span class="line">        &#123;</span><br><span class="line">            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public event PropertyChangedEventHandler PropertyChanged;</span><br><span class="line">    &#125;</span><br><span class="line">  private void Button_Click_19(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            myData.Title = <span class="string">&quot;New Title&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>11.16.绑定数据转换<br>绑定数据转换需要通过Binding.Converter属性表示获取或设置转换器对象.当数据在源和目标之间传递时,绑定引擎调用该对象来修改数据.可以对任何的绑定设置一个转换器,通过创建一个类和实现IValueConverter接口来针对每个具体的应用场景自定义该转换器.所以转换器是派生自IValueConverter接口的类.它包含两种方法:Convert和ConvertBack方法.如果为绑定定义了Converter参数,则绑定引擎会调用Convert和ConvertBack方法.从源传递数据时,绑定引擎调用Convert并将返回的数据传递给目标,从目标传递数据时,绑定引擎调用ConvertBack并将返回的数据传递给源,如果只是要获取从数据源到绑定目标的单向绑定,只需要实现Convert方法.实现了转换器的逻辑之后,若要在绑定中使用转换器,首先要创建转换器类的实例.将转换器类的实例设置为程序中资源的XAML.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">    public class Clock : INotifyPropertyChanged</span><br><span class="line">    &#123;</span><br><span class="line">        int hour, minute, second;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">Clock</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            //h获取当前的时间</span><br><span class="line">            Tmr_Tick(null, null);</span><br><span class="line">            //使用定时器来触发时间来改变类的时分秒属性</span><br><span class="line">            //每0.1秒获取一次当前的时间</span><br><span class="line">            DispatcherTimer tmr = new DispatcherTimer();</span><br><span class="line">            tmr.Interval = TimeSpan.FromSeconds(0.1);</span><br><span class="line">            tmr.Tick += Tmr_Tick;</span><br><span class="line">            tmr.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public int Hour</span><br><span class="line">        &#123;</span><br><span class="line">            protected <span class="built_in">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (value != hour)</span><br><span class="line">                &#123;</span><br><span class="line">                    hour = value;</span><br><span class="line">                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(<span class="string">&quot;Hour&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            get</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> hour;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //分钟属性</span><br><span class="line">        public int Minute</span><br><span class="line">        &#123;</span><br><span class="line">            get =&gt; minute;</span><br><span class="line">            <span class="built_in">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (minute != value)</span><br><span class="line">                &#123;</span><br><span class="line">                    minute = value;</span><br><span class="line">                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(<span class="string">&quot;Minute&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        public int Second &#123; get =&gt; second;</span><br><span class="line">            <span class="built_in">set</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (second != value)</span><br><span class="line">                &#123;</span><br><span class="line">                    second = value;</span><br><span class="line">                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(<span class="string">&quot;Second&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 时间触发器</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void Tmr_Tick(object sender, object e)</span><br><span class="line">        &#123;</span><br><span class="line">            DateTime dt=DateTime.Now;</span><br><span class="line">            Hour= dt.Hour;</span><br><span class="line">            Minute= dt.Minute;</span><br><span class="line">            Second= dt.Second;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 属性值改变事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public event PropertyChangedEventHandler PropertyChanged;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  public class HoursToDayStringConverter:IValueConverter</span><br><span class="line">    &#123;</span><br><span class="line">        public object Convert(object value, Type targetType, object parameter, string language)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (int.Parse(value.ToString())&lt;12)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;Dear Master,Good Morning&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (int.Parse(value.ToString())&gt;12)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;Dear Master,Good Afternoon&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="string">&quot;Dear Master,Good &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public object ConvertBack(object value, Type targetType, object parameter, string language)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">return</span> DateTime.Now.Hour;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;Grid&gt;</span><br><span class="line">                    &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span> DataContext=<span class="string">&quot;&#123;StaticResource clock&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;30&quot;</span> Text=<span class="string">&quot;&#123;Binding Hour,Converter=&#123;StaticResource booleanToDayString&#125;&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;30&quot;</span> Text=<span class="string">&quot;现在的时间是:&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Hour&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;小时&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Minute&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;分钟&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Second&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;秒&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line"> &lt;models:Clock x:Key=<span class="string">&quot;clock&quot;</span>/&gt;</span><br><span class="line">        &lt;converters:HoursToDayStringConverter x:Key=<span class="string">&quot;booleanToDayString&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>11.2.绑定集合<br>绑定目标:ItemsControl对象(ListView等列表控件)ItemsSource属性.<br>绑定对象:OneWay<br>数据源:集合对象 值<br>若要将列表控件绑定到集合对象,应使用列表控件自带的ItemsSource属性,而不是DataContext属性.<br>可以将ItemSource属性视为列表控件的内容,为列表项提供数据,还需要注意的是,绑定是OneWay模式,因为ItemSource属性默认情况下支持OneWay绑定.<br>11.21.数据集合<br>在实现列表绑定集合之前,必须要选择使用一个数据集合类或自定义实现一个数据集合类才能实例化出数据源的集合对象,不同的数据集合所实现的绑定的效果是有差异的.<br>1.ObservaleCollection<T>集合.<br>ObservableCollection<T>类是实现了INotifyCollectionChanged接口的数据集合类,使用ObservableCollection<T>类的实例与列表控件及进行绑定可以动态地往数据源地集合对象增加或删除数据,并且可以把这种变更通知到UI上,这就是ObservableCollection<T>类最大地特点.<br>2.其他的实现了IEnumerable接口的集合,如List<T>,Collection<T>等.<br>凡是实现了IEnumerable接口的集合都可以作为列表绑定的数据集合,给列表的ItemSource属性赋值,但是没有实现INotifyCollectionChanged接口的集合就无法设置动态绑定,所以List<T>,Collection<T>等集合适合于绑定静态数据,也就是绑定了列表控件之后就不需要再对项目进行插入和删除操作.<br>3.自定义实现集合.<br>当win10内置集合类无法满足需求时,可以通过自定义集合来封装数据绑定的集合的逻辑,自定义集合类就需要根据所需的功能去实现IEnumerable,INotifyCollectionChanged等相关的接口.最常用的实现方案是使用IList接口,因为它提供可以按索引逐个访问的对象的非泛型集合,因而可提供最佳性能.<br>11.22.绑定列表控件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public class Food</span><br><span class="line">   &#123;</span><br><span class="line">       public string Name &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">       public string Description &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">       public string IconUri &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">       public string Type &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">public List&lt;Food&gt; AllFood &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">       public void <span class="function"><span class="title">AddFruits</span></span>() &#123;</span><br><span class="line">           AllFood = new List&lt;Food&gt;();</span><br><span class="line">           Food item0 = new <span class="function"><span class="title">Food</span></span>() &#123; Name = <span class="string">&quot;Tomato&quot;</span>, IconUri = <span class="string">&quot;Images/Tomato.png&quot;</span>, Type = <span class="string">&quot;Healthy&quot;</span>, Description = <span class="string">&quot;Tomato tastes delicious. &quot;</span> &#125;;</span><br><span class="line">           Food item1 = new <span class="function"><span class="title">Food</span></span>() &#123; Name = <span class="string">&quot;Beer&quot;</span>, IconUri = <span class="string">&quot;Images/Beer.png&quot;</span>, Type = <span class="string">&quot;NotDetermined&quot;</span>, Description = <span class="string">&quot;Dont konw Beer is Delicious.&quot;</span> &#125;;</span><br><span class="line">           Food item2 = new <span class="function"><span class="title">Food</span></span>() &#123; Name = <span class="string">&quot;fries&quot;</span>, IconUri = <span class="string">&quot;Images/fries.png&quot;</span>, Type = <span class="string">&quot;Unhealthy&quot;</span>, Description = <span class="string">&quot;This is Unhealthy food.&quot;</span> &#125;;</span><br><span class="line">           AllFood.Add(item0);</span><br><span class="line">           AllFood.Add(item1);</span><br><span class="line">           AllFood.Add(item2);</span><br><span class="line">           listviewItemtemplate.ItemsSource = AllFood;</span><br><span class="line">       &#125;</span><br><span class="line">&lt;ListView x:Name=<span class="string">&quot;listviewItemtemplate&quot;</span>&gt;</span><br><span class="line">                   &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                       &lt;!--列表的ItemTemplate属性是一个DataTemplate类型--&gt;</span><br><span class="line">                       &lt;!--创建一个DataTemplate的元素对象--&gt;</span><br><span class="line">                       &lt;DataTemplate&gt;</span><br><span class="line">                           &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                               &lt;!--绑定Food类的IconUri属性--&gt;</span><br><span class="line">                               &lt;Image Source=<span class="string">&quot;&#123;Binding IconUri&#125;&quot;</span> Stretch=<span class="string">&quot;None&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> FontSize=<span class="string">&quot;40&quot;</span> Margin=<span class="string">&quot;24 0 24 0&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Description&#125;&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;/DataTemplate&gt;</span><br><span class="line">                   &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">               &lt;/ListView&gt;</span><br></pre></td></tr></table></figure><p>11.23.绑定ObservableCollection<T>集合<br>在列表绑定中实现了把集合的数据通过数据模板展示到列表上,使用DataTemplate可以很灵活的去实现列表项的显示效果,但是这个列表却是一个静态的列表,也就是说列表的数据并不会增加或减少.如果要实现一个动态8绑定的列表,就需要用到ObservableCollection<T>集合作为数据的绑定源.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid&gt;</span><br><span class="line">                   &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                   &lt;StackPanel Margin=<span class="string">&quot;12,60,0,28&quot;</span>&gt;</span><br><span class="line">                       &lt;Button Content=<span class="string">&quot;AddItem&quot;</span> Click=<span class="string">&quot;Button_Click_20&quot;</span>/&gt;</span><br><span class="line">                       &lt;Button Content=<span class="string">&quot;RemoveItem&quot;</span> Click=<span class="string">&quot;Button_Click_21&quot;</span>/&gt;</span><br><span class="line">                       </span><br><span class="line">                   &lt;/StackPanel&gt;</span><br><span class="line">                   &lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                       &lt;ListView x:Name=<span class="string">&quot;Obser&quot;</span>&gt;</span><br><span class="line">                           &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                               &lt;DataTemplate&gt;</span><br><span class="line">                                   &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                                       &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderId&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                       &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Width=<span class="string">&quot;280&quot;</span>/&gt;</span><br><span class="line">                                   &lt;/StackPanel&gt;</span><br><span class="line">                               &lt;/DataTemplate&gt;</span><br><span class="line">                           &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                       &lt;/ListView&gt;</span><br><span class="line">                   &lt;/Grid&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">ObservableCollection&lt;OrderModel&gt; OrderModels=new ObservableCollection&lt;OrderModel&gt;();</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// Add</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_Click_20(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Random random= new Random();</span><br><span class="line">           OrderModels.Add(new OrderModel &#123; OrderId = random.Next(1000), OrderName = <span class="string">&quot;OrderName&quot;</span> + random.Next(1000) &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void Button_Click_21(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (Obser.SelectedItem != null) &#123; </span><br><span class="line">               OrderModel orderModel= Obser.SelectedItem as OrderModel;</span><br><span class="line">               <span class="keyword">if</span> (OrderModels.Contains(orderModel))</span><br><span class="line">               &#123;</span><br><span class="line">                   OrderModels.Remove(orderModel);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"> listviewItemtemplate.ItemsSource = AllFood;</span><br><span class="line">           Obser.ItemsSource = OrderModels;</span><br></pre></td></tr></table></figure><p>11.24.绑定自定义集合<br>实现自定义的集合最常用的就是从IList接口派生实现自定义集合类.<br>IList接口表示可按照索引单独访问的对象的非泛型集合.IList接口是从ICollection接口派生出来的,并且是所有非泛型列表的基接口,ICollection则是从IEnumerable接口派生出来的,ICollection接口是定义所有非泛型集合的大小,枚举数和同步方法,IEnumerable接口是指公开枚举数,该枚举数支持在非泛型集合上进行简单迭代.所以IList接口同时具备ICollection接口和IEnumerable接口的共性,IEnumerable只包含一个方法,GetEnumerator,返回IEnumerator,IEnumerator可以通过集合循环显示Current属性和MoveNext和Rest方法.<br>ICollecion接口方法和属性<br>Count 该属性可确定集合中的元素个数,它返回的值与Length属性相同.<br>IsSychoronized 该属性确定集合是否是纯种安全的,对于数组,这个属性总是返回false,对于同步访问,SyncRoot属性可以用于线程安全的访问.<br>CopyTo 该方法可以将数组的元素复制到现有的数组中,它类似于表态方法Array.Copy().<br>IList接口方法和属性<br>Add 该方法用于在集合中添加元素,对于数组,该方法会抛出NotSupportedException异常.<br>Clear 该方法会清除数组中的所有元素,值类型设置为0,引用类型设置为NULL<br>Contains 该方法可以确定某个元素是否在数组中,其返回值是true或false.这个方法会对数组中的所有元素进行线性搜索,直到找到所需元素为止.<br>IndexOf 该方法与Contains方法类似,也是对数组中的所有元素进行线性搜索,不同的是IndexOf方法会返回所找到的第一个元素的索引.<br>Insert,Remove RemoveAt 对于集合,Insert方法用于插入元素,Remove和RemoveAt可删除元素.对于数组,这些方法都抛出NotSupportedException异常.<br>IsFixedSize 数组的大小总是固定的,所以这个属性问题返回true.<br>IsReadOnly 数组总是可读/写的,所以这个属性返回false.<br>Item(表现显示为this[int index])该属性可以用整形索引访问数组.<br>只要实现了IList接口的集合类都可以与列表控件进行绑定,所以需要自定义一个集合类来实现IList接口,因为IList接口是从ICollection接口和IEnumerable接口派生出来的,所以这三个接口的方法都需要在自定义的集合类里面实现.在ICollection接口里面,Count属性表示列表的长度,IList接口的IList.this[int index]属性表示列表某个索引的数据项,在自定义集合里面可以通过Count属性设置列表的长度,通过IList.this[int index]属性返回集合数据,所以,在自定义集合里面IList.this[int index]属性和Count属性是两个必须要实现的属性接口,<br>可以在IList.this[int index]属性的实现里面处理集合项生成的逻辑.<br>下面给出自定义集合并与列表控件实现数据绑定.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">public class MyList : IList</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#region MyRegion</span></span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 在这个属性里面,index表示集合项的索引,通过索引返回该索引对应的对象</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;index&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        public object this[int index] &#123;</span><br><span class="line">            get &#123; </span><br><span class="line">            //随机生成一个OrderModel对象并返回</span><br><span class="line">            Random random=new Random();</span><br><span class="line">                <span class="built_in">return</span> new OrderModel &#123; OrderId = random.Next(1000), OrderName = <span class="string">&quot;OrderName&quot;</span> + random.Next(1000) &#125;;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="built_in">set</span> =&gt; throw new NotImplementedException(); &#125;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        public bool IsFixedSize =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">        public bool IsReadOnly =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">        public int Count =&gt; 10;</span><br><span class="line"></span><br><span class="line">        public bool IsSynchronized =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">        public object SyncRoot =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">        public int Add(object value)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">Clear</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public bool Contains(object value)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void CopyTo(Array array, int index)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public IEnumerator <span class="function"><span class="title">GetEnumerator</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public int IndexOf(object value)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Insert(int index, object value)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Remove(object value)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void RemoveAt(int index)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;ListView x:Name=<span class="string">&quot;Ilist&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderId&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Width=<span class="string">&quot;280&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line"> Ilist.ItemsSource =new MyList();</span><br></pre></td></tr></table></figure><p>12.列表编程<br>12.1.列表控件的使用<br>在Win10中相关的列表控件有ItemsControl控件,ListBox控件,ListView控件,GridView控件和SemanticZoom控件则是更高级的列表控件.最简单展示数据:ItemsControl,实现列表的选择等功能:ListView,实现网格布局:GridView,如果要实现分组索引的列表,可以选用SemanticZoom控件.<br>12.11.ItemsControl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;ItemsControl x:Name=<span class="string">&quot;itemsControl2&quot;</span>&gt;</span><br><span class="line">                   &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                       &lt;DataTemplate&gt;</span><br><span class="line">                           &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;/DataTemplate&gt;</span><br><span class="line">                   &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">               &lt;/ItemsControl&gt;</span><br><span class="line">//创建一个有100个数据项的集合绑定到列表</span><br><span class="line">           List&lt;Item&gt; items= new List&lt;Item&gt;();</span><br><span class="line">           <span class="keyword">for</span> (int i = 0; i &lt; 100; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               items.Add(new Item &#123; FirstName=<span class="string">&quot;Li&quot;</span>+i,LastName=<span class="string">&quot;Lei&quot;</span>+i&#125;);</span><br><span class="line">           &#125;</span><br><span class="line">           itemsControl2.ItemsSource = items;</span><br></pre></td></tr></table></figure><p>2.让ItemsControl控件滚动起来<br>ItemsControl控件内置的模板是不支持滚动的,如果要让ItemsControl的数据滚动起来,需要自定义ItemsControl的控件模板,把ItemsControl控件的数据项面板放在ScrollViewer控件上,就可以让列表的数据滚动起来了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;ItemsControl x:Name=<span class="string">&quot;ItemsControl3&quot;</span>&gt;</span><br><span class="line">                    &lt;ItemsControl.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                            &lt;ScrollViewer&gt;</span><br><span class="line">                                &lt;ItemsPresenter/&gt;</span><br><span class="line">                            &lt;/ScrollViewer&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.Template&gt;</span><br><span class="line">                    &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span></span><br><span class="line">                                           FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">                &lt;/ItemsControl&gt;</span><br></pre></td></tr></table></figure><p>3.大数据量数据的绑定<br>ItemsControl控件初始化2000个数据项的时候耗费了非常多的时间.ItemsControl控件本身是不支持数据的虚拟化的,<br>还需要另外的布局处理.<br>12.12.ListBox实现下拉点击刷新列表<br>ListBox控件是在ItemsControl控件的基础上进行封装的,把列表项选择,虚拟化等功能集成在一起.<br>下面用ListBox实现一个下拉点击刷新列表的交互效果.通常当一个列表包含很多数据,可以采用这种方式来分布加载列表的数据,特别是当列表的数据从网络请求时,这种分步加载的方式优势就更加明显了.<br>1.点击按钮放哪里 通过修改ListBox控件的ControlTemplate,把Button控件放在ScrollViewer里面,然后按钮就可以跟随列表滚动,点击按钮发出刷新的逻辑.第二个问题解决方式是使用ObservableCollection<T>集合类型来存储集合的数据,<br>跟列表进行绑定,ObservableCollection<T>表示一个动态数据集合,在添加项,移除项或刷新整个列表时,此集合将向列表提供通知从而可以刷新列表.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;ListBox ItemsSource=<span class="string">&quot;&#123;Binding Items&#125;&quot;</span> SelectionChanged=<span class="string">&quot;ListBox_SelectionChanged&quot;</span>&gt;</span><br><span class="line">                   &lt;ListBox.Template&gt;</span><br><span class="line">                       &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                           &lt;ScrollViewer&gt;</span><br><span class="line">                               &lt;StackPanel&gt;</span><br><span class="line">                                   &lt;ItemsPresenter/&gt;</span><br><span class="line">                                   &lt;Button Content=<span class="string">&quot;加载更多&quot;</span> Click=<span class="string">&quot;Button_Click_22&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Margin=<span class="string">&quot;12&quot;</span>/&gt;</span><br><span class="line">                                   </span><br><span class="line">                               &lt;/StackPanel&gt;</span><br><span class="line">                           &lt;/ScrollViewer&gt;</span><br><span class="line">                       &lt;/ControlTemplate&gt;</span><br><span class="line">                   &lt;/ListBox.Template&gt;</span><br><span class="line">                   &lt;ListBox.ItemTemplate&gt;</span><br><span class="line">                       &lt;DataTemplate&gt;</span><br><span class="line">                           &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;/DataTemplate&gt;</span><br><span class="line">                   &lt;/ListBox.ItemTemplate&gt;</span><br><span class="line">               &lt;/ListBox&gt;</span><br><span class="line">public ObservableCollection&lt;Item&gt; Items &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">Items = new ObservableCollection&lt;Item&gt;();</span><br><span class="line">           <span class="keyword">for</span> (int i = 0; i &lt; 5; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               Items.Add(new Item &#123; FirstName=<span class="string">&quot;Li&quot;</span>+i,LastName=<span class="string">&quot;Lei&quot;</span>+i&#125;);</span><br><span class="line">           &#125;</span><br><span class="line">           this.DataContext = this;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 按钮单击事件,加载更多的数据集合</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void Button_Click_22(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //往原来列表的集合,继续添加5个数据项,这同时触发列表UI发生变化</span><br><span class="line">           int count=Items.Count;</span><br><span class="line">           <span class="keyword">for</span> (int i = count; i &lt; count+5; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               Items.Add(new Item &#123; FirstName=<span class="string">&quot;Li&quot;</span>+i,LastName=<span class="string">&quot;Lei&quot;</span>+i&#125;);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 选中事件的处理程序</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void ListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           string selectedInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">           //获取选中的项目</span><br><span class="line">           foreach (var item <span class="keyword">in</span> e.AddedItems)</span><br><span class="line">           &#123;</span><br><span class="line">               selectedInfo += (item as Item).FirstName + (item as Item).LastName;</span><br><span class="line">           &#125;</span><br><span class="line">           await new MessageDialog(selectedInfo).ShowAsync();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>12.13.ListView实现下拉自动刷新列表<br>ListView比ListBox功能更加强大,在列表的外观上,ListView控件可以直接通过ContainerContentChanging事件来监控到相关的列表数据加载的情况,也就是说,可以通过ContainerContentChanging事件间接的获取到列表数据虚拟化的运行情况.<br>前面的章节介绍过一个使用ListBox控件判断列表滚动到底的例子.实现的原理是通过可视化树获取ListBox的ScrollViewer控件,然后根据ScrollViewer控件的垂直位移属性来判断ListBox控件什么时候滚动到底.在ListView控件里面,可以使用一种更加智能的方式来实现下拉刷新.这个例子是通过ListView控件的ContainerContentChanging事件去控制自动刷新的逻辑,因为ListView控件是对数据进行虚拟化处理的,当列表向下滚动的时候下面的数据就会不断地被实例化,当数据实例化的时候就会触发ContainerContentChanging事件.所以只需要监控当列表最后一个数据实例化的时候就可以发出数据刷新的逻辑就可以了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;ListView x:Name=<span class="string">&quot;listView&quot;</span> ItemsSource=<span class="string">&quot;&#123;Binding Items&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span></span><br><span class="line">                                           FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line"> Items = new ObservableCollection&lt;Item&gt;();</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 100; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Items.Add(new Item &#123; FirstName=<span class="string">&quot;Li&quot;</span>+i,LastName=<span class="string">&quot;Lei&quot;</span>+i&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.DataContext = this;</span><br><span class="line">            //订阅列表的ContainerContentChanging事件</span><br><span class="line">            listView.ContainerContentChanging += ListView_ContainerContentChanging;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 在这里判断刷新的时机</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;args&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void ListView_ContainerContentChanging(ListViewBase sender, ContainerContentChangingEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            //因为该事件会被多个线程进入,所以添加线程锁,控制下面的代码只能单个线程去执行</span><br><span class="line">            lock (o)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!isLoading)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (args.ItemIndex==listView.Items.Count-1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //设置IsLoading为<span class="literal">true</span>,在加载数据的过程中,禁止多次进入</span><br><span class="line">                        isLoading= <span class="literal">true</span>;</span><br><span class="line">                        //模拟后台耗时任务拉取数据的场景</span><br><span class="line">                        Task.Factory.StartNew(async () =&gt;</span><br><span class="line">                        &#123;</span><br><span class="line">                            await Task.Delay(3000);</span><br><span class="line">                            //调用UI线程添加数据</span><br><span class="line">                            await this.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                int count = Items.Count;</span><br><span class="line">                                <span class="keyword">for</span> (int i = count; i &lt; count + 50; i++)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    Items.Add(new Item &#123; FirstName = <span class="string">&quot;Li&quot;</span> + i, LastName = <span class="string">&quot;Lei&quot;</span> + i &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                                //修改加载的状态</span><br><span class="line">                                isLoading = <span class="literal">false</span>;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //线程锁的对象</span><br><span class="line">        private object o = new object();</span><br><span class="line">        //数据加载的标识</span><br><span class="line">        public bool isLoading = <span class="literal">false</span>;</span><br><span class="line">        //绑定的数据集合</span><br><span class="line">        public ObservableCollection&lt;Item&gt; Items &#123; get; <span class="built_in">set</span>; &#125;</span><br></pre></td></tr></table></figure><p>12.14.GridView实现网格列表<br>网格列表是指列表按照网格布局的方式进行布局<br>GridView控件的使用方式和ListView控件是一样的,通过ItemTemplate来设置列表项目的模板,不过在GridView控件设置ItemTemplate模板的时候要注意设置它的高度和宽度,GridView控件的布局就会按照Item实际的大小进行布局,可能导致网格布局的错乱.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> &lt;GridView x:Name=<span class="string">&quot;gridView&quot;</span>&gt;</span><br><span class="line">                    &lt;GridView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> </span><br><span class="line">                                           Width=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> </span><br><span class="line">                                           Width=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/GridView.ItemTemplate&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;GridView.ItemContainerStyle&gt;</span><br><span class="line">                        &lt;Style TargetType=<span class="string">&quot;GridViewItem&quot;</span>&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;BorderBrush&quot;</span> Value=<span class="string">&quot;Gray&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;BorderThickness&quot;</span> Value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;HorizontalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;VerticalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Style&gt;</span><br><span class="line">                    &lt;/GridView.ItemContainerStyle&gt;</span><br><span class="line">                &lt;/GridView&gt;</span><br><span class="line"> Items = new ObservableCollection&lt;Item&gt;();</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 100; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Items.Add(new Item &#123; FirstName=<span class="string">&quot;Li&quot;</span>+i,LastName=<span class="string">&quot;Lei&quot;</span>+i&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.DataContext = this;</span><br><span class="line">gridView.ItemsSource= Items;</span><br></pre></td></tr></table></figure><p>12.15.SemanticZoom实现分组列表<br>实现分组,同时会提供两个具有相同内容的不同视图,其中一个是主视图,另一个视图是可以让用户进行快速导航的分组视图.<br>SemanticZoom控件支持对GridView和ListView控件的视图效果进行缩放,在SemanticZoom中包含两个列表控件(GridView或ListView):一个控件提供放大视图,另外一个提供缩小视图,放大视图提供一个详细信息视图(ZoomedInView)以让用户查看详细信息,缩小视图提供一个缩小索引视图(ZoomedOutView)让用户快速定位要查看信息的大致范围或者分组<br>1.SemanticZoom控件的样式设置<br>SemanticZoom控件实现分组列表会比实现非分组列表复杂一些,实现分组列表还需要设置两大属性的内容:<br>ZoomedOutView内容和ZoomedInView内容.这两个属性内容含义如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;SemanticZoom.ZoomedInView&gt;</span><br><span class="line">在这里放置GridView(或ListView)以表示放大视图,显示详细信息</span><br><span class="line">&lt;/SemanticZoom.ZoomedInView&gt;</span><br><span class="line">&lt;SemanticZoom.ZoomOutView&gt;</span><br><span class="line">在这里放置GridView(或ListView)以表示缩小视图,一般情况下绑定Group.Title</span><br><span class="line">&lt;/SemanticZoom.ZoomOutView&gt;</span><br></pre></td></tr></table></figure><p>在赋值给ZoomInView属性的列表控件里面,一般需要设置ItemTemplate模板和GroupStyle.HeaderTemplate模板.ItemTemplate模板要设置的内容就是列表详细信息所展示的内容.G.H<br>模板是指分组的组头模板,如在人脉里面”a”,”b”这些就是属于列表的组头,如果同样是一个列表的集合,也是通过模板的绑定形式来进行定义.<br>在赋值给ZoomedOutView属性的列表控件里面,也需要设置其ItemTemplate模板,ZoomedOutView里面的ItemTemplate模板和ZoomedInView里面的模板的作用是不一样的,这里的ItemTemplate模板是指当点击组头的时候弹出的组头的索引面板项目展示,如点击人脉的a,b就会弹出一个字母的现实面板,当你点击某个字母的时候就会重新回到列表的界面并跳到列表字母所属的组项目的位置.同时还可以使用ItemsPanel来设置列表的布局,使用ItemContainerStyle来设置列表项目的容器样式,这些功能的使用和单独的GridView(或ListView)列表的使用是一样的.<br>2.SemanticZoom控件的数据源创建<br>SemanticZoom控件的数据源创建需要用到Windows.UI.Xaml.Data命名空间下的CollectionViewSource.<br>CollectionViewSource是专为数据绑定UI视图互动而设置的,尤其是对于要实现分组的情况,更需要他.创建一个CollectionViewSource对象既可以使用Xaml的方式来进行,也可以使用C#代码来创建,在CollectionViewSource对象中通常需要设置下面几个重要的属性:<br>1.Source属性:设置分组后的数据源,赋值给Source属性的对象是列表嵌套列表的集合对象.<br>2.IsSourceGrouped属性:指示是否允许分组<br>3.ItemsPath属性:是分组后,组内部所包含列表的属性路径.<br>4.View属性:获取当前与CollectionViewSource实例关联的视图对象.<br>5.View.CollectionGroups属性:返回该视图关联的所有集合组.<br>在绑定数据时,需要把ZoomedInView里面的列表控件的ItemsSource绑定到CollectionViewSource对象的View属性,用于展示CollectionViewSource对象所关联的视图.把ZoomedOutView里面的列表控件的ItemSource绑定到CollectionViewSource对象的View.CollectionGroups属性,用于展示分组的视图.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;!--创建数据源对象,注意ItemContent属性就是数据源中真正的基础数据的列表属性,必须设置该属性的值数据源才能定位到实际绑定的数据实体对象--&gt;</span><br><span class="line">                        &lt;CollectionViewSource x:Name=<span class="string">&quot;itemcollectSource&quot;</span> IsSourceGrouped=<span class="string">&quot;True&quot;</span> ItemsPath=<span class="string">&quot;ItemContent&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;SemanticZoom x:Name=<span class="string">&quot;semanticZoom&quot;</span>&gt;</span><br><span class="line">                        &lt;SemanticZoom.ZoomedInView&gt;</span><br><span class="line">                            &lt;!--在这里放置GridView(或ListView)以表示放大视图--&gt;</span><br><span class="line">                            &lt;ListView x:Name=<span class="string">&quot;inView&quot;</span>&gt;</span><br><span class="line">                                &lt;ListView.GroupStyle&gt;</span><br><span class="line">                                    &lt;GroupStyle&gt;</span><br><span class="line">                                        &lt;!--用于显示列表有的数据项的模板--&gt;</span><br><span class="line">                                        &lt;GroupStyle.HeaderTemplate&gt;</span><br><span class="line">                                            &lt;DataTemplate&gt;</span><br><span class="line">                                                &lt;Border Background=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;80&quot;</span>&gt;</span><br><span class="line">                                                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Key&#125;&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                                &lt;/Border&gt;</span><br><span class="line">                                            &lt;/DataTemplate&gt;</span><br><span class="line">                                        &lt;/GroupStyle.HeaderTemplate&gt;</span><br><span class="line">                                    &lt;/GroupStyle&gt;</span><br><span class="line">                                &lt;/ListView.GroupStyle&gt;</span><br><span class="line">                                &lt;!--用于显示列表的数据项的模板--&gt;</span><br><span class="line">                                &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;StackPanel&gt;</span><br><span class="line">                                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> Height=<span class="string">&quot;40&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/StackPanel&gt;</span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                            &lt;/ListView&gt;</span><br><span class="line">                        &lt;/SemanticZoom.ZoomedInView&gt;</span><br><span class="line">                        &lt;SemanticZoom.ZoomedOutView&gt;</span><br><span class="line">                            &lt;!--在这里放置GridView(或ListView)以表示缩小视图--&gt;</span><br><span class="line">                            &lt;GridView x:Name=<span class="string">&quot;outView&quot;</span>&gt;</span><br><span class="line">                                &lt;!--用于显示弹出的分组列表视图的数据项的模板--&gt;</span><br><span class="line">                                &lt;GridView.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;Border Height=<span class="string">&quot;60&quot;</span>&gt;</span><br><span class="line">                                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Group.Key&#125;&quot;</span> FontSize=<span class="string">&quot;24&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/Border&gt;</span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/GridView.ItemTemplate&gt;</span><br><span class="line">&lt;!--列表布局模板--&gt;</span><br><span class="line">                                &lt;GridView.ItemsPanel&gt;</span><br><span class="line">                                    &lt;ItemsPanelTemplate&gt;</span><br><span class="line">                                        &lt;WrapGrid ItemWidth=<span class="string">&quot;100&quot;</span> ItemHeight=<span class="string">&quot;75&quot;</span> MaximumRowsOrColumns=<span class="string">&quot;1&quot;</span> VerticalChildrenAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/ItemsPanelTemplate&gt;</span><br><span class="line">                                &lt;/GridView.ItemsPanel&gt;</span><br><span class="line">                                &lt;!--列表项目容器的样式设置--&gt;</span><br><span class="line">                                &lt;GridView.ItemContainerStyle&gt;</span><br><span class="line">                                    &lt;Style TargetType=<span class="string">&quot;GridViewItem&quot;</span>&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;BorderBrush&quot;</span> Value=<span class="string">&quot;Gray&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;Background&quot;</span> Value=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;BorderThickness&quot;</span> Value=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;HorizontalAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;VerticalAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/Style&gt;</span><br><span class="line">                                &lt;/GridView.ItemContainerStyle&gt;</span><br><span class="line">                            &lt;/GridView&gt;</span><br><span class="line">                        &lt;/SemanticZoom.ZoomedOutView&gt;</span><br><span class="line">                    &lt;/SemanticZoom&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"> public void <span class="function"><span class="title">GetSezData</span></span>() &#123; </span><br><span class="line">            //先创建一个普通的数据集合</span><br><span class="line">            List&lt;BookItem&gt; mainItem=new List&lt;BookItem&gt;();</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 10; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                mainItem.Add(new BookItem &#123; Content = <span class="string">&quot;A类别&quot;</span>, Title = <span class="string">&quot;TestA&quot;</span> + i &#125;);</span><br><span class="line">                mainItem.Add(new BookItem &#123; Content = <span class="string">&quot;B类别&quot;</span>, Title = <span class="string">&quot;TestB&quot;</span> + i &#125;);</span><br><span class="line">                mainItem.Add(new BookItem &#123; Content = <span class="string">&quot;C类别&quot;</span>, Title = <span class="string">&quot;TestC&quot;</span> + i &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            //使用LINQ语法把普通的数据集合转换为分组的数据集合.</span><br><span class="line">            List&lt;ItemInGroup&gt; Items=(from item <span class="keyword">in</span> mainItem group item by item.Content into newItems select new ItemInGroup &#123; Key=newItems.Key,ItemContent=newItems.ToList()&#125;).ToList();</span><br><span class="line">            //设置CollectionViewSource对象的数据源</span><br><span class="line">            this.itemcollectSource.Source= Items;</span><br><span class="line">            //分别对两个视图进行绑定</span><br><span class="line">            outView.ItemsSource = itemcollectSource.View.CollectionGroups;</span><br><span class="line">            inView.ItemsSource = itemcollectSource.View;</span><br><span class="line">        &#125;</span><br><span class="line"> internal class ItemInGroup</span><br><span class="line">    &#123;</span><br><span class="line">        public string Key &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">        public List&lt;BookItem&gt; ItemContent &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>12.2.虚拟化技术<br>允许应用程序只把在屏幕当前和屏幕附近的UI元素初始化了,其他UI元素都是处于虚构的状态,还可以利用虚拟化技术来做更多的优化,如当虚拟化发生时,可以去主动的回收暂时不使用的内存,从而可以对程序暂用的内存进行优化.也可以利用虚拟化的布局控件去实现自定义的虚拟化的功能需求.<br>12.21.列表的虚拟化<br>标准布局系统可以创建项容器并为每个与列表控件关联的项计算布局.在自定义集合里面可以通过Count属性设置列表的长度,通过IList.this[int index]属性返回数据项和打印出相关的数据信息.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">public class VirtualDataList : IList</span><br><span class="line">   &#123;</span><br><span class="line">       public object this[int index] &#123; get &#123;</span><br><span class="line">               //当获取集合的某个数据项的时候把这个数据的索引项打印出来</span><br><span class="line">               Debug.WriteLine(<span class="string">&quot;当前加载的数据Data&quot;</span>+index.ToString());</span><br><span class="line">               <span class="built_in">return</span> new Data &#123; Name = <span class="string">&quot;data&quot;</span> + index.ToString() &#125;;</span><br><span class="line">           &#125; <span class="built_in">set</span> =&gt; throw new NotImplementedException(); &#125;</span><br><span class="line"></span><br><span class="line">       public bool IsFixedSize =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public bool IsReadOnly =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public int Count =&gt; 1000;</span><br><span class="line"></span><br><span class="line">       public bool IsSynchronized =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public object SyncRoot =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public int Add(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void <span class="function"><span class="title">Clear</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public bool Contains(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void CopyTo(Array array, int index)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public IEnumerator <span class="function"><span class="title">GetEnumerator</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public int IndexOf(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void Insert(int index, object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void Remove(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void RemoveAt(int index)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&lt;ListView ItemsSource=<span class="string">&quot;&#123;Binding Data&#125;&quot;</span>&gt;</span><br><span class="line">                   &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                       &lt;DataTemplate&gt;</span><br><span class="line">                           &lt;StackPanel&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> Height=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;/DataTemplate&gt;</span><br><span class="line">                   &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">               &lt;/ListView&gt;</span><br></pre></td></tr></table></figure><p>12.22.VirtualizingStackPanel,ItemsStackPanel和ItemsWrapGrid虚拟化排列布局控件<br>都是虚拟化布局控件,一般情况下在界面的布局上很少会用到这些虚拟化排列的控件,大部分都是封装在列表的布局面板上使用,主要目的就是为了实现列表上大数据量的虚拟化,从而极大的提高列表的效率.<br>其实这3个虚拟化布局控件都是列表控件的默认布局排列的方式,其中VirtualizingStackPanel控件是ListBox的默认布局面板,ItemsStackPanel是ListView的默认布局面板,ItemsWrapGrid是GridView的默认布局面板.<br>VirtualizingStackPanel控件和ItemsStackpanel控件都表示沿着水平方向或垂直方向将内容虚拟化的排列在一行上,所实现的排列布局效果和StackPanel控件是一样的,不同的是这些控件可以实现虚拟化的逻辑.对于数据较多的列表布局,使用VirtualizingStackPanel控件或ItemsStackPanel控件会比StackPanel高效很多,因为虚拟化控件只是把当前屏幕范围内的数据显示出来,其他的数据都通过虚拟化的技术进行处理,并没有进行UI的初始化显示,所以效率很高,ItemsWrapGrid控件实现的是网格的虚拟化布局效果,虚拟化原理和ItemsStackPanel控件类似,只不过排列的方式不一样.<br>如果使用ItemsControl列表控件来展示数据,要给这个列表增加虚拟化的功能,ItemsStackPanel对象元素必须包含在一个ItemsPanelTemplate中,给ItemsControl控件增加ItemsStackPanel虚拟化布局.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">public class ImageList : IList</span><br><span class="line">   &#123;</span><br><span class="line">       public object this[int index] &#123; get &#123;</span><br><span class="line">               //加载的图片是程序里面的图片资源,20张图片循环加载</span><br><span class="line">               int imageIndex = 20 - index % 20;</span><br><span class="line">               Debug.WriteLine(<span class="string">&quot;加载的集合索引是:&quot;</span>+index);</span><br><span class="line">               <span class="built_in">return</span> new ImageItem &#123; ImageName = <span class="string">&quot;图片&quot;</span> + index, Image = new BitmapImage(new Uri($<span class="string">&quot;ms-appx:///Assets/thumb/thumb_&#123;imageIndex&#125;.webp&quot;</span>, UriKind.RelativeOrAbsolute)) &#125;;</span><br><span class="line">           &#125; <span class="built_in">set</span> =&gt; throw new NotImplementedException(); &#125;</span><br><span class="line"></span><br><span class="line">       public bool IsFixedSize =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public bool IsReadOnly =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public int Count =&gt; 100;</span><br><span class="line"></span><br><span class="line">       public bool IsSynchronized =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public object SyncRoot =&gt; throw new NotImplementedException();</span><br><span class="line"></span><br><span class="line">       public int Add(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void <span class="function"><span class="title">Clear</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public bool Contains(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void CopyTo(Array array, int index)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public IEnumerator <span class="function"><span class="title">GetEnumerator</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public int IndexOf(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void Insert(int index, object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void Remove(object value)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public void RemoveAt(int index)</span><br><span class="line">       &#123;</span><br><span class="line">           throw new NotImplementedException();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>2.实现ItemsControl的横向虚拟化布局.<br>要实现ItemsControl的横向虚拟化布局,除了使用ItemsStackPanel控件的Horizontal布局,还需要在ItemsControl中设置ScrollViewer,HorizontalScrollBarVisibility=”Auto”,这样列表就可以水平滚动了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;ItemsControl x:Name=<span class="string">&quot;imageList&quot;</span>&gt;</span><br><span class="line">                   &lt;ItemsControl.ItemsPanel&gt;</span><br><span class="line">                       &lt;ItemsPanelTemplate&gt;</span><br><span class="line">                           &lt;!--设置横向布局--&gt;</span><br><span class="line">                           &lt;ItemsStackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>/&gt;</span><br><span class="line">                       &lt;/ItemsPanelTemplate&gt;</span><br><span class="line">                   &lt;/ItemsControl.ItemsPanel&gt;</span><br><span class="line">                   &lt;ItemsControl.Template&gt;</span><br><span class="line">                       &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                           &lt;!--设置水平滚动--&gt;</span><br><span class="line">                           &lt;ScrollViewer ScrollViewer.HorizontalScrollBarVisibility=<span class="string">&quot;Visible&quot;</span> ScrollViewer.VerticalScrollBarVisibility=<span class="string">&quot;Disabled&quot;</span>&gt;</span><br><span class="line">                               &lt;!--&lt;StackPanel&gt;--&gt;</span><br><span class="line">                                   &lt;ItemsPresenter/&gt;</span><br><span class="line">                               &lt;!--&lt;/StackPanel&gt;--&gt;</span><br><span class="line">                           &lt;/ScrollViewer&gt;</span><br><span class="line">                       &lt;/ControlTemplate&gt;</span><br><span class="line">                   &lt;/ItemsControl.Template&gt;</span><br><span class="line">                   &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                       &lt;DataTemplate&gt;</span><br><span class="line">                          </span><br><span class="line">                               &lt;StackPanel&gt;</span><br><span class="line">                               &lt;Image Source=<span class="string">&quot;&#123;Binding Image&#125;&quot;</span> Width=<span class="string">&quot;144&quot;</span> Height=<span class="string">&quot;240&quot;</span> Stretch=<span class="string">&quot;Uniform&quot;</span>/&gt;</span><br><span class="line">                               &lt;TextBlock Text=<span class="string">&quot;&#123;Binding ImageName&#125;&quot;</span>/&gt;</span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                           </span><br><span class="line">                       &lt;/DataTemplate&gt;</span><br><span class="line">                   &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">               &lt;/ItemsControl&gt;</span><br><span class="line">imageList.ItemsSource = new ImageList();</span><br></pre></td></tr></table></figure><p>12.24.大数据量网络图片列表的异步加载和内存优化<br>实现网络图片列表数据集合大加载:1.图片的加载比较耗时2.不断地滑动会让数据集合加载的图片占用的内存越来越高.<br>1.可以采用异步加载的方式来解决,这样的列表加载完之后,图片再显示出来,列表首次加载的速度会很快,我们可以通过后台线程调用网络请求下载图片,下载完图片之后再触发UI线程把图片加载出来.<br>2.要解决内存的问题,可以使用弱引用类型(WeakReference类)来存储图片的数据.弱引用就是不保证不被垃圾回收期回收的对象,它拥有比较短暂的生命周期,在垃圾回收器扫描它所管辖的内存区域过程中,一旦发现了只具有弱引用的对象,就会回收它的内存.不过一般情况下,垃圾回收器的线程优先级很低,也就不会很快发现那些只有弱引用的对象.当内存的使用影响程序流畅运行时,垃圾回收器就会按照优先次序把存在时间长的弱引用对象回收,而释放内存.所以弱引用特别适合在当前这种情况下,占用大量内存,但通过垃圾回收功能回收以后很容易重新创建的图片对象.图片下载完之后会存放在弱引用对象里面,当检查到数据被回收的时候,再进行异步加载,当然也可以把图片用独立存储存起来,这样就免去了再次请求网络的操作.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"> &lt;ListView x:Name=<span class="string">&quot;InternetImage&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> Height=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;&#123;Binding ImageSource&#125;&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line"> public void <span class="function"><span class="title">GetInternetImage</span></span>() &#123; </span><br><span class="line">            List&lt;ImageData&gt; Items=new List&lt;ImageData&gt;();</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 1000; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                //在网络地址后面加上index=i是为了保证每个网络地址不一样</span><br><span class="line">                //这样就不会产生网络数据缓存,更加接近真实的网络图片列表</span><br><span class="line">                Items.Add(new ImageData &#123; Name = <span class="string">&quot;Test&quot;</span> + i, Page = this, ImageUri = new Uri(<span class="string">&quot;http://pic002.cnblogs.com/images/2012/152755/2012120917494440.png?index=&quot;</span> + i) &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            InternetImage.ItemsSource= Items;</span><br><span class="line">        &#125;</span><br><span class="line"> public class ImageData : INotifyPropertyChanged</span><br><span class="line">    &#123;</span><br><span class="line">        private Uri imageUri;</span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">ImageData</span></span>() &#123; &#125;</span><br><span class="line">        public string Name &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line">        public Page Page &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line">        public Uri ImageUri</span><br><span class="line">        &#123;</span><br><span class="line">            get =&gt; imageUri;</span><br><span class="line">            <span class="built_in">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (imageUri == value)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                imageUri = value;</span><br><span class="line">                bitmapImage = null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //弱引用对象,用于存储下载好的图片对象</span><br><span class="line">        WeakReference bitmapImage;</span><br><span class="line">        private ImageSource imageSource;</span><br><span class="line"></span><br><span class="line">        //ImageSource属性用于绑定到列表的Image控件上</span><br><span class="line">        public ImageSource ImageSource &#123;</span><br><span class="line"></span><br><span class="line">            get &#123;</span><br><span class="line">                <span class="keyword">if</span> (bitmapImage != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    //如果弱引用没有回收,则取弱引用的值</span><br><span class="line">                    <span class="keyword">if</span> (bitmapImage.IsAlive)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">return</span> (ImageSource)bitmapImage.Target;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Debug.WriteLine(<span class="string">&quot;数据已经被回收&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                    //弱引用已经被回收,那么则通过图片网路地址进行异步下载</span><br><span class="line">                    <span class="keyword">if</span> (ImageUri!=null)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Task.Factory.StartNew(() =&gt; &#123; DownloadImage(imageUri); &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">return</span> null;</span><br><span class="line">                </span><br><span class="line">            &#125; </span><br><span class="line">            </span><br><span class="line">           &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 下载图片的方法</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;imageUri&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private async void DownloadImage(Uri imageUri)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;Byte&gt; allBytes = new List&lt;byte&gt;();</span><br><span class="line">            Stream streamForUI;</span><br><span class="line">            //通过网络下载图片数据</span><br><span class="line">            using (var response=await HttpWebRequest.Create(imageUri).GetResponseAsync())</span><br><span class="line">            &#123;</span><br><span class="line">                using (Stream responseStream=response.GetResponseStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    byte[] buffer = new byte[4000];</span><br><span class="line">                    int bytesRead = 0;</span><br><span class="line">                    <span class="keyword">while</span> ((bytesRead = await responseStream.ReadAsync(buffer,0,4000))&gt;0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        allBytes.AddRange(buffer.Take(bytesRead));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            streamForUI = new MemoryStream((int)allBytes.Count);</span><br><span class="line">            streamForUI.Write(allBytes.ToArray(),0,allBytes.Count);</span><br><span class="line">            streamForUI.Seek(0, SeekOrigin.Begin);</span><br><span class="line">            //触发UI线程处理位图和UI更新</span><br><span class="line">            await Page.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                BitmapImage bm=new BitmapImage();</span><br><span class="line">                bm.SetSource(streamForUI.AsRandomAccessStream());</span><br><span class="line">                //把图片位图对象存放到弱引用对象里面</span><br><span class="line">                <span class="keyword">if</span> (bitmapImage==null)</span><br><span class="line">                &#123;</span><br><span class="line">                    bitmapImage = new WeakReference(bm);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    bitmapImage.Target = bm;</span><br><span class="line">                    //触发UI绑定属性的改变</span><br><span class="line">                    PropertyChanged?.Invoke(this,new PropertyChangedEventArgs(<span class="string">&quot;ImageSource&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 属性改变事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;proeprty&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        async void OnPropertyChanged(string proeprty) &#123;</span><br><span class="line">            var handler = PropertyChanged;</span><br><span class="line">            await Page.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (handler!=null)</span><br><span class="line">                &#123;</span><br><span class="line">                    handler(this,new PropertyChangedEventArgs(proeprty));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        public event PropertyChangedEventHandler PropertyChanged;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="图表编程"><a href="#图表编程" class="headerlink" title="图表编程"></a>图表编程</h4><p>13.1.动态生成折线图和区域图<br>区域图其实就是在折线图的基础上实现了区域的显示效果,这两者非常类似.<br>13.11.折线图和区域图原理<br>折线图可以通过Polyline图形来进行创建,我们要实现的折线图就是一种特殊的Polyline图形.一般的折线图的X轴坐标都是等量递增的,Y轴的坐标是随意变化的,我们需要根据这种变化的规律来给Polyline控件库的Point属性来赋值.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Polyline Stroke=<span class="string">&quot;LightBlue&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span> Height=<span class="string">&quot;150&quot;</span> Points=<span class="string">&quot;0,10 50,40 100,90 150,50 200,50 250,10 300,100 350,30 400,0&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>区域图的规则和折线图是类似的,只不过区域图是一个闭合的图形,相当于把折线图和X轴组合起来形成一个区域,区域图可以通过Polygon图形去实现,Polygon图形和Polyline图形的区别在于一个是闭合的而另一个是非闭合的,这也是区域图和折线图的区别.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Polygon Fill=<span class="string">&quot;AliceBlue&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span> Height=<span class="string">&quot;150&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span> Points=<span class="string">&quot;0,150 0,10 50,40 100,90 150,50 200,50 250,10 300,100 350,30 400,0 400,150&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>13.12.生成图形逻辑封装<br>创建折线图和区域图最关键的部分就是把相关的数据集合转换为X轴和Y轴的坐标,然后根据坐标生成图形.<br>下面实现了一个生成折线图的PointCollection的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">private PointCollection GetLineChartPointCollection(List&lt;double&gt; datas,double topheight,double perWidth,double topValue) &#123; </span><br><span class="line">            PointCollection pointCollection=new PointCollection();</span><br><span class="line">            double x = 0;//X坐标</span><br><span class="line">            foreach (var data <span class="keyword">in</span> datas)</span><br><span class="line">            &#123;</span><br><span class="line">                double y;   //Y坐标</span><br><span class="line">                <span class="keyword">if</span> (data &gt; topValue) y = 0;</span><br><span class="line">                <span class="keyword">else</span> y = (topheight - (data * topheight) / topValue);</span><br><span class="line">                Point point =new Point(x,y);</span><br><span class="line">                pointCollection.Add(point);</span><br><span class="line">                x += perWidth;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> pointCollection;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>该方法通过参数传递进行折线图表展示的数据集合,图表的最高高度,两个数据之间的X轴的间隔和图表数值的最大的值,j然后根据这些数据来产生一个坐标的点集合.图表数值的最大值是为了控制数据集合里面的数值相差太大而导致图表显示异常,所以做了一个最大值的控制.如果datas数据里面有比topValue大的数据,将会用topValue来代替,Y坐标的产生公式是y=(topHeight-(data*topHeight)/topValue),计算出点和顶部的距离就是Y坐标,X坐标就是有规律地递增.<br>定义好PointCollection的生成方法后,就可以在UI上生成折线图了,下面是UI上的代码,通过Button事件调用GetLineChartPointCollection方法生成一个折线图.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;chartCanvas&quot;</span> Height=<span class="string">&quot;400&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                    &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;折线图&quot;</span> Click=<span class="string">&quot;Button_Click_23&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;区域图&quot;</span> Click=<span class="string">&quot;Button_Click_24&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 生成折线图</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_23(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            chartCanvas.Children.Clear();</span><br><span class="line">            List&lt;double&gt; datas=new List&lt;double&gt;() &#123; 23,23,45,26,45,36,29,30,27,38,36,52,27,35&#125;;</span><br><span class="line">            PointCollection pointCollection = GetLineChartPointCollection(datas,400,30,100);</span><br><span class="line">            Polyline polyline=new <span class="function"><span class="title">Polyline</span></span>() &#123; Points=pointCollection,Stroke=new SolidColorBrush(Colors.Red)&#125;;</span><br><span class="line">            chartCanvas.Children.Add(polyline);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>生成区域图,如果直接使用Polygon图形来生成区域图,只需要在GetLineChartPointCollection方法里面添加上一个开始点在X轴的映射坐标和一个结束点在X轴的映射坐标就可以了.除了使用Polygon图形来实现,还可以用Path图形来实现,实现的效果也是一样的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> private PathGeometry GetLineChartPathGeometry(List&lt;double&gt; datas, double topHeight, double perWidth, double topValue) &#123; </span><br><span class="line">            PathGeometry pathGeometry=new PathGeometry();</span><br><span class="line">            PathFigureCollection pathFigures=new PathFigureCollection();</span><br><span class="line">            //使用数据集合第一个点在X轴的投影点作为Path图形的开始点</span><br><span class="line">            PathFigure pathFigure=new <span class="function"><span class="title">PathFigure</span></span>() &#123; StartPoint=new Point(0,topHeight)&#125;;</span><br><span class="line">            //新建一个PathSegmentCollection集合来添加LineSegment线段的对象</span><br><span class="line">            PathSegmentCollection pathSegmentCollection=new PathSegmentCollection();</span><br><span class="line">            double x = 0; //x坐标</span><br><span class="line">            foreach (double data <span class="keyword">in</span> datas)</span><br><span class="line">            &#123;</span><br><span class="line">                double y;//Y坐标</span><br><span class="line">                <span class="keyword">if</span> (data &gt; topValue) y = 0;</span><br><span class="line">                <span class="keyword">else</span> y = (topHeight - (data * topHeight) / topValue);</span><br><span class="line">                Point point=new Point(x,y);</span><br><span class="line">                LineSegment lineSegment=new <span class="function"><span class="title">LineSegment</span></span>() &#123; Point=point&#125;;</span><br><span class="line">                pathSegmentCollection.Add(lineSegment);</span><br><span class="line">                x+= perWidth;</span><br><span class="line">            &#125;</span><br><span class="line">            x-=perWidth;</span><br><span class="line">            LineSegment lineSegmentEnd = new <span class="function"><span class="title">LineSegment</span></span>() &#123; Point = new Point(x, topHeight) &#125;;</span><br><span class="line">            pathSegmentCollection.Add(lineSegmentEnd);</span><br><span class="line">            pathFigure.Segments = pathSegmentCollection;</span><br><span class="line">            pathFigures.Add(pathFigure);</span><br><span class="line">            pathGeometry.Figures = pathFigures; <span class="built_in">return</span> pathGeometry;</span><br><span class="line">        &#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 生成区域图</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click_24(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            chartCanvas.Children.Clear();</span><br><span class="line">            List&lt;double&gt; datas = new List&lt;double&gt; &#123; 23, 23, 45, 26, 45, 36, 29, 30, 27, 38, 36, 52, 27, 35 &#125;;</span><br><span class="line">            PathGeometry pathGeometry = GetLineChartPathGeometry(datas,400,30,100);</span><br><span class="line">            Path path = new Path &#123; Data = pathGeometry, Fill = new SolidColorBrush(Colors.Red) &#125;;</span><br><span class="line">            chartCanvas.Children.Add(path);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>13.2.实现饼图控件<br>要实现一个饼图控件,首先要实现饼图片形状,有一些重要的属性,如饼图半径Radius,内圆半径InnerRadius,旋转角度RotationAngle,片形角度WedgeAngle,点innerArcStartPoint,点innerArcEndPoint,点outerArcStartPoint和outerArcEndPoint,这4个点的坐标需要通过半径和角度相关的属性计算出来,计算出这4个点的坐标之后,通过这4个点创建一个Path图形,这个Path图形由两条直线和两条弧线组成,形成了一个饼图片形形状,通过这种方式不仅把这个饼图片形形状创建好了,连这个图形在整个饼图的位置也设置好了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">    /// 自定义饼图图片形形状</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public class PiePiece:Path</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#region 依赖属性</span></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 饼图半径</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double Radius</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(RadiusProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(RadiusProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> Radius.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty RadiusProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;Radius&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 距离饼图中心的距离</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double PushOut</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(PushOutProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(PushOutProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> PushOut.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty PushOutProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;PushOut&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 饼图内圆半径</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double InnerRadius</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(InnerRadiusProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(InnerRadiusProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> InnerRadius.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty InnerRadiusProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;InnerRadius&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 饼图片形的角度</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double WedgeAngle</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(WedgeAngleProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(WedgeAngleProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> WedgeAngle.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty WedgeAngleProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;WedgeAngle&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 旋转的角度</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double RotationAngle</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(RotationAngleProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(RotationAngleProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> RotationAngle.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty RotationAngleProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;RotationAngle&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 注册中心点的X坐标属性</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double CentreX</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(CentreXProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(CentreXProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> CentreX.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty CentreXProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;CentreX&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 中心点的Y坐标</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double CentreY</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(CentreYProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(CentreYProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> CentreY.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty CentreYProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;CentreY&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 饼图片形所占饼图的百分比</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double Percentage</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(PercentageProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(PercentageProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> Percentage.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty PercentageProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;Percentage&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public double PieceValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(PieceValueProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(PieceValueProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> PieceValue.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty PieceValueProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;PieceValue&quot;</span>, typeof(double), typeof(PiePiece), new PropertyMetadata(0));</span><br><span class="line">        private double lastWidth=0;</span><br><span class="line">        private double lastHeight=0;</span><br><span class="line">        private PathFigure figure;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        public <span class="function"><span class="title">PiePiece</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            CreatePathData(0,0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void CreatePathData(double width, double height)</span><br><span class="line">        &#123;</span><br><span class="line">            //用于退出布局的循环逻辑</span><br><span class="line">            <span class="keyword">if</span> (lastWidth == width &amp;&amp; lastHeight == height) <span class="built_in">return</span>;</span><br><span class="line">            lastWidth = width;</span><br><span class="line">            lastHeight = height;</span><br><span class="line">            Point startPoint = new Point(CentreX,CentreY);</span><br><span class="line">            //计算饼图片形内圆弧的开始点</span><br><span class="line">            Point innerArcStartPoint = ComputeCartesianCCoordinate(RotationAngle,InnerRadius);</span><br><span class="line">            //根据中心点来校正坐标的位置</span><br><span class="line">            innerArcStartPoint = Offset(innerArcStartPoint,CentreX,CentreY);</span><br><span class="line">            //计算饼图片形内圆弧的结束点</span><br><span class="line">            Point innerArcEndPoint=ComputeCartesianCCoordinate(RotationAngle+WedgeAngle,InnerRadius);</span><br><span class="line">            innerArcEndPoint = Offset(innerArcEndPoint,CentreX,CentreY);</span><br><span class="line">            //计算饼图片形外圆弧的开始点</span><br><span class="line">            Point outerArcStartPoint = ComputeCartesianCCoordinate(RotationAngle,Radius);</span><br><span class="line">            outerArcStartPoint = Offset(outerArcStartPoint,CentreX,CentreY);</span><br><span class="line">            //计算饼图片形外圆弧的结束点</span><br><span class="line">            Point outerArcEndPoint=ComputeCartesianCCoordinate(RotationAngle+WedgeAngle,Radius);</span><br><span class="line">            outerArcEndPoint = Offset(outerArcEndPoint,CentreX,CentreY);</span><br><span class="line">            //判断饼图片形的角度是否大于180度</span><br><span class="line">            bool largeArc = WedgeAngle &gt; 180.0;</span><br><span class="line">            //把扇面饼图往偏离中心点推出一部分</span><br><span class="line">            <span class="keyword">if</span> (PushOut&gt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                Point offset = ComputeCartesianCCoordinate(RotationAngle+WedgeAngle/2,PushOut);</span><br><span class="line"></span><br><span class="line">                //根据偏移量来重新设置圆弧的坐标</span><br><span class="line">                innerArcStartPoint = Offset(innerArcStartPoint,offset.X,offset.Y);</span><br><span class="line">                innerArcEndPoint = Offset(innerArcEndPoint,offset.X,offset.Y);</span><br><span class="line">                outerArcStartPoint = Offset(outerArcStartPoint,offset.X,offset.Y);</span><br><span class="line">                outerArcEndPoint = Offset(outerArcEndPoint,offset.X,offset.Y);</span><br><span class="line">            &#125;</span><br><span class="line">            //外圆的大小</span><br><span class="line">            Size outerArcSize = new Size(Radius,Radius);</span><br><span class="line">            //内圆的大小</span><br><span class="line">            Size innerArcSize = new Size(InnerRadius,InnerRadius);</span><br><span class="line">            var geometry = new PathGeometry();</span><br><span class="line">            figure = new PathFigure();</span><br><span class="line">            //从内圆开始坐标开始画一个闭合的扇形图形</span><br><span class="line">            figure.StartPoint = innerArcStartPoint;</span><br><span class="line">            AddLine(outerArcStartPoint);</span><br><span class="line">            AddArc(outerArcEndPoint,outerArcSize,largeArc,SweepDirection.Clockwise);</span><br><span class="line">            AddLine(innerArcEndPoint);</span><br><span class="line">            AddArc(innerArcStartPoint,innerArcSize,largeArc,SweepDirection.Counterclockwise);</span><br><span class="line">            figure.IsClosed= <span class="literal">true</span>;</span><br><span class="line">            geometry.Figures.Add(figure);</span><br><span class="line">            this.Data= geometry;</span><br><span class="line">        &#125;</span><br><span class="line">        protected override Size MeasureOverride(Size availableSize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> availableSize; </span><br><span class="line">        &#125;</span><br><span class="line"> protected override Size ArrangeOverride(Size finalSize)</span><br><span class="line">        &#123;</span><br><span class="line">            CreatePathData(finalSize.Width,finalSize.Height);</span><br><span class="line">            <span class="built_in">return</span> finalSize;</span><br><span class="line">        &#125;</span><br><span class="line">        //把点进行偏移转换</span><br><span class="line">        private Point Offset(Point point,double offsetX,double offsetY) &#123;</span><br><span class="line">            point.X += offsetX;</span><br><span class="line">            point.Y += offsetY;</span><br><span class="line">            <span class="built_in">return</span> point;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 根据角度和半径来计算出圆弧上的点的坐标</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;rotationAngle&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;innerRadius&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private Point ComputeCartesianCCoordinate(double angle, double radius)</span><br><span class="line">        &#123;</span><br><span class="line">            //转换成弧度单位</span><br><span class="line">            double angleRad = (Math.PI / 180.0) * (angle-90);</span><br><span class="line">            double x=radius*Math.Cos(angleRad);</span><br><span class="line">            double y=radius*Math.Sin(angleRad);</span><br><span class="line">            <span class="built_in">return</span> new Point(x, y);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在图形中添加一个点</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;x&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;y&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void AddPoint(double x,double y) &#123; </span><br><span class="line">            LineSegment segment= new LineSegment();</span><br><span class="line">            segment.Point= new Point(x+0.5*StrokeThickness,y+0.5*StrokeThickness);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在图形中添加一条线段</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;point&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void AddLine(Point point) &#123; </span><br><span class="line">            LineSegment segment= new LineSegment();</span><br><span class="line">            segment.Point= point;</span><br><span class="line">            figure.Segments.Add(segment);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在图形中添加一个圆弧</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;point&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;size&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;largeArc&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sweepDirection&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void AddArc(Point point,Size size,bool largeArc,SweepDirection sweepDirection) &#123; </span><br><span class="line">            ArcSegment segment= new ArcSegment();</span><br><span class="line">            segment.Point= point;</span><br><span class="line">            segment.Size= size;</span><br><span class="line">            segment.IsLargeArc= largeArc;</span><br><span class="line">            segment.SweepDirection= sweepDirection;</span><br><span class="line">            figure.Segments.Add(segment);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>13.22.封装饼图控件<br>创建好了PiePiece形状之后,下面开始就要开始创建利用PiePiece形状来创建饼图控件了.创建饼图控件是通过UserControl控件来实现的,UserControl控件的Xaml代码里面只有一个Grid面板,用来加载PiePiece形状来组成饼图.<br>在饼图控件里面需要自定义一些相关的属性,用来传递相关的参数.属性HoleSize表示饼图内圆的大小,按照比例来计算,属性pieWidth表示饼图的宽度.饼图的数据集合是通过控件数据的上下文属性DataContext属性来传递,在初始化饼图的时候需要把DataContext的数据读取出来然后再创建PiePiece图形,每个PiePiece图形都添加了Tap事件,用来实现当用户单击饼图的时候,相应的某一块回往外推出去.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">&lt;UserControl</span><br><span class="line">    x:Class=&quot;App1.Controls.PiePlotter&quot;</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">    xmlns:local=&quot;using:App1.Controls&quot;</span><br><span class="line">    xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class="line">    xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span><br><span class="line">    mc:Ignorable=&quot;d&quot;</span><br><span class="line">    d:DesignHeight=&quot;300&quot;</span><br><span class="line">    d:DesignWidth=&quot;400&quot;</span><br><span class="line">    FontFamily=&quot;&#123;StaticResource PhoneFontFamilyNormal&#125;&quot;</span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid x:Name=&quot;LayoutRoot&quot;&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/UserControl&gt;</span><br><span class="line">using App1.Models;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">//https://go.microsoft.com/fwlink/?LinkId=234236 上介绍了“用户控件”项模板</span><br><span class="line"></span><br><span class="line">namespace App1.Controls</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 饼图控件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class PiePlotter : UserControl</span><br><span class="line">    &#123;</span><br><span class="line">        public PiePlotter()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        #region 依赖属性</span><br><span class="line">        //注册内圆大小属性</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 内圆的大小,按比例来计算</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double HoleSize</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; return (double)GetValue(HoleSizeProperty); &#125;</span><br><span class="line">            set &#123; SetValue(HoleSizeProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store for HoleSize.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static readonly DependencyProperty HoleSizeProperty =</span><br><span class="line">            DependencyProperty.Register(&quot;HoleSize&quot;, typeof(double), typeof(PiePlotter), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 饼图宽度</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public double PieWidth</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; return (double)GetValue(PieWidthProperty); &#125;</span><br><span class="line">            set &#123; SetValue(PieWidthProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store for PieWidth.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static readonly DependencyProperty PieWidthProperty =</span><br><span class="line">            DependencyProperty.Register(&quot;PieWidth&quot;, typeof(double), typeof(PiePlotter), new PropertyMetadata(0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        #endregion</span><br><span class="line">        //饼图的片形PiePiece的集合</span><br><span class="line">        private List&lt;PiePiece&gt; piePieces= new List&lt;PiePiece&gt;();</span><br><span class="line">        //选中的当前饼图的数据项</span><br><span class="line">        private PieDataItem CurrentItem;</span><br><span class="line">        //初始化展示饼图的方法</span><br><span class="line">        public void ShowPie() &#123;</span><br><span class="line">            //获取控件的数据上下文,转换成数据集合</span><br><span class="line">            List&lt;PieDataItem&gt; myCollectionView = (List&lt; PieDataItem &gt;)this.DataContext;</span><br><span class="line">            if (myCollectionView == null)</span><br><span class="line">                return;</span><br><span class="line">            //半径的大小</span><br><span class="line">            double halfWidth = PieWidth / 2;</span><br><span class="line">            //内圆半径大小</span><br><span class="line">            double innerRadius = halfWidth * HoleSize;</span><br><span class="line">            //计算图表数据的总和</span><br><span class="line">            double total = 0;</span><br><span class="line">            foreach (PieDataItem item in myCollectionView)</span><br><span class="line">            &#123;</span><br><span class="line">                total += item.Value;</span><br><span class="line">            &#125;</span><br><span class="line">            //通过PiePiece构建饼图</span><br><span class="line">            LayoutRoot.Children.Clear();</span><br><span class="line">            piePieces.Clear();</span><br><span class="line">            double accumulativeAngle = 0;</span><br><span class="line">            foreach (PieDataItem item in myCollectionView)</span><br><span class="line">            &#123;</span><br><span class="line">                bool selectedItem = item == CurrentItem;</span><br><span class="line">                double wedgeAngle = item.Value * 360 / total;</span><br><span class="line">                //根据数据来创建饼图的每一块图形</span><br><span class="line">                PiePiece piePiece= new PiePiece() &#123; </span><br><span class="line">                    Radius=halfWidth,</span><br><span class="line">                    InnerRadius=innerRadius,</span><br><span class="line">                    CentreX=halfWidth,</span><br><span class="line">                    CentreY=halfWidth,</span><br><span class="line">                    PushOut=(selectedItem?10.0:0),</span><br><span class="line">                    WedgeAngle=wedgeAngle,</span><br><span class="line">                    PieceValue=item.Value,</span><br><span class="line">                    RotationAngle=accumulativeAngle,</span><br><span class="line">                    Fill=item.Brush,</span><br><span class="line">                    Tag=item</span><br><span class="line">                &#125;;</span><br><span class="line">                //添加饼图片形的点击事件</span><br><span class="line">                piePiece.Tapped += PiePiece_Tapped;</span><br><span class="line">                piePieces.Add(piePiece);</span><br><span class="line">                LayoutRoot.Children.Add(piePiece);</span><br><span class="line">                accumulativeAngle+= wedgeAngle;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void PiePiece_Tapped(object sender, TappedRoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            PiePiece piePiece = sender as PiePiece;</span><br><span class="line">            CurrentItem = piePiece.Tag as PieDataItem;</span><br><span class="line">            ShowPie();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>13.3.线性报表<br>一个完整的线性报表包括网格图,坐标轴,图例和线性图形这四部分.网格图是指报表背景的网格,主要目的是清晰的查看坐标点的位置.坐标轴是水平坐标体系的X轴和Y轴,图例是集中于报表一角或一侧的报表上各种符号和颜色所代表内容与指标的说明,有助于更好的认识报表.线性图形就是图表里面的主体图形.<br>13.31.实现图形表格和坐标轴<br>首先封装一个图表的基础样式的ChartStyle类,这个类主要定义了X轴,Y轴的坐标范围,网格面板的大小和把网格面板的点转换为坐标体系的点的方法.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 图表基础样式类</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   public class ChartStyle</span><br><span class="line">   &#123;</span><br><span class="line">       //X轴最小坐标</span><br><span class="line">       private double xmin = 0;</span><br><span class="line">       //X轴最大坐标</span><br><span class="line">       private double xmax = 1;</span><br><span class="line">       //Y轴最小坐标</span><br><span class="line">       private double ymin = 0;</span><br><span class="line">       //Y轴最大坐标</span><br><span class="line">       private double ymax = 1;</span><br><span class="line">       //网格面板</span><br><span class="line">       private Canvas chartCanvas;</span><br><span class="line"></span><br><span class="line">       public <span class="function"><span class="title">ChartStyle</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public double Xmin &#123; get =&gt; xmin; <span class="built_in">set</span> =&gt; xmin = value; &#125;</span><br><span class="line">       public double Xmax &#123; get =&gt; xmax; <span class="built_in">set</span> =&gt; xmax = value; &#125;</span><br><span class="line">       public double Ymin &#123; get =&gt; ymin; <span class="built_in">set</span> =&gt; ymin = value; &#125;</span><br><span class="line">       public double Ymax &#123; get =&gt; ymax; <span class="built_in">set</span> =&gt; ymax = value; &#125;</span><br><span class="line">       </span><br><span class="line">       public Canvas ChartCanvas &#123; get =&gt; chartCanvas; <span class="built_in">set</span> =&gt; chartCanvas = value; &#125;</span><br><span class="line">       //定义网格面板的宽度和高度</span><br><span class="line">       public void ResizeCanvas(double width,double height) &#123; </span><br><span class="line">           ChartCanvas.Width = width;</span><br><span class="line">           ChartCanvas.Height = height;</span><br><span class="line">       &#125;</span><br><span class="line">       //把面板的点转换成为图表坐标体系的点坐标</span><br><span class="line">       public Point NormalizePoint(Point pt) &#123;</span><br><span class="line">           <span class="keyword">if</span> (ChartCanvas.Width.ToString()==<span class="string">&quot;Nan&quot;</span>)</span><br><span class="line">               ChartCanvas.Width = 400;</span><br><span class="line">           <span class="keyword">if</span> (ChartCanvas.Height.ToString() == <span class="string">&quot;Nan&quot;</span>)</span><br><span class="line">               ChartCanvas.Height = 400;</span><br><span class="line">           Point result = new Point();</span><br><span class="line">           result.X = (pt.X - Xmin) * ChartCanvas.Width / (Xmax - Xmin);</span><br><span class="line">           result.Y=ChartCanvas.Height-(pt.Y-Ymin)*ChartCanvas.Height/ (Ymax - Ymin);</span><br><span class="line">           <span class="built_in">return</span> result;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>从ChartStyle类派生出ChartStyleGridlines类表示网格线条类,通过ChartStyleGridlines类来初始化图表的网格线条和X轴,Y轴,ChartStyleGridlines类定义图表的标题,X轴和Y轴单位间距,网格颜色等属性.是用Line对象来绘制网格的图表.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 网格线条类</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   public class ChartStyleGridlines : ChartStyle</span><br><span class="line">   &#123;</span><br><span class="line">       private string title;</span><br><span class="line">       private Canvas textCanvas1;</span><br><span class="line">       private bool isXGrid = <span class="literal">true</span>;</span><br><span class="line">       private bool isYGrid = <span class="literal">true</span>;</span><br><span class="line">       private Brush gridlineColor = new SolidColorBrush(Colors.LightGray);</span><br><span class="line">       private double xTick = 1;</span><br><span class="line">       private double yTick = 0.5;</span><br><span class="line">       private GridlinePatternEnum gridlinePattern;</span><br><span class="line"></span><br><span class="line">       //图表标题</span><br><span class="line">       public string Title &#123; get =&gt; title; <span class="built_in">set</span> =&gt; title = value; &#125;</span><br><span class="line">       //添加X轴和Y轴的面板</span><br><span class="line">       public Canvas textCanvas &#123; get =&gt; textCanvas1; <span class="built_in">set</span> =&gt; textCanvas1 = value; &#125;</span><br><span class="line">       //是否创建水平线条</span><br><span class="line">       public bool IsXGrid &#123; get =&gt; isXGrid; <span class="built_in">set</span> =&gt; isXGrid = value; &#125;</span><br><span class="line">       //是否创建垂直线条</span><br><span class="line">       public bool IsYGrid &#123; get =&gt; isYGrid; <span class="built_in">set</span> =&gt; isYGrid = value; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 网格颜色画刷</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public Brush GridlineColor &#123; get =&gt; gridlineColor; <span class="built_in">set</span> =&gt; gridlineColor = value; &#125;</span><br><span class="line">       //X轴单位间距</span><br><span class="line">       public double XTick &#123; get =&gt; xTick; <span class="built_in">set</span> =&gt; xTick = value; &#125;</span><br><span class="line">       public double YTick &#123; get =&gt; yTick; <span class="built_in">set</span> =&gt; yTick = value; &#125;</span><br><span class="line">       //线条类型</span><br><span class="line">       public GridlinePatternEnum GridlinePattern &#123;</span><br><span class="line">           get =&gt; gridlinePattern; <span class="built_in">set</span> =&gt; gridlinePattern = value;</span><br><span class="line">       &#125;</span><br><span class="line">       private double leftOffset = 20;</span><br><span class="line">       private double rightOffset = 10;</span><br><span class="line">       private double bottomOffset = 15;</span><br><span class="line">       private Line gridline = new Line();</span><br><span class="line"></span><br><span class="line">       public <span class="function"><span class="title">ChartStyleGridlines</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           title = <span class="string">&quot;Title&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 添加网格图表的样式</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;tbTitle&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       public void AddChartStyle(TextBlock tbTitle) &#123;</span><br><span class="line">           Point pt = new Point();</span><br><span class="line">           Line tick=new Line();</span><br><span class="line">           double offset = 0;</span><br><span class="line">           double dx, dy;</span><br><span class="line">           TextBlock tb = new TextBlock();</span><br><span class="line">           //确定右边的偏移量</span><br><span class="line">           tb.Text = Xmax.ToString();</span><br><span class="line">           tb.Measure(new Size(Double.PositiveInfinity,double.PositiveInfinity));</span><br><span class="line">           Size size = tb.DesiredSize;</span><br><span class="line">           rightOffset = size.Width / 2 + 2;</span><br><span class="line">           //确定左边的偏移量</span><br><span class="line">           <span class="keyword">for</span> (dy =Ymin; dy &lt;=Ymax; dy+=YTick)</span><br><span class="line">           &#123;</span><br><span class="line">               pt = NormalizePoint(new Point(Xmin,dy));</span><br><span class="line">               tb=new TextBlock();</span><br><span class="line">               tb.Text = dy.ToString();</span><br><span class="line">               tb.TextAlignment = TextAlignment.Right;</span><br><span class="line">               tb.Measure(new Size(double.PositiveInfinity,double.PositiveInfinity));</span><br><span class="line">               size= tb.DesiredSize;</span><br><span class="line">               <span class="keyword">if</span> (offset &lt; size.Width)</span><br><span class="line">                   offset = size.Width;</span><br><span class="line">           &#125;</span><br><span class="line">           leftOffset = offset + 5;</span><br><span class="line">           ChartCanvas.Width=textCanvas.Width-leftOffset-rightOffset;</span><br><span class="line">           ChartCanvas.Height = textCanvas.Height - bottomOffset - size.Height / 2;</span><br><span class="line">           Canvas.SetLeft(ChartCanvas, leftOffset);</span><br><span class="line">           Canvas.SetTop(ChartCanvas,bottomOffset);</span><br><span class="line">           //创建报表的边框</span><br><span class="line">           Rectangle chartRect= new Rectangle();</span><br><span class="line">           chartRect.Stroke = new SolidColorBrush(Colors.Black);</span><br><span class="line">           chartRect.Width=ChartCanvas.Width;</span><br><span class="line">           chartRect.Height=ChartCanvas.Height;</span><br><span class="line">           ChartCanvas.Children.Add(chartRect);</span><br><span class="line">           //创建垂直线条</span><br><span class="line">           <span class="keyword">if</span> (IsYGrid == <span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">for</span> (dx = Xmin + XTick; dx &lt; Xmax; dx += XTick)</span><br><span class="line">               &#123;</span><br><span class="line">                   gridline = new Line();</span><br><span class="line">                   AddLinePattern();</span><br><span class="line">                   gridline.X1 = NormalizePoint(new Point(dx,Ymin)).X;</span><br><span class="line">                   gridline.Y1 = NormalizePoint(new Point(dx, Ymin)).Y;</span><br><span class="line">                   gridline.X2 = NormalizePoint(new Point(dx,Ymax)).X;</span><br><span class="line">                   gridline.Y2 = NormalizePoint(new Point(dx, Ymax)).Y;</span><br><span class="line">                   ChartCanvas.Children.Add(gridline);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           //创建水平线条</span><br><span class="line">           <span class="keyword">if</span> (IsXGrid==<span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">for</span> (dy=Ymin+YTick;dy&lt;Ymax;dy+=YTick)</span><br><span class="line">               &#123;</span><br><span class="line">                   gridline = new Line();</span><br><span class="line">                   AddLinePattern();</span><br><span class="line">                   gridline.X1 = NormalizePoint(new Point(Xmin, dy)).X;</span><br><span class="line">                   gridline.Y1 = NormalizePoint(new Point(Xmin,dy)).Y;</span><br><span class="line">                   gridline.X2= NormalizePoint(new Point(Xmax,dy)).X;</span><br><span class="line">                   gridline.Y2= NormalizePoint(new Point(Xmax,dy)).Y;</span><br><span class="line">                   ChartCanvas.Children.Add(gridline);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           //创建X轴</span><br><span class="line">           <span class="keyword">for</span> (dx=Xmin;dx&lt;=Xmax;dx+=XTick)</span><br><span class="line">           &#123;</span><br><span class="line">               pt = NormalizePoint(new Point(dx,Ymin));</span><br><span class="line">               tick = new Line();</span><br><span class="line">               tick.Stroke = new SolidColorBrush(Colors.Black);</span><br><span class="line">               tick.X1 = pt.X; tick.Y1=pt.Y;</span><br><span class="line">               tick.X2= pt.X;tick.Y2= pt.Y-5;</span><br><span class="line">               ChartCanvas.Children.Add(tick);</span><br><span class="line">               tb=new TextBlock();</span><br><span class="line">               tb.Text = dx.ToString();</span><br><span class="line">               tb.Measure(new Size(double.PositiveInfinity,double.PositiveInfinity));</span><br><span class="line">               size = tb.DesiredSize;</span><br><span class="line">               textCanvas.Children.Add(tb);</span><br><span class="line">               Canvas.SetLeft(tb,leftOffset+pt.X-size.Width/2);</span><br><span class="line">               Canvas.SetTop(tb,pt.Y+10+size.Height/2);</span><br><span class="line">           &#125;</span><br><span class="line">           //创建Y轴</span><br><span class="line">           <span class="keyword">for</span> (dy=Ymin;dy&lt;=Ymax;dy+=YTick)</span><br><span class="line">           &#123;</span><br><span class="line">               pt=NormalizePoint(new Point(Xmin,dy));</span><br><span class="line">               tick=new Line();</span><br><span class="line">               tick.Stroke = new SolidColorBrush(Colors.Black);</span><br><span class="line"></span><br><span class="line">               tick.X1 = pt.X;</span><br><span class="line">               tick.Y1=pt.Y;</span><br><span class="line">               tick.X2= pt.X+5;</span><br><span class="line">               tick.Y2= pt.Y;</span><br><span class="line">               ChartCanvas.Children.Add(tick);</span><br><span class="line">               tb.Text = dy.ToString();</span><br><span class="line">               tb.Measure(new Size(double.PositiveInfinity,double.PositiveInfinity));</span><br><span class="line">               size= tb.DesiredSize;</span><br><span class="line">               textCanvas.Children.Add(tb);</span><br><span class="line">               Canvas.SetLeft(tb,-30);</span><br><span class="line">               Canvas.SetTop(tb,pt.Y);</span><br><span class="line">           &#125;</span><br><span class="line">           //图表标题</span><br><span class="line">           tbTitle.Text = Title;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 添加线条的样式</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private void <span class="function"><span class="title">AddLinePattern</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           gridline.Stroke = gridlineColor;</span><br><span class="line">           gridline.StrokeThickness = 1;</span><br><span class="line">           switch (gridlinePattern)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">case</span> GridlinePatternEnum.Solid:</span><br><span class="line">                   <span class="built_in">break</span>;</span><br><span class="line">               <span class="keyword">case</span> GridlinePatternEnum.Dash:</span><br><span class="line">                   DoubleCollection doubleCollection= new DoubleCollection();</span><br><span class="line">                   doubleCollection.Add(4);</span><br><span class="line">                   doubleCollection.Add(3);</span><br><span class="line">                   gridline.StrokeDashArray= doubleCollection;</span><br><span class="line">                   <span class="built_in">break</span>;</span><br><span class="line">               <span class="keyword">case</span> GridlinePatternEnum.Dot:</span><br><span class="line">                   doubleCollection = new DoubleCollection();</span><br><span class="line">                   doubleCollection.Add(1);</span><br><span class="line">                   doubleCollection.Add(2);</span><br><span class="line">                   gridline.StrokeDashArray= doubleCollection;</span><br><span class="line">                   <span class="built_in">break</span>;</span><br><span class="line">               <span class="keyword">case</span> GridlinePatternEnum.DashDot:</span><br><span class="line">                   doubleCollection = new DoubleCollection();</span><br><span class="line">                   doubleCollection.Add(4);</span><br><span class="line">                   doubleCollection.Add(2);</span><br><span class="line">                   doubleCollection.Add(1);</span><br><span class="line">                   doubleCollection.Add(2);</span><br><span class="line">                   gridline.StrokeDashArray= doubleCollection;</span><br><span class="line">                   <span class="built_in">break</span>;</span><br><span class="line">               default:</span><br><span class="line">                   <span class="built_in">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>13.32.定义线性数据图形类<br>线性数据图是在报表展现数据走势的图形,定义一个线性数据图形类DataSeries.在这个类里面定义了一个多边形Polyline类的属性LineSeries来表示绘制线性图形,除此之外,还有线条颜色属性LineColor,线条大小属性LineThickness.线条类型属性LinePattern和图形名称属性SeriesName.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 线性数据图形类</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   public class DataSeries</span><br><span class="line">   &#123;</span><br><span class="line">       //线性图表</span><br><span class="line">       private Polyline lineSeries = new Polyline();</span><br><span class="line">       private Brush lineColor;</span><br><span class="line">       private double lineThickness = 1;</span><br><span class="line">       private string seriesName=<span class="string">&quot;Default Name&quot;</span>;</span><br><span class="line">       private LinePatternEnum linePattern;</span><br><span class="line"></span><br><span class="line">       public <span class="function"><span class="title">DataSeries</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           LineColor = new SolidColorBrush(Colors.Black);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       public Polyline LineSeries &#123; get =&gt; lineSeries; <span class="built_in">set</span> =&gt; lineSeries = value; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 线条颜色</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public Brush LineColor &#123; get =&gt; lineColor; <span class="built_in">set</span> =&gt; lineColor = value; &#125;</span><br><span class="line">       //线条大小</span><br><span class="line">       public double LineThickness &#123; get =&gt; lineThickness; <span class="built_in">set</span> =&gt; lineThickness = value; &#125;</span><br><span class="line">       //线条类型</span><br><span class="line">       public LinePatternEnum LinePattern &#123; get =&gt; linePattern; <span class="built_in">set</span> =&gt; linePattern = value; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 图形名称</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public string SeriesName &#123; get =&gt; seriesName; <span class="built_in">set</span> =&gt; seriesName = value; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 添加线条的样式</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public void <span class="function"><span class="title">AddLinePattern</span></span>() &#123; </span><br><span class="line">           //</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">public enum LinePatternEnum</span><br><span class="line">   &#123;</span><br><span class="line">       Solid=1,</span><br><span class="line">       Dash=2,</span><br><span class="line">       Dot=3,</span><br><span class="line">       DashDot=4,</span><br><span class="line">       None=5</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>上面的DataSeries类只是封装了单个线性图形的基本属性和形状,下面再定义一个DataCollection类表示图形数据集合类,用于实现把线性图形按照定义的坐标体系添加到界面的面板上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 图形数据集合类</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   public class DataCollection</span><br><span class="line">   &#123;</span><br><span class="line">       private List&lt;DataSeries&gt; dataList;</span><br><span class="line"></span><br><span class="line">       //线性数据图形类集合</span><br><span class="line">       public List&lt;DataSeries&gt; DataList &#123; get =&gt; dataList; <span class="built_in">set</span> =&gt; dataList = value; &#125;</span><br><span class="line">       public <span class="function"><span class="title">DataCollection</span></span>() &#123; </span><br><span class="line">           dataList= new List&lt;DataSeries&gt;();</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 往Canvas面板上按照坐标系的坐标来添加线性图形</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;canvas&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;cs&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       public void AddLines(Canvas canvas,ChartStyle cs) &#123;</span><br><span class="line">           int j = 0;</span><br><span class="line">           foreach (DataSeries ds <span class="keyword">in</span> dataList)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (ds.SeriesName==<span class="string">&quot;Default Name&quot;</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   ds.SeriesName = <span class="string">&quot;DataSeries&quot;</span> + j.ToString();</span><br><span class="line">               &#125;</span><br><span class="line">               ds.AddLinePattern();</span><br><span class="line">               <span class="keyword">for</span> (int i = 0; i &lt; ds.LineSeries.Points.Count; i++)</span><br><span class="line">               &#123;</span><br><span class="line">                   ds.LineSeries.Points[i] = cs.NormalizePoint(ds.LineSeries.Points[i]);</span><br><span class="line">               &#125;</span><br><span class="line">               canvas.Children.Add(ds.LineSeries);</span><br><span class="line">               j++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>13.33.实现图例<br>图例的实现其实就是把整个报表用到的图形用简单的线段画出来并标出名称,图例类Legend类里面定义了一个AddLegend方法,通过使用报表中的ChartStyleGridlines对象和DataCollection对象作为参数,然后取出报表中图形的样本和名称,添加到Canvas面板上,这样就实现了一个图例的模块.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">public class Legend</span><br><span class="line">   &#123;</span><br><span class="line">       public bool IsLegend &#123; get; private <span class="built_in">set</span>; &#125;</span><br><span class="line">       public Canvas legendCanvas &#123; get; private <span class="built_in">set</span>; &#125;</span><br><span class="line">       public bool IsBorder &#123; get; private <span class="built_in">set</span>; &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 添加图例</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;cs&quot;</span>&gt;报表的网格图形对象&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;dc&quot;</span>&gt;报表的图形数据集合对象&lt;/param&gt;</span><br><span class="line">       public void AddLegend(ChartStyleGridlines cs,DataCollection dc) &#123; </span><br><span class="line">           TextBlock tb= new TextBlock();</span><br><span class="line">           <span class="keyword">if</span> (dc.DataList.Count &lt; 1 || !IsLegend)</span><br><span class="line">               <span class="built_in">return</span>;</span><br><span class="line">           int n = 0;</span><br><span class="line">           //取出每个图形的名称</span><br><span class="line">           string[] legendLabels = new string[dc.DataList.Count];</span><br><span class="line">           foreach (DataSeries ds <span class="keyword">in</span> dc.DataList)</span><br><span class="line">           &#123;</span><br><span class="line">               legendLabels[n] = ds.SeriesName;</span><br><span class="line">               n++;</span><br><span class="line">           &#125;</span><br><span class="line">           double legendWidth = 0;</span><br><span class="line">           Size size = new Size(0,0);</span><br><span class="line">           //创建每个图形名称的TextBlock控件</span><br><span class="line">           <span class="keyword">for</span> (int i = 0; i &lt; legendLabels.Length; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               tb = new TextBlock();</span><br><span class="line">               tb.Text= legendLabels[i];</span><br><span class="line">               tb.Measure(new Size(double.PositiveInfinity,double.PositiveInfinity));</span><br><span class="line">               size = tb.DesiredSize;</span><br><span class="line">               <span class="keyword">if</span> (legendWidth &lt; size.Width)</span><br><span class="line">                   legendWidth = size.Width;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           //80是预留给线条示例的长度位置</span><br><span class="line">           legendWidth += 80;</span><br><span class="line">           legendCanvas.Width = legendWidth + 5;</span><br><span class="line">           //30是分配给每个图形示例的高度</span><br><span class="line">           double legendHeight=30*dc.DataList.Count;</span><br><span class="line"></span><br><span class="line">           double sx = 6;</span><br><span class="line">           double sy = 15;</span><br><span class="line">           double textheight = size.Height;</span><br><span class="line">           double lineLength = 34;</span><br><span class="line">           //创建图例的边框</span><br><span class="line">           Rectangle legendRect= new Rectangle();</span><br><span class="line">           legendRect.Stroke = new SolidColorBrush(Colors.Black);</span><br><span class="line">           legendRect.Width= legendWidth;</span><br><span class="line">           legendRect.Height= legendHeight;</span><br><span class="line">           <span class="keyword">if</span> (IsLegend &amp;&amp; IsBorder)</span><br><span class="line">               legendCanvas.Children.Add(legendRect);</span><br><span class="line">           n = 1;</span><br><span class="line">           //创建每个图形的线段</span><br><span class="line">           foreach (DataSeries ds <span class="keyword">in</span> dc.DataList)</span><br><span class="line">           &#123;</span><br><span class="line">               double xSymbol = sx + lineLength / 2;</span><br><span class="line">               double xText = 2 * sx + lineLength;</span><br><span class="line">               double yText = n * sy + (2 * n - 1) * textheight / 2;</span><br><span class="line">               Line line=new Line();</span><br><span class="line">               line.X1 = sx;</span><br><span class="line">               line.Y1=sy;</span><br><span class="line">               line.X2 = sx + lineLength;</span><br><span class="line">               line.Y2 = yText;</span><br><span class="line">               legendCanvas.Children.Add(line);</span><br><span class="line">               tb=new TextBlock();</span><br><span class="line">               tb.FontSize = 15;</span><br><span class="line">               tb.Text = ds.SeriesName;</span><br><span class="line">               legendCanvas.Children.Add(tb);</span><br><span class="line">               Canvas.SetTop(tb,yText-15);</span><br><span class="line">               Canvas.SetLeft(tb,xText+10);</span><br><span class="line">               n++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>13.34.实现线性报表<br>上面已经把图形表格,坐标轴,线性数据图形和图例的相关逻辑都封装好了,下面就要利用这些封装好的模板来创建一个线性报表,首先需要再Xaml页面上定义3个Canvas面板分别表示图例面板,坐标轴面板和线性图形面板,然后再利用上面封装的类来初始化这些面板生成线性报表.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.BlankPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span> xmlns:controls=<span class="string">&quot;using:App1.Controls&quot;</span> xmlns:models=<span class="string">&quot;using:App1.Models&quot;</span> xmlns:converters=<span class="string">&quot;using:App1.Converters&quot;</span></span><br><span class="line">   </span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;Page.Resources&gt;</span><br><span class="line">        </span><br><span class="line">            &lt;DataTemplate x:Key=<span class="string">&quot;PersonNameDataTemplate&quot;</span>&gt;</span><br><span class="line">            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;,&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/DataTemplate&gt;</span><br><span class="line">        &lt;Style x:Name=<span class="string">&quot;ItemsControlStyle&quot;</span> TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">            &lt;Setter Property=<span class="string">&quot;Template&quot;</span>&gt;</span><br><span class="line">                &lt;Setter.Value&gt;</span><br><span class="line">                    &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                        &lt;ScrollViewer BorderBrush=<span class="string">&quot;Red&quot;</span> BorderThickness=<span class="string">&quot;6&quot;</span>&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Background=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                                &lt;Border BorderBrush=<span class="string">&quot;Yellow&quot;</span> BorderThickness=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">                                    &lt;ItemsPresenter/&gt;</span><br><span class="line">                                &lt;/Border&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/ScrollViewer&gt;</span><br><span class="line">                    &lt;/ControlTemplate&gt;</span><br><span class="line">                &lt;/Setter.Value&gt;</span><br><span class="line">            &lt;/Setter&gt;</span><br><span class="line">        &lt;/Style&gt;</span><br><span class="line">        &lt;!--选中数据项的样式--&gt;</span><br><span class="line">        &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateSelectKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateSelectName&quot;</span>&gt;</span><br><span class="line">            &lt;Grid Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span> Background=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid&gt;</span><br><span class="line">        &lt;/DataTemplate&gt;</span><br><span class="line">        &lt;!--默认数据项的样式,注意默认的数据项样式不能在C<span class="comment">#中再次调用--&gt;</span></span><br><span class="line">        &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateDefaultKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateDefaultName&quot;</span>&gt;</span><br><span class="line">            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span>&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;,&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/DataTemplate&gt;</span><br><span class="line">        &lt;!--非选中数据项的样式--&gt;</span><br><span class="line">        &lt;DataTemplate x:Key=<span class="string">&quot;dataTemplateNoSelectKey&quot;</span> x:Name=<span class="string">&quot;dataTemplateNoSelectName&quot;</span>&gt;</span><br><span class="line">            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Tapped=<span class="string">&quot;StackPanel_Tapped&quot;</span>&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;,&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line">        &lt;/DataTemplate&gt;</span><br><span class="line"></span><br><span class="line">        &lt;models:Clock x:Key=<span class="string">&quot;clock&quot;</span>/&gt;</span><br><span class="line">        &lt;converters:HoursToDayStringConverter x:Key=<span class="string">&quot;booleanToDayString&quot;</span>/&gt;</span><br><span class="line">    &lt;/Page.Resources&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;auto&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;Grid&gt;</span><br><span class="line">            &lt;Button x:Name=<span class="string">&quot;backButton&quot;</span> Margin=<span class="string">&quot;24,24,24,24&quot;</span> Click=<span class="string">&quot;backButton_Click&quot;</span> Style=<span class="string">&quot;&#123;StaticResource NavigationBackButtonNormalStyle&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">        &lt;Pivot Title=<span class="string">&quot;控件&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Border&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Border Background=<span class="string">&quot;Coral&quot;</span> Padding=<span class="string">&quot;10&quot;</span> CornerRadius=<span class="string">&quot;30,38,150,29&quot;</span> BorderThickness=<span class="string">&quot;8 15 10 2&quot;</span> BorderBrush=<span class="string">&quot;Azure&quot;</span>/&gt;</span><br><span class="line">                    &lt;Border BorderThickness=<span class="string">&quot;1,3,5,7&quot;</span> BorderBrush=<span class="string">&quot;Blue&quot;</span> CornerRadius=<span class="string">&quot;10&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;蓝色的Border&quot;</span> ToolTipService.ToolTip=<span class="string">&quot;这是蓝色的Border吗?&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> TextAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;/Border&gt;</span><br><span class="line">                    &lt;!--单击后显示边框--&gt;</span><br><span class="line">                    &lt;Border x:Name=<span class="string">&quot;TextBorder&quot;</span> BorderThickness=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                        &lt;Border.BorderBrush&gt;</span><br><span class="line">                            &lt;SolidColorBrush Color=<span class="string">&quot;Red&quot;</span> Opacity=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Border.BorderBrush&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;请单击我一下!&quot;</span> PointerPressed=<span class="string">&quot;TextBlock_PointerPressed&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Border&gt;</span><br><span class="line">                    &lt;!--颜色渐变的边框--&gt;</span><br><span class="line">                    &lt;Border x:Name=<span class="string">&quot;brdTest&quot;</span> BorderThickness=<span class="string">&quot;4&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;150&quot;</span>&gt;</span><br><span class="line">                        &lt;Border.BorderBrush&gt;</span><br><span class="line">                            &lt;LinearGradientBrush x:Name=<span class="string">&quot;borderLinearGradientBrush&quot;</span> MappingMode=<span class="string">&quot;RelativeToBoundingBox&quot;</span> StartPoint=<span class="string">&quot;0.5,0&quot;</span> EndPoint=<span class="string">&quot;0.5,1&quot;</span>&gt;</span><br><span class="line">                                &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                    &lt;GradientStop Color=<span class="string">&quot;Yellow&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                                    &lt;GradientStop Color=<span class="string">&quot;Blue&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                                &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                            &lt;/LinearGradientBrush&gt;</span><br><span class="line">                        &lt;/Border.BorderBrush&gt;</span><br><span class="line">                    &lt;/Border&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;HyperlinkButton&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;HyperlinkButton Width=<span class="string">&quot;200&quot;</span> Content=<span class="string">&quot;链接按钮&quot;</span> Background=<span class="string">&quot;Blue&quot;</span> Foreground=<span class="string">&quot;Orange&quot;</span> FontWeight=<span class="string">&quot;Bold&quot;</span> Margin=<span class="string">&quot;0,0,0,30&quot;</span>/&gt;</span><br><span class="line">                    &lt;HyperlinkButton Content=<span class="string">&quot;Google&quot;</span> NavigateUri=<span class="string">&quot;http://goole.com&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                &lt;ScrollViewer&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Vertical&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;你好&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                        &lt;StackPanel x:Name=<span class="string">&quot;sp_Show&quot;</span>&gt;</span><br><span class="line">                            &lt;Button x:Name=<span class="string">&quot;bt_addXaml&quot;</span> Content=<span class="string">&quot;加载Xaml按钮&quot;</span> Click=<span class="string">&quot;bt_addXaml_Click&quot;</span>/&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;StackPanel x:Name=<span class="string">&quot;stackPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                            &lt;TextBox&gt;</span><br><span class="line">                            &lt;/TextBox&gt;</span><br><span class="line">                            &lt;Button Content=<span class="string">&quot;遍历&quot;</span> Click=<span class="string">&quot;Button_Click1&quot;</span>&gt;</span><br><span class="line">                            &lt;/Button&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;Button HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> Content=<span class="string">&quot;Hello,App&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> Height=<span class="string">&quot;80&quot;</span> Name=<span class="string">&quot;button1&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;300&quot;</span> Click=<span class="string">&quot;button1_Click&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮2&quot;</span> FontSize=<span class="string">&quot;48&quot;</span> FontStyle=<span class="string">&quot;Italic&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> Background=<span class="string">&quot;Blue&quot;</span> BorderThickness=<span class="string">&quot;10&quot;</span> BorderBrush=<span class="string">&quot;Yellow&quot;</span> Padding=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;Button Width=<span class="string">&quot;165&quot;</span>&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;Assets/StoreLogo.png&quot;</span> Stretch=<span class="string">&quot;None&quot;</span> Height=<span class="string">&quot;61&quot;</span> Width=<span class="string">&quot;94&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/Button&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;Button&gt;</span><br><span class="line">                            &lt;SymbolIcon Symbol=<span class="string">&quot;Emoji2&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Button&gt;</span><br><span class="line">                        &lt;StackPanel&gt;</span><br><span class="line">                            &lt;TextBox InputScope=<span class="string">&quot;TelephoneNumber&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBox.Header&gt;</span><br><span class="line">                                    请输入电话号码:</span><br><span class="line">                                &lt;/TextBox.Header&gt;</span><br><span class="line">                            &lt;/TextBox&gt;</span><br><span class="line">                            &lt;TextBox x:Name=<span class="string">&quot;TextBox1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> AcceptsReturn=<span class="string">&quot;True&quot;</span> Header=<span class="string">&quot;输入信息:&quot;</span> SelectionHighlightColor=<span class="string">&quot;Red&quot;</span> TextChanged=<span class="string">&quot;TextBox1_TextChanged&quot;</span> SelectionChanged=<span class="string">&quot;TextBox1_SelectionChanged&quot;</span> Paste=<span class="string">&quot;TextBox1_Paste&quot;</span>/&gt;</span><br><span class="line">                            &lt;TextBlock x:Name=<span class="string">&quot;textblock2&quot;</span> Text=<span class="string">&quot;操作信息:&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                            &lt;TextBlock x:Name=<span class="string">&quot;textBlock1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ScrollViewer&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Orientation=<span class="string">&quot;Vertical&quot;</span>&gt;</span><br><span class="line">                    &lt;ScrollViewer Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span> VerticalScrollBarVisibility=<span class="string">&quot;Visible&quot;</span> HorizontalScrollBarVisibility=<span class="string">&quot;Visible&quot;</span>&gt;</span><br><span class="line">                    &lt;ScrollViewer.Content&gt;</span><br><span class="line">                        &lt;StackPanel&gt;</span><br><span class="line">                            &lt;Image Source=<span class="string">&quot;ms-appx:///Assets/StoreLogo.png&quot;</span>/&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;/ScrollViewer.Content&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">               </span><br><span class="line">                    &lt;ScrollViewer Name=<span class="string">&quot;scrollViewer1&quot;</span> VerticalScrollBarVisibility=<span class="string">&quot;Hidden&quot;</span> Height=<span class="string">&quot;300&quot;</span>&gt;</span><br><span class="line">                        &lt;StackPanel Name=<span class="string">&quot;stkpnImage&quot;</span>/&gt;</span><br><span class="line">                    &lt;/ScrollViewer&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;往上&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Click=<span class="string">&quot;btnUp_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;往下&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Click=<span class="string">&quot;btnDown_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;停止&quot;</span> FontSize=<span class="string">&quot;30&quot;</span></span><br><span class="line">                            Click=<span class="string">&quot;stop_Click&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ProgressBar&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;选择ProgressBar的类型:&quot;</span>/&gt;</span><br><span class="line">                    &lt;RadioButton Content=<span class="string">&quot;Determinate类型&quot;</span> Height=<span class="string">&quot;71&quot;</span> Name=<span class="string">&quot;radioButton1&quot;</span> GroupName=<span class="string">&quot;Type&quot;</span>/&gt;</span><br><span class="line">                    &lt;RadioButton Content=<span class="string">&quot;Indeterminate类型&quot;</span> Height=<span class="string">&quot;71&quot;</span> Name=<span class="string">&quot;radioButton2&quot;</span> GroupName=<span class="string">&quot;Type&quot;</span> IsChecked=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;启动ProgressBar&quot;</span> Height=<span class="string">&quot;72&quot;</span> x:Name=<span class="string">&quot;begin&quot;</span> Click=<span class="string">&quot;begin_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;取消ProgressBar&quot;</span> Height=<span class="string">&quot;72&quot;</span> x:Name=<span class="string">&quot;cancel&quot;</span> Click=<span class="string">&quot;cancel_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;ProgressBar x:Name=<span class="string">&quot;progressBar1&quot;</span> IsIndeterminate=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Slider&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid Name=<span class="string">&quot;controlGrid&quot;</span>&gt;</span><br><span class="line">                        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">                            &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                            &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                            &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">                        &lt;!--设置红色--&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;红色&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;redSlider&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span></span><br><span class="line">                        ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;redText&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;0&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--设置绿色--&gt;</span><br><span class="line">                        &lt;TextBlock Grid.Column=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;绿色&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;greenSlider&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span> ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;&lt;/Slider&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;greenText&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--设置蓝色--&gt;</span><br><span class="line">                        &lt;TextBlock Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;蓝色&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;blueSlider&quot;</span> Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span> ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;blueText&quot;</span> Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;0&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;!--设置--&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                    &lt;Ellipse Height=<span class="string">&quot;100&quot;</span> x:Name=<span class="string">&quot;ellipse2&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;1&quot;</span> Width=<span class="string">&quot;224&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;textBlockColor&quot;</span> Text=<span class="string">&quot;颜色&quot;</span> FontSize=<span class="string">&quot;26&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;TimePicker DatePicker&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Grid.Row=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                    &lt;TimePicker x:Name=<span class="string">&quot;time&quot;</span> Header=<span class="string">&quot;请选择时间:&quot;</span> TimeChanged=<span class="string">&quot;time_TimeChanged&quot;</span>/&gt;</span><br><span class="line">                    &lt;DatePicker x:Name=<span class="string">&quot;date&quot;</span> Header=<span class="string">&quot;请选择日期:&quot;</span></span><br><span class="line">                        DateChanged=<span class="string">&quot;date_DateChanged&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;infoTime&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Hub&quot;</span>&gt;</span><br><span class="line">                &lt;!--在大标题上添加程序的图标--&gt;            </span><br><span class="line">                    &lt;Hub&gt;</span><br><span class="line">                        &lt;Hub.Header&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;Assets/StoreLogo.scale-100.png&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;My App&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/Hub.Header&gt;</span><br><span class="line">                        &lt;HubSection Header=<span class="string">&quot;first item&quot;</span>&gt;</span><br><span class="line">                            &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                                &lt;DataTemplate&gt;</span><br><span class="line">                                    &lt;StackPanel&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;第一个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;这是第一个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/StackPanel&gt;</span><br><span class="line">                                &lt;/DataTemplate&gt;</span><br><span class="line">                            &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                        &lt;/HubSection&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;HubSection Header=<span class="string">&quot;second item&quot;</span>&gt;</span><br><span class="line">                            &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                                &lt;DataTemplate&gt;</span><br><span class="line">                                    &lt;StackPanel&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;第二个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;这是第二个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/StackPanel&gt;</span><br><span class="line">                                &lt;/DataTemplate&gt;</span><br><span class="line">                            &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                        &lt;/HubSection&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;HubSection Header=<span class="string">&quot;Third item&quot;</span>&gt;</span><br><span class="line">                            &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                                &lt;DataTemplate&gt;</span><br><span class="line">                                    &lt;StackPanel&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;第三个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;这是第三个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/StackPanel&gt;</span><br><span class="line">                                &lt;/DataTemplate&gt;</span><br><span class="line">                            &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                        &lt;/HubSection&gt;</span><br><span class="line">                    &lt;/Hub&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Flyout&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show Flyout&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;Flyout&gt;</span><br><span class="line">                                &lt;StackPanel&gt;</span><br><span class="line">                                    &lt;TextBox PlaceholderText=<span class="string">&quot;Please Enter Name.&quot;</span>/&gt;</span><br><span class="line">                                    &lt;Button HorizontalAlignment=<span class="string">&quot;Right&quot;</span> Content=<span class="string">&quot;确定&quot;</span>/&gt;</span><br><span class="line">                                &lt;/StackPanel&gt;</span><br><span class="line">                            &lt;/Flyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出上下文菜单,点击菜单后改变当前按钮上的文本内容--&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;menuFlyoutButton&quot;</span> Content=<span class="string">&quot;Show MenuFlyout&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;MenuFlyout&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 1&quot;</span> Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 2&quot;</span></span><br><span class="line">                                                Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 3&quot;</span> Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                            &lt;/MenuFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;!--浮出选择日期弹窗,点击确认后触发DatePicked事件,然后可以获取选中的日期--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show DatePicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;DatePickerFlyout DatePicked=<span class="string">&quot;DatePickerFlyout_DatePicked&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出选择时间弹窗,点击确认后触发DatePicked事件,然后可以获取选中的时间--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show TimePicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;TimePickerFlyout TimePicked=<span class="string">&quot;TimePickerFlyout_TimePicked&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出选择弹窗,显示底下的确认取消菜单栏并且处理其确认事件Confirmed--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show Picker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;PickerFlyout Confirmed=<span class="string">&quot;PickerFlyout_Confirmed&quot;</span></span><br><span class="line">                                          ConfirmationButtonsVisible=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;你确定吗？？？？？&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;0 100 0 0&quot;</span>/&gt;</span><br><span class="line">                            &lt;/PickerFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">&lt;!--浮出选择列表弹窗,绑定集合的数据,处理选中的事件ItemsPicked--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show DataPicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;ListPickerFlyout x:Name=<span class="string">&quot;listPickerFlyout&quot;</span> Title=<span class="string">&quot;Select Mobile Tag：&quot;</span> ItemsPicked=<span class="string">&quot;listPickerFlyout_ItemsPicked&quot;</span>&gt;</span><br><span class="line">                                &lt;ListPickerFlyout.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                        </span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/ListPickerFlyout.ItemTemplate&gt;</span><br><span class="line">                            &lt;/ListPickerFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--使用附加属性FlyoutBase.AttachedFlyout来实现Flyout控件--&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Please Click Me!&quot;</span> Tapped=<span class="string">&quot;TextBlock_Tapped&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>&gt;</span><br><span class="line">                        &lt;FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">                            &lt;Flyout&gt;</span><br><span class="line">                                &lt;TextBox Text=<span class="string">&quot;你好!&quot;</span>&gt;</span><br><span class="line">                                    </span><br><span class="line">                                    &lt;/TextBox&gt;</span><br><span class="line">                                &lt;/Flyout&gt;</span><br><span class="line">                            &lt;/FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ComboBox&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;!--纯文本的下拉框--&gt;</span><br><span class="line">                    &lt;ComboBox Header=<span class="string">&quot;Colors&quot;</span> PlaceholderText=<span class="string">&quot;Pick a Color&quot;</span>&gt;</span><br><span class="line">                        &lt;x:String&gt;</span><br><span class="line">                            Blue</span><br><span class="line">                        &lt;/x:String&gt;</span><br><span class="line">                        &lt;x:String&gt;</span><br><span class="line">                            Green</span><br><span class="line">                        &lt;/x:String&gt;</span><br><span class="line">                        &lt;x:String&gt;</span><br><span class="line">                            Red</span><br><span class="line">                        &lt;/x:String&gt;</span><br><span class="line">                        &lt;x:String&gt;</span><br><span class="line">                            Yellow</span><br><span class="line">                        &lt;/x:String&gt;</span><br><span class="line">                    &lt;/ComboBox&gt;</span><br><span class="line">                    &lt;!--数据绑定的下拉框--&gt;</span><br><span class="line">                    &lt;ComboBox x:Name=<span class="string">&quot;comboBox2&quot;</span> DropDownClosed=<span class="string">&quot;comboBox2_DropDownClosed&quot;</span>&gt;</span><br><span class="line">                        &lt;ComboBox.ItemTemplate&gt;</span><br><span class="line">                            &lt;DataTemplate&gt;</span><br><span class="line">                                &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Age&#125;&quot;</span> Margin=<span class="string">&quot;50 10 0 0&quot;</span>/&gt;</span><br><span class="line">                                &lt;/StackPanel&gt;</span><br><span class="line">                            &lt;/DataTemplate&gt;</span><br><span class="line">                        &lt;/ComboBox.ItemTemplate&gt;</span><br><span class="line">                    &lt;/ComboBox&gt;</span><br><span class="line">                    </span><br><span class="line">                   &lt;!--数据绑定的下拉框关闭后,这里显示选中的选项的信息--&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;Info&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SplitView&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;ToggleButton Click=<span class="string">&quot;ToggleButton_Click&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span>&gt;</span><br><span class="line">                        &lt;ToggleButton.Content&gt;</span><br><span class="line">                            &lt;Border Background=<span class="string">&quot;Transparent&quot;</span> Width=<span class="string">&quot;40&quot;</span> Height=<span class="string">&quot;40&quot;</span>&gt;</span><br><span class="line">                                &lt;FontIcon x:Name=<span class="string">&quot;hamburger&quot;</span> FontFamily=<span class="string">&quot;Segoe MDL2 Assets&quot;</span> Glyph=<span class="string">&quot;&amp;#xE700;&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/Border&gt;</span><br><span class="line">                        &lt;/ToggleButton.Content&gt;</span><br><span class="line">                    &lt;/ToggleButton&gt;</span><br><span class="line">                    &lt;SplitView x:Name=<span class="string">&quot;Splitter&quot;</span> IsPaneOpen=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                        &lt;SplitView.Pane&gt;</span><br><span class="line">                            &lt;StackPanel VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                                &lt;Button Content=<span class="string">&quot;菜单1&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                                &lt;Button Content=<span class="string">&quot;菜单2&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                                &lt;Button Content=<span class="string">&quot;菜单3&quot;</span></span><br><span class="line">                                        Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                                &lt;Button Content=<span class="string">&quot;菜单4&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/SplitView.Pane&gt;</span><br><span class="line">                        &lt;Grid&gt;</span><br><span class="line">                            &lt;TextBlock x:Name=<span class="string">&quot;tb&quot;</span> Text=<span class="string">&quot;&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Grid&gt;</span><br><span class="line">                    &lt;/SplitView&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ScrollableTextBlock&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;ContentPanel&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;controls:ScrollableTextBlock x:Name=<span class="string">&quot;scrollableTextBlock1&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Canvas&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Canvas&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮2&quot;</span> Canvas.Left=<span class="string">&quot;30&quot;</span> Canvas.Top=<span class="string">&quot;30&quot;</span> Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> Canvas.Left=<span class="string">&quot;30&quot;</span> Canvas.Top=<span class="string">&quot;30&quot;</span> Background=<span class="string">&quot;Blue&quot;</span> Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span> Background=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;200&quot;</span></span><br><span class="line">                                Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮3&quot;</span> Canvas.Left=<span class="string">&quot;170&quot;</span></span><br><span class="line">                                Canvas.Top=<span class="string">&quot;170&quot;</span> Background=<span class="string">&quot;Yellow&quot;</span></span><br><span class="line">                                Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Background=<span class="string">&quot;LimeGreen&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> Canvas.Left=<span class="string">&quot;30&quot;</span> Canvas.Top=<span class="string">&quot;30&quot;</span> Background=<span class="string">&quot;Blue&quot;</span> Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Background=<span class="string">&quot;White&quot;</span>&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Canvas.Left=<span class="string">&quot;30&quot;</span></span><br><span class="line">                                Canvas.Top=<span class="string">&quot;30&quot;</span> Background=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Canvas.Left=<span class="string">&quot;130&quot;</span> Canvas.Top=<span class="string">&quot;30&quot;</span> Background=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;渐变矩形&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Background=<span class="string">&quot;White&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;400&quot;</span> Width=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;360&quot;</span> Width=<span class="string">&quot;360&quot;</span> Canvas.Left=<span class="string">&quot;20&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;70&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.2&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;320&quot;</span> Width=<span class="string">&quot;320&quot;</span> Canvas.Left=<span class="string">&quot;40&quot;</span> Canvas.Top=<span class="string">&quot;90&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.3&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;280&quot;</span> Width=<span class="string">&quot;280&quot;</span> Canvas.Left=<span class="string">&quot;60&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;110&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.4&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;240&quot;</span> Width=<span class="string">&quot;240&quot;</span> Canvas.Left=<span class="string">&quot;80&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;130&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;150&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.6&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;160&quot;</span> Width=<span class="string">&quot;160&quot;</span> Canvas.Left=<span class="string">&quot;120&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;170&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.3&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;120&quot;</span> Width=<span class="string">&quot;120&quot;</span> Canvas.Left=<span class="string">&quot;140&quot;</span> Canvas.Top=<span class="string">&quot;190&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.4&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;80&quot;</span> Width=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;160&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;210&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;40&quot;</span> Width=<span class="string">&quot;40&quot;</span> Canvas.Left=<span class="string">&quot;180&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;230&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.6&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;RelativePanel&quot;</span>&gt;</span><br><span class="line">                &lt;RelativePanel VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt1&quot;</span> Content=<span class="string">&quot;按钮1&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt2&quot;</span> Content=<span class="string">&quot;按钮2&quot;</span> RelativePanel.RightOf=<span class="string">&quot;bt1&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt3&quot;</span> Content=<span class="string">&quot;按钮3... ...&quot;</span></span><br><span class="line">                            RelativePanel.AlignLeftWith=<span class="string">&quot;bt2&quot;</span></span><br><span class="line">                            RelativePanel.AlignBottomWithPanel=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/RelativePanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Grid&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;3*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;Ellipse Grid.Row=<span class="string">&quot;1&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> VerticalAlignment=<span class="string">&quot;Stretch&quot;</span> MaxWidth=<span class="string">&quot;500&quot;</span> MaxHeight=<span class="string">&quot;500&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Grid.Row=<span class="string">&quot;3&quot;</span> Content=<span class="string">&quot;按钮1&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> Margin=<span class="string">&quot;0 0 0 2&quot;</span></span><br><span class="line">                            MaxHeight=<span class="string">&quot;500&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Grid.Row=<span class="string">&quot;4&quot;</span> Content=<span class="string">&quot;按钮2&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> MaxWidth=<span class="string">&quot;500&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;AdaptiveTrigger&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                        &lt;VisualStateGroup&gt;</span><br><span class="line">                            &lt;VisualState  x:Name=<span class="string">&quot;SideBySideState&quot;</span>&gt;</span><br><span class="line">                                &lt;VisualState.StateTriggers&gt;</span><br><span class="line">                                    &lt;AdaptiveTrigger MinWindowWidth=<span class="string">&quot;600&quot;</span>/&gt;</span><br><span class="line">                                &lt;/VisualState.StateTriggers&gt;</span><br><span class="line">                                &lt;VisualState.Setters&gt;</span><br><span class="line">                                    &lt;Setter Target=<span class="string">&quot;theStackPanel.Orientation&quot;</span> Value=<span class="string">&quot;Horizontal&quot;</span>/&gt;</span><br><span class="line">                                &lt;/VisualState.Setters&gt;</span><br><span class="line">                            &lt;/VisualState&gt;</span><br><span class="line">                        &lt;/VisualStateGroup&gt;</span><br><span class="line">                    &lt;/VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                    &lt;StackPanel x:Name=<span class="string">&quot;theStackPanel&quot;</span> Orientation=<span class="string">&quot;Vertical&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> MinWidth=<span class="string">&quot;150&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮2&quot;</span> MinWidth=<span class="string">&quot;150&quot;</span></span><br><span class="line">                                Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;按钮3&quot;</span> MinWidth=<span class="string">&quot;150&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;MeasureArrange&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;改变高度&quot;</span> Click=<span class="string">&quot;Button_Click_2&quot;</span>/&gt;</span><br><span class="line">                    &lt;controls:TestPanel x:Name=<span class="string">&quot;element1&quot;</span> Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;60&quot;</span> Background=<span class="string">&quot;Red&quot;</span> Margin=<span class="string">&quot;10&quot;</span>/&gt;</span><br><span class="line">                    &lt;controls:TestUIElement x:Name=<span class="string">&quot;element2&quot;</span> Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;60&quot;</span> Background=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;CustomPanel&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;ContentPanel1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;Slider Grid.Row=<span class="string">&quot;0&quot;</span> Value=<span class="string">&quot;5&quot;</span> ValueChanged=<span class="string">&quot;Slider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                    &lt;controls:CirclePanel x:Name=<span class="string">&quot;circlePanel&quot;</span> Radius=<span class="string">&quot;50&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock&gt;Start here&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 2&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 3&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 4&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 5&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 6&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 7&lt;/TextBlock&gt;</span><br><span class="line">                    &lt;/controls:CirclePanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ApplicationDataContainerSettings&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;!--输入应用设置的键--&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;textBlock2&quot;</span> Text=<span class="string">&quot;Key:&quot;</span> Width=<span class="string">&quot;150&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBox x:Name=<span class="string">&quot;txtKey&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;!--输入应用设置的值--&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;0 20 0 0&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;Value:&quot;</span> Width=<span class="string">&quot;150&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBox x:Name=<span class="string">&quot;txtValue&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;保存&quot;</span> x:Name=<span class="string">&quot;btnSave&quot;</span> Click=<span class="string">&quot;btnSave_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除&quot;</span> x:Name=<span class="string">&quot;btnDelete&quot;</span></span><br><span class="line">                            Click=<span class="string">&quot;btnDelete_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;清空所有&quot;</span> x:Name=<span class="string">&quot;deleteall&quot;</span></span><br><span class="line">                            Click=<span class="string">&quot;deleteall_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--显示容器内所有的键的列表,点击选中可以在上面的输入框里面查看和修改它对应的值--&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Keys列表:&quot;</span>/&gt;</span><br><span class="line">                    &lt;ListBox Height=<span class="string">&quot;168&quot;</span> x:Name=<span class="string">&quot;lstKeys&quot;</span> SelectionChanged=<span class="string">&quot;lstKeys_SelectionChanged&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ApplicationDataContainer&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;创建Container&quot;</span> Click=<span class="string">&quot;CreateContainer_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;添加信息&quot;</span> Click=<span class="string">&quot;WriteSetting_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除信息&quot;</span> Click=<span class="string">&quot;DeleteSetting_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除Container&quot;</span> Click=<span class="string">&quot;DeleteContainer_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;OutputTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ApplicationDataCompositeValue&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;创建&quot;</span> Click=<span class="string">&quot;WriteCompositeSetting_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除&quot;</span> Click=<span class="string">&quot;DeleteCompositeSetting_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;OutputTextBlock1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;StorageFolderFile&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBox Header=<span class="string">&quot;文件信息:&quot;</span> x:Name=<span class="string">&quot;infoStorage&quot;</span></span><br><span class="line">                             TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_save&quot;</span> Content=<span class="string">&quot;保存&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_save_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_read&quot;</span> Content=<span class="string">&quot;读取保存的文件&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_read_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_delete&quot;</span> Content=<span class="string">&quot;删除文件&quot;</span></span><br><span class="line">                            Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_delete_Click&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;StreamBuffer&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_crreate&quot;</span> Content=<span class="string">&quot;创建一个测试文件&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_crreate_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_writebuffer&quot;</span> Content=<span class="string">&quot;写入buffer&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_writebuffer_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_readbuffer&quot;</span> Content=<span class="string">&quot;读取buffer&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_readbuffer_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_writestream&quot;</span> Content=<span class="string">&quot;写入stream&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_writestream_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_readstream&quot;</span> Content=<span class="string">&quot;读取stream&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_readstream_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;StreambufferTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;GetFolderByUri&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBox Header=<span class="string">&quot;文件信息:&quot;</span> x:Name=<span class="string">&quot;UriInfo&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_saveuri&quot;</span> Content=<span class="string">&quot;创建文件&quot;</span> Click=<span class="string">&quot;bt_save_Click_1&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_readuri&quot;</span> Content=<span class="string">&quot;通过URI读取文件&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_read_Click_1&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;JsonObject&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Write your message&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox x:Name=<span class="string">&quot;userName&quot;</span> Header=<span class="string">&quot;Name:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox x:Name=<span class="string">&quot;userAge&quot;</span> Header=<span class="string">&quot;Age:&quot;</span> InputScope=<span class="string">&quot;Number&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Your study school:&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                    &lt;CheckBox Content=<span class="string">&quot;Haerbing School&quot;</span> x:Name=<span class="string">&quot;school1&quot;</span>/&gt;</span><br><span class="line">                    &lt;CheckBox Content=<span class="string">&quot;LanXiang School&quot;</span> x:Name=<span class="string">&quot;school2&quot;</span>/&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;保存&quot;</span> x:Name=<span class="string">&quot;save&quot;</span> Click=<span class="string">&quot;save_Click&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;获取保存的信息&quot;</span> x:Name=<span class="string">&quot;get&quot;</span> Click=<span class="string">&quot;get_Click&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;JsonObjectInfo&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Xml&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;ContentPanelShop&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--展示购物清单的列表--&gt;</span><br><span class="line">                        &lt;ListBox FontSize=<span class="string">&quot;48&quot;</span> x:Name=<span class="string">&quot;Files&quot;</span>&gt;</span><br><span class="line">                        &lt;/ListBox&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ApplicationModelPackage&quot;</span>&gt;</span><br><span class="line">                &lt;ScrollViewer&gt;</span><br><span class="line">                    &lt;StackPanel&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;获取安装包的根目录&quot;</span> x:Name=<span class="string">&quot;btnGetFile&quot;</span> Click=<span class="string">&quot;btnGetFile_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;文件夹列表:&quot;</span>/&gt;</span><br><span class="line">                        &lt;ListBox x:Name=<span class="string">&quot;lbFolder&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;打开选中的文件夹&quot;</span> x:Name=<span class="string">&quot;open&quot;</span> Click=<span class="string">&quot;open_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;文件列表:&quot;</span>/&gt;</span><br><span class="line">                        &lt;ListBox x:Name=<span class="string">&quot;lbFile&quot;</span>&gt;</span><br><span class="line">                        &lt;/ListBox&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;在选中文件夹下创建测试文件&quot;</span> x:Name=<span class="string">&quot;create&quot;</span> Click=<span class="string">&quot;create_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;删除选中的文件&quot;</span> x:Name=<span class="string">&quot;delete&quot;</span> Click=<span class="string">&quot;delete_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;AppUri&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;安装包的图片展示:&quot;</span>/&gt;</span><br><span class="line">                    &lt;Image x:Name=<span class="string">&quot;packageImage&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;应用存储的图片展示:&quot;</span>/&gt;</span><br><span class="line">                    &lt;Image x:Name=<span class="string">&quot;appImage&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Line&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas x:Name=<span class="string">&quot;ContentPanelCanvas&quot;</span> Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Geometry&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;!--直线--&gt;</span><br><span class="line">                    &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                        &lt;Path.Data&gt;</span><br><span class="line">                            &lt;LineGeometry StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;400,20&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Path.Data&gt;</span><br><span class="line">                    &lt;/Path&gt;</span><br><span class="line">                    &lt;!--矩形路径--&gt;</span><br><span class="line">                    &lt;Path Fill=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                        &lt;Path.Data&gt;</span><br><span class="line">                            &lt;RectangleGeometry Rect=<span class="string">&quot;20,20,400,50&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Path.Data&gt;</span><br><span class="line">                    &lt;/Path&gt;</span><br><span class="line">                    &lt;!--椭圆路径--&gt;</span><br><span class="line">                    &lt;Path Fill=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                        &lt;Path.Data&gt;</span><br><span class="line">                            &lt;!--&lt;GeometryGroup组合&gt;--&gt;</span><br><span class="line">                            &lt;GeometryGroup FillRule=<span class="string">&quot;EvenOdd&quot;</span>&gt;</span><br><span class="line">                                &lt;RectangleGeometry Rect=<span class="string">&quot;80,50,200,100&quot;</span>/&gt;</span><br><span class="line">                                &lt;EllipseGeometry Center=<span class="string">&quot;300,100&quot;</span> RadiusX=<span class="string">&quot;80&quot;</span> RadiusY=<span class="string">&quot;60&quot;</span>&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/EllipseGeometry&gt;</span><br><span class="line">                            &lt;/GeometryGroup&gt;</span><br><span class="line">                        &lt;/Path.Data&gt;</span><br><span class="line">                    &lt;/Path&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;Path Fill=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">                        &lt;Path.Data&gt;</span><br><span class="line">                            &lt;!--&lt;GeometryGroup组合&gt;--&gt;</span><br><span class="line">                            &lt;GeometryGroup FillRule=<span class="string">&quot;Nonzero&quot;</span>&gt;</span><br><span class="line">                                &lt;RectangleGeometry Rect=<span class="string">&quot;80,50,200,100&quot;</span>/&gt;</span><br><span class="line">                                &lt;EllipseGeometry Center=<span class="string">&quot;300,100&quot;</span> RadiusX=<span class="string">&quot;80&quot;</span> RadiusY=<span class="string">&quot;60&quot;</span>/&gt;</span><br><span class="line">                            &lt;/GeometryGroup&gt;</span><br><span class="line">                        &lt;/Path.Data&gt;</span><br><span class="line">                    &lt;/Path&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Segment&quot;</span>&gt;</span><br><span class="line">                &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                    &lt;Path.Data&gt;</span><br><span class="line">                        &lt;PathGeometry&gt;</span><br><span class="line">                            &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                &lt;PathFigure.Segments&gt;</span><br><span class="line">                                    &lt;LineSegment Point=<span class="string">&quot;100,130&quot;</span>/&gt;</span><br><span class="line">                                &lt;/PathFigure.Segments&gt;</span><br><span class="line">                            &lt;/PathFigure&gt;</span><br><span class="line">                        &lt;/PathGeometry&gt;</span><br><span class="line">                    &lt;/Path.Data&gt;</span><br><span class="line">                &lt;/Path&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ArcSegment&quot;</span>&gt;</span><br><span class="line">                &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                    &lt;Path.Data&gt;</span><br><span class="line">                        &lt;PathGeometry&gt;</span><br><span class="line">                            &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;PathFigure StartPoint=<span class="string">&quot;10,50&quot;</span>&gt;</span><br><span class="line">                                    &lt;PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;ArcSegment Size=<span class="string">&quot;50,50&quot;</span> RotationAngle=<span class="string">&quot;45&quot;</span> IsLargeArc=<span class="string">&quot;True&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span> Point=<span class="string">&quot;200,100&quot;</span>&gt;</span><br><span class="line">                                            </span><br><span class="line">                                        &lt;/ArcSegment&gt;</span><br><span class="line">                                    &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                &lt;/PathFigure&gt;</span><br><span class="line">                            &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                        &lt;/PathGeometry&gt;</span><br><span class="line">                    &lt;/Path.Data&gt;</span><br><span class="line">                &lt;/Path&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;BezierSegment&quot;</span>&gt;</span><br><span class="line">                &lt;ScrollViewer&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Vertical&quot;</span>&gt;</span><br><span class="line">                        &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                            &lt;Path.Data&gt;</span><br><span class="line">                                &lt;PathGeometry&gt;</span><br><span class="line">                                    &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                        &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                            &lt;PathFigure.Segments&gt;</span><br><span class="line">                                                &lt;BezierSegment Point1=<span class="string">&quot;100,0&quot;</span></span><br><span class="line">                                                       Point2=<span class="string">&quot;200,200&quot;</span></span><br><span class="line">                                                       Point3=<span class="string">&quot;300,100&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                                            &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;/PathFigure&gt;</span><br><span class="line">                                    &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;/PathGeometry&gt;</span><br><span class="line">                            &lt;/Path.Data&gt;</span><br><span class="line">                        &lt;/Path&gt;</span><br><span class="line">                        &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                            &lt;Path.Data&gt;</span><br><span class="line">                                &lt;PathGeometry&gt;</span><br><span class="line">                                    &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                        &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                            &lt;PathFigure.Segments&gt;</span><br><span class="line">                                                &lt;!--&lt;PolyBezierSegment&gt;--&gt;</span><br><span class="line">                                                &lt;PolyBezierSegment Points=<span class="string">&quot;0,0 100,0 150,100 150,0 200,0 300,100&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                                            &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;/PathFigure&gt;</span><br><span class="line">                                    &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;/PathGeometry&gt;</span><br><span class="line">                            &lt;/Path.Data&gt;</span><br><span class="line">                        &lt;/Path&gt;</span><br><span class="line">                        &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                            &lt;Path.Data&gt;</span><br><span class="line">                                &lt;PathGeometry&gt;</span><br><span class="line">                                    &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                        &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                            &lt;PathFigure.Segments&gt;</span><br><span class="line">                                                &lt;QuadraticBezierSegment Point1=<span class="string">&quot;200,200&quot;</span> Point2=<span class="string">&quot;300,100&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;/PathFigure&gt;</span><br><span class="line">                                    &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;/PathGeometry&gt;</span><br><span class="line">                            &lt;/Path.Data&gt;</span><br><span class="line">                        &lt;/Path&gt;</span><br><span class="line">                        &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                            &lt;Path.Data&gt;</span><br><span class="line">                                &lt;PathGeometry&gt;</span><br><span class="line">                                    &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                        &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                            &lt;PathFigure.Segments&gt;</span><br><span class="line">                                                &lt;PolyQuadraticBezierSegment Points=<span class="string">&quot;200,200 300,100 0,200 30,400&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;/PathFigure&gt;</span><br><span class="line">                                    &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;/PathGeometry&gt;</span><br><span class="line">                            &lt;/Path.Data&gt;</span><br><span class="line">                        &lt;/Path&gt;</span><br><span class="line">                        &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;3&quot;</span> Data=<span class="string">&quot;M 100,200 C 100,25 400,350 400,175 H 280&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Hexagon&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;HexagonContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;controls:Hexagon Height=<span class="string">&quot;300&quot;</span> Width=<span class="string">&quot;300&quot;</span> Stroke=<span class="string">&quot;Yellow&quot;</span> StrokeThickness=<span class="string">&quot;8&quot;</span> Fill=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;LinearGradientBrush&quot;</span>&gt;</span><br><span class="line">                &lt;Path Canvas.Left=<span class="string">&quot;15&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> Data=<span class="string">&quot;M 0,0 A 15,5 180 1 1 200,0 L 100,100 L 0,100 Z&quot;</span>&gt;</span><br><span class="line">                    &lt;Path.Fill&gt;</span><br><span class="line">                        &lt;LinearGradientBrush StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;1,0&quot;</span>&gt;</span><br><span class="line">                            &lt;GradientStop Offset=<span class="string">&quot;0&quot;</span> Color=<span class="string">&quot;DarkBlue&quot;</span>/&gt;</span><br><span class="line">                            &lt;GradientStop Offset=<span class="string">&quot;1&quot;</span> Color=<span class="string">&quot;LightBlue&quot;</span>/&gt;</span><br><span class="line">                        &lt;/LinearGradientBrush&gt;</span><br><span class="line">                    &lt;/Path.Fill&gt;</span><br><span class="line">                &lt;/Path&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ImageBrush&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Ellipse Height=<span class="string">&quot;180&quot;</span> Width=<span class="string">&quot;180&quot;</span> Margin=<span class="string">&quot;50,0,0,0&quot;</span>&gt;</span><br><span class="line">                        &lt;Ellipse.Fill&gt;</span><br><span class="line">                            &lt;ImageBrush ImageSource=<span class="string">&quot;Assets/ApplicationIcon.png&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Ellipse.Fill&gt;</span><br><span class="line">                    &lt;/Ellipse&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;你好&quot;</span> FontSize=<span class="string">&quot;100&quot;</span> FontWeight=<span class="string">&quot;Bold&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock.Foreground&gt;</span><br><span class="line">                            &lt;!--使用图像画刷填充TextBlock的Foreground--&gt;</span><br><span class="line">                            &lt;ImageBrush ImageSource=<span class="string">&quot;Assets/AlignmentGrid.png&quot;</span>/&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/TextBlock.Foreground&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Clip&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;ClipContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas Background=<span class="string">&quot;White&quot;</span> Margin=<span class="string">&quot;20&quot;</span> controls:Clip.ToBounds=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                        &lt;Ellipse Fill=<span class="string">&quot;Red&quot;</span> Canvas.Top=<span class="string">&quot;-10&quot;</span> Canvas.Left=<span class="string">&quot;-10&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;RenderTargetBitmap&quot;</span>&gt;</span><br><span class="line">                &lt;!--注册PointerReleased事件用于捕获屏幕的单击操作,并在时间处理程序中生成图片.--&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;root&quot;</span> Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span> PointerReleased=<span class="string">&quot;root_PointerReleased&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;StackPanel x:Name=<span class="string">&quot;TitlePanel&quot;</span> Margin=<span class="string">&quot;12,35,0,28&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;我的应用程序&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;点击截屏&quot;</span> FontSize=<span class="string">&quot;60&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;RenderTargetBitmapContentPanel&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;!--该图片控件用于展示截图图片效果--&gt;</span><br><span class="line">                        &lt;Image x:Name=<span class="string">&quot;img&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SaveBitmapEncoder&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;root1&quot;</span> Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;BitmapEncoderContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;StackPanel&gt;</span><br><span class="line">                            &lt;Button x:Name=<span class="string">&quot;bt_save1&quot;</span> Content=<span class="string">&quot;存储生成的图片&quot;</span> Click=<span class="string">&quot;bt_save_Click_2&quot;</span>/&gt;</span><br><span class="line">                            &lt;Button x:Name=<span class="string">&quot;bt_show&quot;</span></span><br><span class="line">                                    Content=<span class="string">&quot;展示存储的图片&quot;</span></span><br><span class="line">                                    Click=<span class="string">&quot;bt_show_Click&quot;</span>/&gt;</span><br><span class="line">                            &lt;ScrollViewer BorderBrush=<span class="string">&quot;Red&quot;</span> BorderThickness=<span class="string">&quot;2&quot;</span> Height=<span class="string">&quot;350&quot;</span>&gt;</span><br><span class="line">                                &lt;Image x:Name=<span class="string">&quot;img1&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/ScrollViewer&gt;</span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;TranslateTransform&quot;</span>&gt;</span><br><span class="line">                &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                        &lt;TranslateTransform X=<span class="string">&quot;50&quot;</span> Y=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                &lt;/Rectangle&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;RotateTransform&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                        &lt;!--以Polyline对象的左上角0,0为旋转点将其旋转45°--&gt;</span><br><span class="line">                        &lt;Polyline Points=<span class="string">&quot;25,25,0,50,25,75,50,50,25,25,25,0&quot;</span></span><br><span class="line">                              Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span></span><br><span class="line">                              Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span>&gt;</span><br><span class="line">                            &lt;Polyline.RenderTransform&gt;</span><br><span class="line">                                &lt;RotateTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Polyline.RenderTransform&gt;</span><br><span class="line">                        &lt;/Polyline&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                        &lt;Polyline Points=<span class="string">&quot;25,25,0,50,25,75,50,50,25,25,25,0&quot;</span></span><br><span class="line">                                  Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span> Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span>&gt;</span><br><span class="line">                            &lt;Polyline.RenderTransform&gt;</span><br><span class="line">                                &lt;RotateTransform CenterX=<span class="string">&quot;25&quot;</span> CenterY=<span class="string">&quot;50&quot;</span> Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Polyline.RenderTransform&gt;</span><br><span class="line">                        &lt;/Polyline&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                            &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                                &lt;ScaleTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> ScaleX=<span class="string">&quot;2&quot;</span> ScaleY=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/Rectangle&gt;</span><br><span class="line">                        &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                            &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                                &lt;ScaleTransform CenterX=<span class="string">&quot;25&quot;</span></span><br><span class="line">                                                CenterY=<span class="string">&quot;25&quot;</span></span><br><span class="line">                                                ScaleX=<span class="string">&quot;2&quot;</span></span><br><span class="line">                                                ScaleY=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                        &lt;/Rectangle&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    </span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SkewTransform&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;#CCCCCCFF&quot;</span> Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;SkewTransform CenterX=<span class="string">&quot;0&quot;</span> CenterY=<span class="string">&quot;0&quot;</span> AngleX=<span class="string">&quot;45&quot;</span> AngleY=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;TransformGroup&quot;</span>&gt;</span><br><span class="line">                &lt;Button RenderTransformOrigin=<span class="string">&quot;0.5,0.5&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;Click</span><br><span class="line">                    &lt;Button.RenderTransform&gt;</span><br><span class="line">                        &lt;TransformGroup&gt;</span><br><span class="line">                            &lt;ScaleTransform ScaleY=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">                            &lt;RotateTransform Angle=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                        &lt;/TransformGroup&gt;</span><br><span class="line">                    &lt;/Button.RenderTransform&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;MatrixTransform&quot;</span>&gt;</span><br><span class="line">                &lt;!--&lt;Button MinWidth=<span class="string">&quot;100&quot;</span>&gt;Click</span><br><span class="line">                    &lt;Button.RenderTransform&gt;</span><br><span class="line">                        &lt;MatrixTransform x:Name=<span class="string">&quot;myMatrixTransform&quot;</span>&gt;</span><br><span class="line">                            &lt;MatrixTransform.Matrix&gt;</span><br><span class="line">                                &lt;Matrix/&gt;</span><br><span class="line">                            &lt;/MatrixTransform.Matrix&gt;</span><br><span class="line">                        &lt;/MatrixTransform&gt;</span><br><span class="line">                    &lt;/Button.RenderTransform&gt;</span><br><span class="line">                &lt;/Button&gt;--&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;3D&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Background=<span class="string">&quot;Black&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Fill=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;MatrixTransform Matrix=<span class="string">&quot;1,-0.5,0,1.0,60,100&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                    &lt;Rectangle Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Fill=<span class="string">&quot;FloralWhite&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;MatrixTransform Matrix=<span class="string">&quot;1.0,0.5,0,1.0,260,0&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                    &lt;Rectangle Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Fill=<span class="string">&quot;Green&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;MatrixTransform Matrix=<span class="string">&quot;1,0.5,-1,0.5,260,200&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SanWeiXuanzhuan&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;SanWeiContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;!--旋转的对象--&gt;</span><br><span class="line">                    &lt;TextBlock Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;3D&quot;</span> FontSize=<span class="string">&quot;120&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock.Projection&gt;</span><br><span class="line">                            &lt;PlaneProjection x:Name=<span class="string">&quot;planeProjection&quot;</span>/&gt;</span><br><span class="line">                        &lt;/TextBlock.Projection&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                    &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;rotationRadioButton&quot;</span> Content=<span class="string">&quot;Rotation&quot;</span> Checked=<span class="string">&quot;rotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;centerOfRotationRadioButton&quot;</span></span><br><span class="line">                                         Content=<span class="string">&quot;CenterOfRotation&quot;</span> Checked=<span class="string">&quot;centerOfRotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;infoTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;xTextBlock&quot;</span> Text=<span class="string">&quot;沿着X轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;xSlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;xSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;yTextBlock&quot;</span> Text=<span class="string">&quot;沿着Y轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;ySlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;ySlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;zTextBlock&quot;</span> Text=<span class="string">&quot;沿着Z轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;zSlider&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;zSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SanweiPingyi&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;SanweiContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;!--平移的对象--&gt;</span><br><span class="line">                    &lt;TextBlock Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;3D&quot;</span> FontSize=<span class="string">&quot;120&quot;</span> Foreground=<span class="string">&quot;red&quot;</span></span><br><span class="line">                               HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock.Projection&gt;</span><br><span class="line">                            &lt;PlaneProjection x:Name=<span class="string">&quot;pingyiProjection&quot;</span> RotationX=<span class="string">&quot;45&quot;</span>/&gt;</span><br><span class="line">                        &lt;/TextBlock.Projection&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                    &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;globalRadioButton&quot;</span> Content=<span class="string">&quot;GlobalOffset&quot;</span> Checked=<span class="string">&quot;rotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line">                            &lt;RadioButton x:Name=<span class="string">&quot;localRadioButton&quot;</span></span><br><span class="line">                                         Content=<span class="string">&quot;LocalOffset&quot;</span> Checked=<span class="string">&quot;centerOfRotationRadioButton_Checked&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;infoTextBlock1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;xTextBlock1&quot;</span> Text=<span class="string">&quot;沿着X轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;xSlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;xSlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;yTextBlock1&quot;</span> Text=<span class="string">&quot;沿着Y轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;ySlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;ySlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;zTextBlock1&quot;</span> Text=<span class="string">&quot;沿着Z轴旋转&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;zSlider1&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> ValueChanged=<span class="string">&quot;zSlider_ValueChanged1&quot;</span>/&gt;</span><br><span class="line">                 </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Storyboard&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Ellipse x:Name=<span class="string">&quot;ellipse1&quot;</span> Width=<span class="string">&quot;150&quot;</span> Height=<span class="string">&quot;150&quot;</span>&gt;</span><br><span class="line">                       </span><br><span class="line">                    &lt;/Ellipse&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;storyboard1&quot;</span>&gt;</span><br><span class="line">                            &lt;DoubleAnimation EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;ellipse1&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span></span><br><span class="line">                                             From=<span class="string">&quot;150&quot;</span> To=<span class="string">&quot;300&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;myStoryboard&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;myStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;300&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             RepeatBehavior=<span class="string">&quot;Forever&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;rect&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                    &lt;Rectangle x:Name=<span class="string">&quot;rect&quot;</span> Width=<span class="string">&quot;0&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;启动动画&quot;</span> Click=<span class="string">&quot;Button_Click_3&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DoubleAnimation&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Loaded=<span class="string">&quot;Page_Loaded&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;storyBoard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--对ScaleTransform对象的ScaleY属性应用动画,表示沿着Y轴缩放倍数变化的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;scacleTransform&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span></span><br><span class="line">                                             From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span></span><br><span class="line">                                             RepeatBehavior=<span class="string">&quot;Forever&quot;</span> AutoReverse=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/Canvas.Resources&gt;</span><br><span class="line">                    &lt;Rectangle x:Name=<span class="string">&quot;rectangle&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span> Canvas.Left=<span class="string">&quot;75&quot;</span> Canvas.Top=<span class="string">&quot;75&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;!--&lt;注意需要对ScaleTransform命名,否则无法定义动画的目标对象&gt;--&gt;</span><br><span class="line">                            &lt;ScaleTransform x:Name=<span class="string">&quot;scacleTransform&quot;</span>&gt;</span><br><span class="line">                            &lt;/ScaleTransform&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ColorAnimation&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;storybord1&quot;</span>&gt;</span><br><span class="line">                            &lt;ColorAnimation From=<span class="string">&quot;Red&quot;</span> To=<span class="string">&quot;Yellow&quot;</span></span><br><span class="line">                                            Storyboard.TargetName=<span class="string">&quot;button&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;(Button.Background).(SolidColorBrush.Color)&quot;</span></span><br><span class="line">                                            Duration=<span class="string">&quot;0:0:5&quot;</span>&gt;</span><br><span class="line">                            &lt;/ColorAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;开始动画&quot;</span> Margin=<span class="string">&quot;12&quot;</span> Click=<span class="string">&quot;Button_Click_4&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Test&quot;</span> x:Name=<span class="string">&quot;button&quot;</span> Margin=<span class="string">&quot;12&quot;</span> Click=<span class="string">&quot;button_Click_5&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;PointAnimation&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;storyboard2&quot;</span>&gt;</span><br><span class="line">                            &lt;PointAnimation From=<span class="string">&quot;50,0&quot;</span> To=<span class="string">&quot;100,50&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;bezierSegment&quot;</span></span><br><span class="line">                                            Storyboard.TargetProperty=<span class="string">&quot;Point3&quot;</span> RepeatBehavior=<span class="string">&quot;5&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;运行动画&quot;</span> Click=<span class="string">&quot;Button_Click_6&quot;</span> Margin=<span class="string">&quot;12&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--&lt;Data属性由4个BezierSegment曲线和1条直线LineSegment组成&gt;--&gt;</span><br><span class="line">                    &lt;Path Fill=<span class="string">&quot;#FF4080FF&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> Height=<span class="string">&quot;100&quot;</span> Margin=<span class="string">&quot;162,164,0,0&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                        &lt;Path.Data&gt;</span><br><span class="line">                            &lt;PathGeometry&gt;</span><br><span class="line">                                &lt;PathFigure StartPoint=<span class="string">&quot;100,50&quot;</span>&gt;</span><br><span class="line">                                    &lt;BezierSegment Point1=<span class="string">&quot;100,77.6142&quot;</span> Point2=<span class="string">&quot;77.6142,100&quot;</span> Point3=<span class="string">&quot;50,100&quot;</span>/&gt;</span><br><span class="line">                                    &lt;BezierSegment Point1=<span class="string">&quot;22.3858,100&quot;</span> Point2=<span class="string">&quot;0,77.6142&quot;</span> Point3=<span class="string">&quot;0,50&quot;</span>/&gt;</span><br><span class="line">                                    &lt;BezierSegment Point1=<span class="string">&quot;0,22.3858&quot;</span> Point2=<span class="string">&quot;22.3858,0&quot;</span> Point3=<span class="string">&quot;50,0&quot;</span>/&gt;</span><br><span class="line">                                    &lt;!--BezierSegment表示是圆右上的弧线,对其终点Point3进行动画处理--&gt;</span><br><span class="line">                                    &lt;BezierSegment x:Name=<span class="string">&quot;bezierSegment&quot;</span> Point1=<span class="string">&quot;77.6142,0&quot;</span> Point2=<span class="string">&quot;100,22.3858&quot;</span> Point3=<span class="string">&quot;100,50&quot;</span>/&gt;</span><br><span class="line">                                    &lt;LineSegment Point=<span class="string">&quot;50,50&quot;</span>/&gt;</span><br><span class="line">                                &lt;/PathFigure&gt;</span><br><span class="line">                            &lt;/PathGeometry&gt;</span><br><span class="line">                        &lt;/Path.Data&gt;</span><br><span class="line">                    &lt;/Path&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SplineDoubleKeyFrame&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;LayoutRoot&quot;</span> Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;SplineKeyStoryBoard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--对第一个矩形的Canvas.Top属性使用样条关键帧动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimationUsingKeyFrames </span><br><span class="line">                                Storyboard.TargetName=<span class="string">&quot;srect&quot;</span></span><br><span class="line">                                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span></span><br><span class="line">                                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;SplineDoubleKeyFrame Value=<span class="string">&quot;0&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                                      KeySpline=<span class="string">&quot;0.0,1.0 1.0,0.0&quot;</span>/&gt;</span><br><span class="line">                            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">                            &lt;!--对第一个矩形的Canvas.Left属性使用线性关键帧动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimationUsingKeyFrames</span><br><span class="line">                                Storyboard.TargetName=<span class="string">&quot;srect&quot;</span></span><br><span class="line">                                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span></span><br><span class="line">                                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;400&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">                            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">                            &lt;!--对第二个矩形的Canvas.Top属性使用线性关键帧动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimationUsingKeyFrames </span><br><span class="line">                                Storyboard.TargetName=<span class="string">&quot;srect2&quot;</span></span><br><span class="line">                                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span></span><br><span class="line">                                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;0&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">                            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">                            &lt;!--对第二个矩形的Canvas.Left属性使用线性关键帧动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimationUsingKeyFrames</span><br><span class="line">                                Storyboard.TargetName=<span class="string">&quot;srect2&quot;</span></span><br><span class="line">                                Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span></span><br><span class="line">                                Duration=<span class="string">&quot;0:0:10&quot;</span></span><br><span class="line">                                RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;LinearDoubleKeyFrame Value=<span class="string">&quot;400&quot;</span> KeyTime=<span class="string">&quot;0:0:10&quot;</span>/&gt;</span><br><span class="line">                            &lt;/DoubleAnimationUsingKeyFrames&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                     </span><br><span class="line"></span><br><span class="line">                            &lt;!--第一个矩形的运动轨迹时采用样条关键帧的方式从左下角向右上角用变化的加速度运动--&gt;</span><br><span class="line">                            &lt;Rectangle x:Name=<span class="string">&quot;srect&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Purple&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;!--第二个矩形的运动轨迹是采用线性关键帧的方式从左下角向右上角匀速运动--&gt;</span><br><span class="line">                            &lt;Rectangle x:Name=<span class="string">&quot;srect2&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                            &lt;Button Content=<span class="string">&quot;运行动画&quot;</span> Canvas.Top=<span class="string">&quot;500&quot;</span> Click=<span class="string">&quot;Button_Click_7&quot;</span>/&gt;</span><br><span class="line">                   </span><br><span class="line"></span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Discrete&quot;</span>&gt;</span><br><span class="line">                &lt;Grid&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;Discretestoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetName=<span class="string">&quot;myLinearGradientBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;StartPoint&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.1,0.3&quot;</span> KeyTime=<span class="string">&quot;0:0:0&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.2,0.4&quot;</span> KeyTime=<span class="string">&quot;0:0:1&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.3,0.5&quot;</span> KeyTime=<span class="string">&quot;0:0:2&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.4,0.6&quot;</span> KeyTime=<span class="string">&quot;0:0:3&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.5,0.7&quot;</span> KeyTime=<span class="string">&quot;0:0:4&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.6,0.8&quot;</span> KeyTime=<span class="string">&quot;0:0:5&quot;</span>/&gt;</span><br><span class="line">                                &lt;DiscretePointKeyFrame Value=<span class="string">&quot;0.7,0.9&quot;</span> KeyTime=<span class="string">&quot;0:0:6&quot;</span>/&gt;</span><br><span class="line">                            &lt;/PointAnimationUsingKeyFrames&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;StackPanel&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">                            &lt;Ellipse.Fill&gt;</span><br><span class="line">                                &lt;LinearGradientBrush x:Name=<span class="string">&quot;myLinearGradientBrush&quot;</span></span><br><span class="line">                                                     StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;1,0&quot;</span>&gt;</span><br><span class="line">                                    &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                        &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.001&quot;</span>/&gt;</span><br><span class="line">                                        &lt;GradientStop Color=<span class="string">&quot;Blue&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                &lt;/LinearGradientBrush&gt;</span><br><span class="line">                            &lt;/Ellipse.Fill&gt;</span><br><span class="line">                        &lt;/Ellipse&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;100&quot;</span> Click=<span class="string">&quot;Button_Click_8&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ChangeBackGroundDiscrete&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;LayoutRoot1&quot;</span> Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;ChangeBackGroundstoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName=<span class="string">&quot;LayoutRoot1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Background&quot;</span> Duration=<span class="string">&quot;0:0:4&quot;</span></span><br><span class="line">                                                           RepeatBehavior=<span class="string">&quot;Forever&quot;</span>&gt;</span><br><span class="line">                                &lt;!--在1秒钟时间点上设置背景的画刷为LinearGradientBrush--&gt;</span><br><span class="line">                                &lt;DiscreteObjectKeyFrame KeyTime=<span class="string">&quot;0:0:1&quot;</span>&gt;</span><br><span class="line">                                    &lt;DiscreteObjectKeyFrame.Value&gt;</span><br><span class="line">                                        &lt;LinearGradientBrush&gt;</span><br><span class="line">                                            &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;Yellow&quot;</span> Offset=<span class="string">&quot;0.0&quot;</span>/&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;Orange&quot;</span> Offset=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;Red&quot;</span> Offset=<span class="string">&quot;1.0&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                        &lt;/LinearGradientBrush&gt;</span><br><span class="line">                                    &lt;/DiscreteObjectKeyFrame.Value&gt;</span><br><span class="line">                                &lt;/DiscreteObjectKeyFrame&gt;</span><br><span class="line">                                &lt;!--在2秒钟的时间点上设置背景的画刷为另外一个LinearGradientBrush--&gt;</span><br><span class="line">                                &lt;DiscreteObjectKeyFrame KeyTime=<span class="string">&quot;0:0:2&quot;</span>&gt;</span><br><span class="line">                                    &lt;DiscreteObjectKeyFrame.Value&gt;</span><br><span class="line">                                        &lt;LinearGradientBrush StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;1,0&quot;</span>&gt;</span><br><span class="line">                                            &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.0&quot;</span>/&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;MediumBlue&quot;</span> Offset=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                                                &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;1.0&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                        &lt;/LinearGradientBrush&gt;</span><br><span class="line">                                    &lt;/DiscreteObjectKeyFrame.Value&gt;</span><br><span class="line">                                &lt;/DiscreteObjectKeyFrame&gt;</span><br><span class="line">                            &lt;/ObjectAnimationUsingKeyFrames&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;ChangeBackGroundContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;100&quot;</span> Click=<span class="string">&quot;Button_Click_9&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;BackEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;Easestoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselScaleTransform&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;ScaleX&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselScaleTransform&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse4&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse4&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BackEase Amplitude=<span class="string">&quot;0.3&quot;</span> EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了BackEase的放大动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse Name=<span class="string">&quot;ellipse3&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                            &lt;Ellipse.RenderTransform&gt;</span><br><span class="line">                                &lt;ScaleTransform x:Name=<span class="string">&quot;ellipselScaleTransform&quot;</span>&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/ScaleTransform&gt;</span><br><span class="line">                            &lt;/Ellipse.RenderTransform&gt;</span><br><span class="line">                        &lt;/Ellipse&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了BackEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse4&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_10&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;BounceEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;Bouncestoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;ellipse5&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;80&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;ellipse5&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Height&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                   </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse6&quot;</span>         Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse6&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;BounceEase Bounces=<span class="string">&quot;2&quot;</span> EasingMode=<span class="string">&quot;EaseOut&quot;</span> Bounciness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了BounceEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse Name=<span class="string">&quot;ellipse5&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了BounceEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse6&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_11&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;CircleEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;CircleEasestoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;80&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;ellipse7&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Width&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CircleEase EasingMode=<span class="string">&quot;EaseOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse8&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;0&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse8&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CircleEase EasingMode=<span class="string">&quot;EaseOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了CircleEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse7&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了CircleEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse8&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span> Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_12&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;CubicEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;Cubicstoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;180&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipselPlaneProjection&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;RotationX&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CubicEase EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse10&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse10&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;CubicEase EasingMode=<span class="string">&quot;EaseInOut&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了CubicEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse9&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>&gt;</span><br><span class="line">                            &lt;Ellipse.Projection&gt;</span><br><span class="line">                                &lt;PlaneProjection RotationX=<span class="string">&quot;0&quot;</span> x:Name=<span class="string">&quot;ellipselPlaneProjection&quot;</span>&gt;</span><br><span class="line">                                &lt;/PlaneProjection&gt;</span><br><span class="line">                            &lt;/Ellipse.Projection&gt;</span><br><span class="line">                        &lt;/Ellipse&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了CubicEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse10&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_13&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ElasticEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;Elasticstoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--线条的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             Storyboard.TargetName=<span class="string">&quot;line1&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;Y2&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse11&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse12&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse12&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;ElasticEase EasingMode=<span class="string">&quot;EaseOut&quot;</span> Oscillations=<span class="string">&quot;7&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--线条展示了ElasticEase的动画效果--&gt;</span><br><span class="line">                        &lt;Line x:Name=<span class="string">&quot;line1&quot;</span> X1=<span class="string">&quot;50&quot;</span> Y1=<span class="string">&quot;0&quot;</span> X2=<span class="string">&quot;50&quot;</span> Y2=<span class="string">&quot;50&quot;</span></span><br><span class="line">                              Stroke=<span class="string">&quot;Blue&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了ElasticEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse Name=<span class="string">&quot;ellipse11&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span> Width=<span class="string">&quot;100&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了ElasticEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse12&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_14&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ExponentialEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;ExponentialStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse13&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;ExponentialEase Exponent=<span class="string">&quot;10&quot;</span> EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse14&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse14&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;ExponentialEase Exponent=<span class="string">&quot;10&quot;</span> EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--第一个椭圆展示了ExponentialEase的动画效果--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse13&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;!--第二个椭圆展示了ExponentialEase的运动轨迹--&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse14&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_15&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;PowerEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;powerStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--第一个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse15&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;PowerEase EasingMode=<span class="string">&quot;EaseIn&quot;</span> x:Name=<span class="string">&quot;powerEase1&quot;</span>/&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;!--第二个椭圆的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse16&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse16&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;PowerEase EasingMode=<span class="string">&quot;EaseIn&quot;</span> x:Name=<span class="string">&quot;powerEase2&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;Ellipse Name=<span class="string">&quot;ellipse15&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse16&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_16&quot;</span>/&gt;</span><br><span class="line">                        &lt;Slider x:Name=<span class="string">&quot;powerSlider&quot;</span> Margin=<span class="string">&quot;200,500,0,0&quot;</span></span><br><span class="line">                                Width=<span class="string">&quot;200&quot;</span> Background=<span class="string">&quot;Red&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;100&quot;</span> Minimum=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SineEase&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;SineStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse17&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;SineEase EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;0&quot;</span> To=<span class="string">&quot;400&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse18&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Left)&quot;</span>&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                            &lt;DoubleAnimation From=<span class="string">&quot;400&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:3&quot;</span> Storyboard.TargetName=<span class="string">&quot;ellipse18&quot;</span></span><br><span class="line">                                             Storyboard.TargetProperty=<span class="string">&quot;(Canvas.Top)&quot;</span>&gt;</span><br><span class="line">                                &lt;DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                    &lt;SineEase EasingMode=<span class="string">&quot;EaseIn&quot;</span>/&gt;</span><br><span class="line">                                &lt;/DoubleAnimation.EasingFunction&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;Canvas Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;Ellipse Name=<span class="string">&quot;ellipse17&quot;</span> Width=<span class="string">&quot;50&quot;</span> Height=<span class="string">&quot;50&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                        &lt;Ellipse x:Name=<span class="string">&quot;ellipse18&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Width=<span class="string">&quot;80&quot;</span></span><br><span class="line">                                 Height=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Margin=<span class="string">&quot;0,500,0,0&quot;</span> Content=<span class="string">&quot;启动动画&quot;</span> Height=<span class="string">&quot;80&quot;</span> Click=<span class="string">&quot;Button_Click_17&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;JyzEase&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Background=<span class="string">&quot;Gray&quot;</span> PointerMoved=<span class="string">&quot;Canvas_PointerMoved&quot;</span>&gt;</span><br><span class="line">                    &lt;Rectangle x:Name=<span class="string">&quot;prectangle&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;100&quot;</span></span><br><span class="line">                               RadiusX=<span class="string">&quot;12.5&quot;</span> RadiusY=<span class="string">&quot;12.5&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.Fill&gt;</span><br><span class="line">                            &lt;LinearGradientBrush&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                                &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                            &lt;/LinearGradientBrush&gt;</span><br><span class="line">                        &lt;/Rectangle.Fill&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;TwoAnimationCompare&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;heightStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--针对Height属性的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;rectangle1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Height&quot;</span></span><br><span class="line">                                             RepeatBehavior=<span class="string">&quot;Forever&quot;</span></span><br><span class="line">                                             EnableDependentAnimation=<span class="string">&quot;True&quot;</span></span><br><span class="line">                                             From=<span class="string">&quot;100&quot;</span> To=<span class="string">&quot;200&quot;</span> Duration=<span class="string">&quot;0:0:2&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                        &lt;Storyboard x:Name=<span class="string">&quot;scaleTransformStoryboard&quot;</span>&gt;</span><br><span class="line">                            &lt;!--针对ScaleTransform的ScaleY属性的动画--&gt;</span><br><span class="line">                            &lt;DoubleAnimation Storyboard.TargetName=<span class="string">&quot;scaleTransform1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;ScaleY&quot;</span> RepeatBehavior=<span class="string">&quot;Forever&quot;</span> From=<span class="string">&quot;1&quot;</span> To=<span class="string">&quot;2&quot;</span> Duration=<span class="string">&quot;0:0:2&quot;</span>&gt;</span><br><span class="line">                            &lt;/DoubleAnimation&gt;</span><br><span class="line">                        &lt;/Storyboard&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;阻塞UI线程&quot;</span> Click=<span class="string">&quot;Button_Click_18&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;heightAnimationButton&quot;</span> Content=<span class="string">&quot;Height属性动画&quot;</span> Click=<span class="string">&quot;heightAnimationButton_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;scaleTransformAnimationButton&quot;</span> Content=<span class="string">&quot;ScaleTransform属性动画&quot;</span> Click=<span class="string">&quot;scaleTransformAnimationButton_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Rectangle Height=<span class="string">&quot;100&quot;</span> Fill=<span class="string">&quot;Blue&quot;</span> x:Name=<span class="string">&quot;rectangle1&quot;</span>&gt;</span><br><span class="line">                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                            &lt;ScaleTransform x:Name=<span class="string">&quot;scaleTransform1&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                    &lt;/Rectangle&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;StarDown&quot;</span>&gt;</span><br><span class="line">                &lt;Grid&gt;</span><br><span class="line">                    &lt;Canvas x:Name=<span class="string">&quot;myCanvas&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> VerticalAlignment=<span class="string">&quot;Stretch&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;btn&quot;</span> VerticalAlignment=<span class="string">&quot;Bottom&quot;</span> Content=<span class="string">&quot;开始星星飘落&quot;</span> Click=<span class="string">&quot;btn_Click&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Style&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;StackPanel.Resources&gt;</span><br><span class="line">                        &lt;Style x:Key=<span class="string">&quot;commonStyle&quot;</span> TargetType=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Width&quot;</span> Value=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Height&quot;</span> Value=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;FontSize&quot;</span> Value=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Foreground&quot;</span> Value=<span class="string">&quot;Green&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Background&quot;</span> Value=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;FontFamily&quot;</span> Value=<span class="string">&quot;Arial&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Style&gt;</span><br><span class="line">                        &lt;Style x:Key=<span class="string">&quot;commonstyle2&quot;</span> TargetType=<span class="string">&quot;FrameworkElement&quot;</span>&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Width&quot;</span> Value=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;Height&quot;</span> Value=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Style&gt;</span><br><span class="line">                    &lt;/StackPanel.Resources&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;按钮1&quot;</span> Style=<span class="string">&quot;&#123;StaticResource commonStyle&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;按钮2&quot;</span> Style=<span class="string">&quot;&#123;StaticResource commonStyle&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;按钮3&quot;</span> Style=<span class="string">&quot;&#123;StaticResource commonStyle&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;AAA&quot;</span> Style=<span class="string">&quot;&#123;StaticResource commonstyle2&#125;&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ControlTemplate&quot;</span>&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Hello World&quot;</span>&gt;</span><br><span class="line">                    &lt;Button.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate&gt;</span><br><span class="line">                            &lt;Grid&gt;</span><br><span class="line">                                &lt;Ellipse Width=<span class="string">&quot;&#123;TemplateBinding Button.Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;TemplateBinding Height&#125;&quot;</span></span><br><span class="line">                                         Fill=<span class="string">&quot;&#123;TemplateBinding Button.Background&#125;&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span></span><br><span class="line">                                           VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                           Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/Button.Template&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ContentPresenter&quot;</span>&gt;</span><br><span class="line">                &lt;Button&gt;</span><br><span class="line">                    &lt;Button.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate&gt;</span><br><span class="line">                            &lt;Grid&gt;</span><br><span class="line">                                &lt;ContentPresenter HorizontalAlignment=<span class="string">&quot;&#123;TemplateBinding HorizontalAlignment&#125;&quot;</span> VerticalAlignment=<span class="string">&quot;&#123;TemplateBinding VerticalAlignment&#125;&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/Button.Template&gt;</span><br><span class="line">                    &lt;Button.Content&gt;</span><br><span class="line">                        &lt;Rectangle Fill=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;50&quot;</span> Width=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Button.Content&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;VisualStateManager&quot;</span>&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Hello World&quot;</span> LostFocus=<span class="string">&quot;Button_LostFocus&quot;</span> Tapped=<span class="string">&quot;Button_Tapped&quot;</span>&gt;</span><br><span class="line">                    &lt;Button.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                            &lt;Border&gt;</span><br><span class="line">                                &lt;VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                                    &lt;VisualStateGroup x:Name=<span class="string">&quot;CommonStates&quot;</span>&gt;</span><br><span class="line">                                        &lt;VisualStateGroup.Transitions&gt;</span><br><span class="line">                                            &lt;VisualTransition From=<span class="string">&quot;Test1&quot;</span> To=<span class="string">&quot;Test2&quot;</span> GeneratedDuration=<span class="string">&quot;0:0:1.5&quot;</span>&gt;</span><br><span class="line">                                                &lt;Storyboard&gt;</span><br><span class="line">                                                    </span><br><span class="line">                                                &lt;/Storyboard&gt;</span><br><span class="line">                                            &lt;/VisualTransition&gt;</span><br><span class="line">                                        &lt;/VisualStateGroup.Transitions&gt;</span><br><span class="line">                                        &lt;!--创建状态Test1把Border背景的颜色改成红色--&gt;</span><br><span class="line">                                        &lt;VisualState x:Name=<span class="string">&quot;Test1&quot;</span>&gt;</span><br><span class="line">                                            &lt;Storyboard&gt;</span><br><span class="line">                                                &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/Storyboard&gt;</span><br><span class="line">                                        &lt;/VisualState&gt;</span><br><span class="line">                                        &lt;!--创建状态Test2把Border背景的颜色改成蓝色--&gt;</span><br><span class="line">                                        </span><br><span class="line">                                            &lt;VisualState x:Name=<span class="string">&quot;Test2&quot;</span>&gt;</span><br><span class="line">                                            &lt;Storyboard&gt;</span><br><span class="line">                                                &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/Storyboard&gt;</span><br><span class="line">                                        &lt;/VisualState&gt;</span><br><span class="line">                                    &lt;/VisualStateGroup&gt;</span><br><span class="line">                                &lt;/VisualStateManager.VisualStateGroups&gt;</span><br><span class="line"></span><br><span class="line">                                &lt;Border.Background&gt;</span><br><span class="line">                                    &lt;!--定义Border背景的颜色,用于测试不同状态的显示效果--&gt;</span><br><span class="line">                                    &lt;SolidColorBrush x:Name=<span class="string">&quot;BorderBrush&quot;</span> Color=<span class="string">&quot;Black&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                                &lt;/Border.Background&gt;</span><br><span class="line">                                &lt;Grid&gt;</span><br><span class="line">                                    &lt;Ellipse x:Name=<span class="string">&quot;ellipse19&quot;</span> Width=<span class="string">&quot;&#123;TemplateBinding Button.Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;TemplateBinding Height&#125;&quot;</span> Fill=<span class="string">&quot;&#123;TemplateBinding Button.Background&#125;&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                    &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                               Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                                    &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;TemplateBinding Button.Content&#125;&quot;</span>/&gt;</span><br><span class="line">                                &lt;/Grid&gt;</span><br><span class="line">                            &lt;/Border&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/Button.Template&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DataTemplate&quot;</span>&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;Hello World&quot;</span> Width=<span class="string">&quot;100&quot;</span> LostFocus=<span class="string">&quot;Button_LostFocus&quot;</span> Tapped=<span class="string">&quot;Button_Tapped&quot;</span>&gt;</span><br><span class="line">                    &lt;Button.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;Button&quot;</span>&gt;</span><br><span class="line">                            &lt;Border&gt;</span><br><span class="line">                                &lt;VisualStateManager.VisualStateGroups&gt;</span><br><span class="line">                                    &lt;VisualStateGroup&gt;</span><br><span class="line">                                        &lt;VisualStateGroup.Transitions&gt;</span><br><span class="line">                                            &lt;!--状态Test1转换为状态Test2的颜色变化动画--&gt;</span><br><span class="line">                                            &lt;VisualTransition From=<span class="string">&quot;Test1&quot;</span> To=<span class="string">&quot;Test2&quot;</span> GeneratedDuration=<span class="string">&quot;0:0:1.5&quot;</span>&gt;</span><br><span class="line">                                                &lt;Storyboard&gt;</span><br><span class="line">                                                    </span><br><span class="line">                                                &lt;/Storyboard&gt;</span><br><span class="line">                                            &lt;/VisualTransition&gt;</span><br><span class="line">                                           </span><br><span class="line">                                        &lt;/VisualStateGroup.Transitions&gt;</span><br><span class="line">                                        &lt;!--创建状态Test1把Border背景的颜色改成红色--&gt;</span><br><span class="line">                                        &lt;VisualState x:Name=<span class="string">&quot;Test3&quot;</span>&gt;</span><br><span class="line">                                            &lt;Storyboard&gt;</span><br><span class="line">                                                &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/Storyboard&gt;</span><br><span class="line">                                            </span><br><span class="line">                                        &lt;/VisualState&gt;</span><br><span class="line">                                        &lt;!--创建状态Test2把Border背景的颜色改成蓝色--&gt;</span><br><span class="line">                                        &lt;VisualState x:Name=<span class="string">&quot;Test4&quot;</span>&gt;</span><br><span class="line">                                            &lt;Storyboard&gt;</span><br><span class="line">                                                &lt;ColorAnimation Storyboard.TargetName=<span class="string">&quot;BorderBrush1&quot;</span> Storyboard.TargetProperty=<span class="string">&quot;Color&quot;</span> To=<span class="string">&quot;Blue&quot;</span>/&gt;</span><br><span class="line">                                            &lt;/Storyboard&gt;</span><br><span class="line">                                        &lt;/VisualState&gt;</span><br><span class="line">                                        </span><br><span class="line">                                    &lt;/VisualStateGroup&gt;</span><br><span class="line">                                &lt;/VisualStateManager.VisualStateGroups&gt;</span><br><span class="line"></span><br><span class="line">                                &lt;Border.Background&gt;</span><br><span class="line">                                    &lt;SolidColorBrush x:Name=<span class="string">&quot;BorderBrush1&quot;</span></span><br><span class="line">                                                     Color=<span class="string">&quot;Black&quot;</span>/&gt;</span><br><span class="line">                                &lt;/Border.Background&gt;</span><br><span class="line">                                &lt;Grid&gt;</span><br><span class="line">                                    &lt;Ellipse x:Name=<span class="string">&quot;ellipse20&quot;</span> Width=<span class="string">&quot;&#123;Binding Width&#125;&quot;</span> Height=<span class="string">&quot;&#123;Binding Height&#125;&quot;</span></span><br><span class="line">                                             Fill=<span class="string">&quot;&#123;Binding Background&#125;&quot;</span></span><br><span class="line">                                             Stroke=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                    &lt;TextBlock Margin=<span class="string">&quot;5,0,0,0&quot;</span> FontSize=<span class="string">&quot;50&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">                                               Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span>/&gt;</span><br><span class="line">                                    &lt;TextBlock FontSize=<span class="string">&quot;50&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span>/&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/Grid&gt;</span><br><span class="line">                            &lt;/Border&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/Button.Template&gt;</span><br><span class="line">                &lt;/Button&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DataTemplate1&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;singlePersonButton&quot;</span> Click=<span class="string">&quot;singlePersonButton_Click&quot;</span>  ContentTemplate=<span class="string">&quot;&#123;StaticResource PersonNameDataTemplate&#125;&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DataTemplate2&quot;</span>&gt;</span><br><span class="line">                &lt;ItemsControl x:Name=<span class="string">&quot;itemsControl&quot;</span> ItemTemplate=<span class="string">&quot;&#123;StaticResource PersonNameDataTemplate&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DataTemplate3&quot;</span>&gt;</span><br><span class="line">                &lt;ItemsControl x:Name=<span class="string">&quot;itemsControl1&quot;</span> ItemTemplate=<span class="string">&quot;&#123;StaticResource PersonNameDataTemplate&#125;&quot;</span> Style=<span class="string">&quot;&#123;StaticResource ItemsControlStyle&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;DataTemplate4&quot;</span>&gt;</span><br><span class="line">                &lt;ListBox x:Name=<span class="string">&quot;listbox&quot;</span> ItemTemplate=<span class="string">&quot;&#123;StaticResource dataTemplateDefaultKey&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot; Binding&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> Margin=<span class="string">&quot;12,100,0,28&quot;</span></span><br><span class="line">                               FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ElementNameBinding&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;圆形的半径会根据slider控件的值而改变&quot;</span>/&gt;</span><br><span class="line">                    &lt;Slider Name=<span class="string">&quot;slider1&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;半径为:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Name=<span class="string">&quot;txtblk&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider1,Path=Value&#125;&quot;</span> FontSize=<span class="string">&quot;48&quot;</span>/&gt;</span><br><span class="line">                    &lt;Ellipse Height=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Width=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Fill=<span class="string">&quot;Red&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;BindingMode&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Slider x:Name=<span class="string">&quot;slider&quot;</span> Value=<span class="string">&quot;50&quot;</span> Maximum=<span class="string">&quot;400&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--OneTime--&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;41&quot;</span> Text=<span class="string">&quot;OneTime&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;112&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=OneTime&#125;&quot;</span> Width=<span class="string">&quot;269&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;46&quot;</span> Text=<span class="string">&quot;OneWay&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;99&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--OneWay--&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=OneWay&#125;&quot;</span> Width=<span class="string">&quot;269&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Height=<span class="string">&quot;40&quot;</span> FontSize=<span class="string">&quot;25&quot;</span> Text=<span class="string">&quot;TwoWay&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Width=<span class="string">&quot;94&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--TwoWay--&gt;</span><br><span class="line">                    &lt;TextBox Height=<span class="string">&quot;72&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value,Mode=TwoWay&#125;&quot;</span> Width=<span class="string">&quot;268&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;43&quot;</span> Text=<span class="string">&quot;slider的值:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock FontSize=<span class="string">&quot;25&quot;</span> Height=<span class="string">&quot;43&quot;</span> Text=<span class="string">&quot;&#123;Binding ElementName=slider,Path=Value&#125;&quot;</span> Width=<span class="string">&quot;185&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;INotifyPropertyChanged&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;改变数据源的数据&quot;</span> Click=<span class="string">&quot;Button_Click_19&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;IValueConverter&quot;</span>&gt;</span><br><span class="line">                &lt;Grid&gt;</span><br><span class="line">                    &lt;StackPanel Margin=<span class="string">&quot;12,0,12,0&quot;</span> DataContext=<span class="string">&quot;&#123;StaticResource clock&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;30&quot;</span> Text=<span class="string">&quot;&#123;Binding Hour,Converter=&#123;StaticResource booleanToDayString&#125;&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;30&quot;</span> Text=<span class="string">&quot;现在的时间是:&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Hour&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;小时&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Minute&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;分钟&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;&#123;Binding Second&#125;&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock FontSize=<span class="string">&quot;20&quot;</span> Text=<span class="string">&quot;秒&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;BindingItemTemplate&quot;</span>&gt;</span><br><span class="line">                &lt;ListView x:Name=<span class="string">&quot;listviewItemtemplate&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;!--列表的ItemTemplate属性是一个DataTemplate类型--&gt;</span><br><span class="line">                        &lt;!--创建一个DataTemplate的元素对象--&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                                &lt;!--绑定Food类的IconUri属性--&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;&#123;Binding IconUri&#125;&quot;</span> Stretch=<span class="string">&quot;None&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> FontSize=<span class="string">&quot;40&quot;</span> Margin=<span class="string">&quot;24 0 24 0&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Description&#125;&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ObservableCollection&quot;</span>&gt;</span><br><span class="line">                &lt;Grid&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;StackPanel Margin=<span class="string">&quot;12,60,0,28&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;AddItem&quot;</span> Click=<span class="string">&quot;Button_Click_20&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;RemoveItem&quot;</span> Click=<span class="string">&quot;Button_Click_21&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;ListView x:Name=<span class="string">&quot;Obser&quot;</span>&gt;</span><br><span class="line">                            &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                                &lt;DataTemplate&gt;</span><br><span class="line">                                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderId&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Width=<span class="string">&quot;280&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/StackPanel&gt;</span><br><span class="line">                                &lt;/DataTemplate&gt;</span><br><span class="line">                            &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;/ListView&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;IList&quot;</span>&gt;</span><br><span class="line">                &lt;ListView x:Name=<span class="string">&quot;Ilist&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderId&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding OrderName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Width=<span class="string">&quot;280&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                &lt;ItemsControl x:Name=<span class="string">&quot;itemsControl2&quot;</span>&gt;</span><br><span class="line">                    &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">                &lt;/ItemsControl&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ScrollItemsControl&quot;</span>&gt;</span><br><span class="line">                &lt;ItemsControl x:Name=<span class="string">&quot;ItemsControl3&quot;</span>&gt;</span><br><span class="line">                    &lt;ItemsControl.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                            &lt;ScrollViewer&gt;</span><br><span class="line">                                &lt;ItemsPresenter/&gt;</span><br><span class="line">                            &lt;/ScrollViewer&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.Template&gt;</span><br><span class="line">                    &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span></span><br><span class="line">                                           FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">                &lt;/ItemsControl&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ListBox&quot;</span>&gt;</span><br><span class="line">                &lt;ListBox ItemsSource=<span class="string">&quot;&#123;Binding Items&#125;&quot;</span> SelectionChanged=<span class="string">&quot;ListBox_SelectionChanged&quot;</span>&gt;</span><br><span class="line">                    &lt;ListBox.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                            &lt;ScrollViewer&gt;</span><br><span class="line">                                &lt;StackPanel&gt;</span><br><span class="line">                                    &lt;ItemsPresenter/&gt;</span><br><span class="line">                                    &lt;Button Content=<span class="string">&quot;加载更多&quot;</span> Click=<span class="string">&quot;Button_Click_22&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> Margin=<span class="string">&quot;12&quot;</span>/&gt;</span><br><span class="line">                                    </span><br><span class="line">                                &lt;/StackPanel&gt;</span><br><span class="line">                            &lt;/ScrollViewer&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/ListBox.Template&gt;</span><br><span class="line">                    &lt;ListBox.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListBox.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListBox&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ListView&quot;</span>&gt;</span><br><span class="line">                &lt;ListView x:Name=<span class="string">&quot;listView&quot;</span> ItemsSource=<span class="string">&quot;&#123;Binding Items&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span></span><br><span class="line">                                           FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;30,0,0,0&quot;</span>/&gt;</span><br><span class="line">                                </span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;GridView&quot;</span>&gt;</span><br><span class="line">                &lt;GridView x:Name=<span class="string">&quot;gridView&quot;</span>&gt;</span><br><span class="line">                    &lt;GridView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding FirstName&#125;&quot;</span> </span><br><span class="line">                                           Width=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding LastName&#125;&quot;</span> </span><br><span class="line">                                           Width=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/GridView.ItemTemplate&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;GridView.ItemContainerStyle&gt;</span><br><span class="line">                        &lt;Style TargetType=<span class="string">&quot;GridViewItem&quot;</span>&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;BorderBrush&quot;</span> Value=<span class="string">&quot;Gray&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;BorderThickness&quot;</span> Value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;HorizontalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                            &lt;Setter Property=<span class="string">&quot;VerticalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Style&gt;</span><br><span class="line">                    &lt;/GridView.ItemContainerStyle&gt;</span><br><span class="line">                &lt;/GridView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;SemanticZoom&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.Resources&gt;</span><br><span class="line">                        &lt;!--创建数据源对象,注意ItemContent属性就是数据源中真正的基础数据的列表属性,必须设置该属性的值数据源才能定位到实际绑定的数据实体对象--&gt;</span><br><span class="line">                        &lt;CollectionViewSource x:Name=<span class="string">&quot;itemcollectSource&quot;</span> IsSourceGrouped=<span class="string">&quot;True&quot;</span> ItemsPath=<span class="string">&quot;ItemContent&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.Resources&gt;</span><br><span class="line">                    &lt;SemanticZoom x:Name=<span class="string">&quot;semanticZoom&quot;</span>&gt;</span><br><span class="line">                        &lt;SemanticZoom.ZoomedInView&gt;</span><br><span class="line">                            &lt;!--在这里放置GridView(或ListView)以表示放大视图--&gt;</span><br><span class="line">                            &lt;ListView x:Name=<span class="string">&quot;inView&quot;</span>&gt;</span><br><span class="line">                                &lt;ListView.GroupStyle&gt;</span><br><span class="line">                                    &lt;GroupStyle&gt;</span><br><span class="line">                                        &lt;!--用于显示列表有的数据项的模板--&gt;</span><br><span class="line">                                        &lt;GroupStyle.HeaderTemplate&gt;</span><br><span class="line">                                            &lt;DataTemplate&gt;</span><br><span class="line">                                                &lt;Border Background=<span class="string">&quot;Red&quot;</span> Height=<span class="string">&quot;80&quot;</span>&gt;</span><br><span class="line">                                                    &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Key&#125;&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                                &lt;/Border&gt;</span><br><span class="line">                                            &lt;/DataTemplate&gt;</span><br><span class="line">                                        &lt;/GroupStyle.HeaderTemplate&gt;</span><br><span class="line">                                    &lt;/GroupStyle&gt;</span><br><span class="line">                                &lt;/ListView.GroupStyle&gt;</span><br><span class="line">                                &lt;!--用于显示列表的数据项的模板--&gt;</span><br><span class="line">                                &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;StackPanel&gt;</span><br><span class="line">                                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Title&#125;&quot;</span> Height=<span class="string">&quot;40&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/StackPanel&gt;</span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                            &lt;/ListView&gt;</span><br><span class="line">                        &lt;/SemanticZoom.ZoomedInView&gt;</span><br><span class="line">                        &lt;SemanticZoom.ZoomedOutView&gt;</span><br><span class="line">                            &lt;!--在这里放置GridView(或ListView)以表示缩小视图--&gt;</span><br><span class="line">                            &lt;GridView x:Name=<span class="string">&quot;outView&quot;</span>&gt;</span><br><span class="line">                                &lt;!--用于显示弹出的分组列表视图的数据项的模板--&gt;</span><br><span class="line">                                &lt;GridView.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;Border Height=<span class="string">&quot;60&quot;</span>&gt;</span><br><span class="line">                                            &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Group.Key&#125;&quot;</span> FontSize=<span class="string">&quot;24&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/Border&gt;</span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/GridView.ItemTemplate&gt;</span><br><span class="line">&lt;!--列表布局模板--&gt;</span><br><span class="line">                                &lt;GridView.ItemsPanel&gt;</span><br><span class="line">                                    &lt;ItemsPanelTemplate&gt;</span><br><span class="line">                                        &lt;WrapGrid ItemWidth=<span class="string">&quot;100&quot;</span> ItemHeight=<span class="string">&quot;75&quot;</span> MaximumRowsOrColumns=<span class="string">&quot;1&quot;</span> VerticalChildrenAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/ItemsPanelTemplate&gt;</span><br><span class="line">                                &lt;/GridView.ItemsPanel&gt;</span><br><span class="line">                                &lt;!--列表项目容器的样式设置--&gt;</span><br><span class="line">                                &lt;GridView.ItemContainerStyle&gt;</span><br><span class="line">                                    &lt;Style TargetType=<span class="string">&quot;GridViewItem&quot;</span>&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;BorderBrush&quot;</span> Value=<span class="string">&quot;Gray&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;Background&quot;</span> Value=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;BorderThickness&quot;</span> Value=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;HorizontalAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                        &lt;Setter Property=<span class="string">&quot;VerticalAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                                    &lt;/Style&gt;</span><br><span class="line">                                &lt;/GridView.ItemContainerStyle&gt;</span><br><span class="line">                            &lt;/GridView&gt;</span><br><span class="line">                        &lt;/SemanticZoom.ZoomedOutView&gt;</span><br><span class="line">                    &lt;/SemanticZoom&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;VirtualDataList&quot;</span>&gt;</span><br><span class="line">                &lt;ListView ItemsSource=<span class="string">&quot;&#123;Binding Data&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> Height=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ItemsStackPanel&quot;</span>&gt;</span><br><span class="line">                &lt;ItemsControl x:Name=<span class="string">&quot;imageList&quot;</span>&gt;</span><br><span class="line">                    &lt;ItemsControl.ItemsPanel&gt;</span><br><span class="line">                        &lt;ItemsPanelTemplate&gt;</span><br><span class="line">                            &lt;!--设置横向布局--&gt;</span><br><span class="line">                            &lt;ItemsStackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>/&gt;</span><br><span class="line">                        &lt;/ItemsPanelTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.ItemsPanel&gt;</span><br><span class="line">                    &lt;ItemsControl.Template&gt;</span><br><span class="line">                        &lt;ControlTemplate TargetType=<span class="string">&quot;ItemsControl&quot;</span>&gt;</span><br><span class="line">                            &lt;!--设置水平滚动--&gt;</span><br><span class="line">                            &lt;ScrollViewer ScrollViewer.HorizontalScrollBarVisibility=<span class="string">&quot;Visible&quot;</span> ScrollViewer.VerticalScrollBarVisibility=<span class="string">&quot;Disabled&quot;</span>&gt;</span><br><span class="line">                                &lt;!--&lt;StackPanel&gt;--&gt;</span><br><span class="line">                                    &lt;ItemsPresenter/&gt;</span><br><span class="line">                                &lt;!--&lt;/StackPanel&gt;--&gt;</span><br><span class="line">                            &lt;/ScrollViewer&gt;</span><br><span class="line">                        &lt;/ControlTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.Template&gt;</span><br><span class="line">                    &lt;ItemsControl.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                           </span><br><span class="line">                                &lt;StackPanel&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;&#123;Binding Image&#125;&quot;</span> Width=<span class="string">&quot;144&quot;</span> Height=<span class="string">&quot;240&quot;</span> Stretch=<span class="string">&quot;Uniform&quot;</span>/&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding ImageName&#125;&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ItemsControl.ItemTemplate&gt;</span><br><span class="line">                &lt;/ItemsControl&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ImageShow&quot;</span>&gt;</span><br><span class="line">                &lt;ListView x:Name=<span class="string">&quot;InternetImage&quot;</span>&gt;</span><br><span class="line">                    &lt;ListView.ItemTemplate&gt;</span><br><span class="line">                        &lt;DataTemplate&gt;</span><br><span class="line">                            &lt;StackPanel&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> Height=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                                &lt;Image Source=<span class="string">&quot;&#123;Binding ImageSource&#125;&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                            &lt;/StackPanel&gt;</span><br><span class="line">                        &lt;/DataTemplate&gt;</span><br><span class="line">                    &lt;/ListView.ItemTemplate&gt;</span><br><span class="line">                &lt;/ListView&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Polyline&quot;</span>&gt;</span><br><span class="line">                &lt;Polyline Stroke=<span class="string">&quot;LightBlue&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span> Height=<span class="string">&quot;150&quot;</span> Points=<span class="string">&quot;0,10 50,40 100,90 150,50 200,50 250,10 300,100 350,30 400,0&quot;</span>/&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;Polygon&quot;</span>&gt;</span><br><span class="line">                &lt;Polygon Fill=<span class="string">&quot;AliceBlue&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span> Height=<span class="string">&quot;150&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span> Points=<span class="string">&quot;0,150 0,10 50,40 100,90 150,50 200,50 250,10 300,100 350,30 400,0 400,150&quot;</span>/&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;GetLineChartPointCollection&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;chartCanvas&quot;</span> Height=<span class="string">&quot;400&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                    &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;折线图&quot;</span> Click=<span class="string">&quot;Button_Click_23&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;区域图&quot;</span> Click=<span class="string">&quot;Button_Click_24&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;PiePlotter&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;controls:PiePlotter x:Name=<span class="string">&quot;piePlotter&quot;</span> Width=<span class="string">&quot;400&quot;</span> Height=<span class="string">&quot;400&quot;</span> PieWidth=<span class="string">&quot;400&quot;</span> HoleSize=<span class="string">&quot;0.2&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">            &lt;PivotItem Header=<span class="string">&quot;ChartCanvas&quot;</span>&gt;</span><br><span class="line">                &lt;Grid&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;80&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;!--图例面板--&gt;</span><br><span class="line">                    &lt;Canvas x:Name=<span class="string">&quot;legendCanvas&quot;</span> Height=<span class="string">&quot;80&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--坐标轴面板--&gt;</span><br><span class="line">                    &lt;Canvas x:Name=<span class="string">&quot;textCanvas&quot;</span> Width=<span class="string">&quot;300&quot;</span> Height=<span class="string">&quot;300&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                        &lt;!--线性图形面板--&gt;</span><br><span class="line">                        &lt;Canvas x:Name=<span class="string">&quot;linechartCanvas&quot;</span> Width=<span class="string">&quot;300&quot;</span> Height=<span class="string">&quot;300&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">        &lt;/Pivot&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;Page.BottomAppBar&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &lt;!--菜单栏新增按钮跳转到添加购物清单页面--&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;CommandBar Opened=<span class="string">&quot;CommandBar_Opened&quot;</span> Closed=<span class="string">&quot;CommandBar_Closed&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;新增&quot;</span> Icon=<span class="string">&quot;Add&quot;</span> Click=<span class="string">&quot;AppBarButton_Click_1&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;buy&quot;</span> Icon=<span class="string">&quot;Shop&quot;</span>/&gt;</span><br><span class="line">            &lt;!--BitmapIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;BitmapIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;BitmapIcon UriSource=<span class="string">&quot;ms-appx:///Assets/questionmark.png&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--FontIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;FontIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;FontIcon FontFamily=<span class="string">&quot;Candara&quot;</span> Glyph=<span class="string">&quot;&amp;#x03a3;&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--PathIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;PathIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;PathIcon Data=<span class="string">&quot;F1 M 20,20L 24,10L 24,24L 5,24&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--文本菜单按钮--&gt;</span><br><span class="line">            &lt;CommandBar.SecondaryCommands&gt;</span><br><span class="line">                &lt;AppBarButton Label=<span class="string">&quot;about&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;/CommandBar.SecondaryCommands&gt;</span><br><span class="line">        &lt;/CommandBar&gt;</span><br><span class="line">    &lt;/Page.BottomAppBar&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 添加图表</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void <span class="function"><span class="title">AddChart</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">           //添加报表的网格图形</span><br><span class="line">           cs=new ChartStyleGridlines();</span><br><span class="line">            cs.ChartCanvas = linechartCanvas;</span><br><span class="line">            cs.TextCanvas = textCanvas;</span><br><span class="line">            cs.Title = <span class="string">&quot;Sine and Cosine Chart&quot;</span>;</span><br><span class="line">            cs.Xmin = 0;</span><br><span class="line">            cs.Xmax = 7;</span><br><span class="line">            cs.Ymin = -1.5;</span><br><span class="line">            cs.Ymax = 1.5;</span><br><span class="line">            cs.YTick = 0.5;</span><br><span class="line">            cs.GridlinePattern = GridlinePatternEnum.Dot;</span><br><span class="line">            cs.GridlineColor = new SolidColorBrush(Colors.Black);</span><br><span class="line">            cs.AddChartStyle(new TextBlock());</span><br><span class="line">            //画Sine曲线图形</span><br><span class="line">            //ds = new DataSeries();</span><br><span class="line">            ds.LineColor=new SolidColorBrush(Colors.Black);</span><br><span class="line">            ds.LineThickness = 1;</span><br><span class="line">            ds.SeriesName = <span class="string">&quot;Sine&quot;</span>;</span><br><span class="line">            //计算出图形中的一系列点,然后用线段连接起来</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 36; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                double x = i / 5.0;</span><br><span class="line">                double y = Math.Sin(x);</span><br><span class="line">                ds.LineSeries.Points.Add(new Point(x, y));</span><br><span class="line">            &#125;</span><br><span class="line">            dc.DataList.Add(ds);</span><br><span class="line">            //画cosine曲线图形</span><br><span class="line">            ds=new DataSeries();</span><br><span class="line">            ds.LineColor=new SolidColorBrush(Colors.Red);</span><br><span class="line">            ds.SeriesName = <span class="string">&quot;Cosine&quot;</span>;</span><br><span class="line">            ds.LinePattern = GridlinePatternEnum.DashDot;</span><br><span class="line">            ds.LineThickness = 2;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 36; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                double x = i / 5.0;</span><br><span class="line">                double y = Math.Cos(x);</span><br><span class="line">                ds.LineSeries.Points.Add(new Point(x,y));</span><br><span class="line">            &#125;</span><br><span class="line">            dc.DataList.Add(ds);</span><br><span class="line">            //画sine^2曲线图形</span><br><span class="line">            ds = new DataSeries();</span><br><span class="line">            ds.LineColor = new SolidColorBrush(Colors.Green);</span><br><span class="line">            ds.SeriesName = <span class="string">&quot;Sine^2&quot;</span>;</span><br><span class="line">            ds.LinePattern = GridlinePatternEnum.Dot;</span><br><span class="line">            ds.LineThickness = 2;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0;  i&lt; 36; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                double x = i / 5.0;</span><br><span class="line">                double y = Math.Sin(x)*Math.Sin(x);</span><br><span class="line">                ds.LineSeries.Points.Add((Point)new Point(x,y));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            dc.DataList.Add(ds);</span><br><span class="line">            dc.AddLines(linechartCanvas,cs);</span><br><span class="line">            //添加图例</span><br><span class="line">            lg.legendCanvas = legendCanvas;</span><br><span class="line">            lg.IsLegend = <span class="literal">true</span>;</span><br><span class="line">            lg.IsBorder = <span class="literal">true</span>;</span><br><span class="line">            lg.AddLegend(cs,dc);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //网格图形</span><br><span class="line">        private ChartStyleGridlines cs;</span><br><span class="line">        //图例</span><br><span class="line">        private Legend lg = new Legend();</span><br><span class="line">        //图形数据集合</span><br><span class="line">        private DataCollection dc = new DataCollection();</span><br><span class="line">        //线性数据图形</span><br><span class="line">        private DataSeries ds=new DataSeries();</span><br></pre></td></tr></table></figure><p>13.4.QuickCharts图表控件库解析<br>QuickCharts图表控件是Amcharts公司提供的一个开源图表控件库,这个控件库支持WPF,Silverlight和Windows平台,源码可以从Github网站(<a href="http://github.com/ailon/amCharts-Qucik-Charts)%E4%B8%8B%E8%BD%BD">http://github.com/ailon/amCharts-Qucik-Charts)下载</a>.<br>QuickCharts图表控件封装了一些常用的图表控件如饼图,柱形图,折线图,区域图等,可以直接再项目中进行其提供的图表控件来创建图表.<br>13.41.QuickCharts项目结构分析<br>QuickCharts控件库包含了两类图表,一种是饼图图表PieChart,另外一种是连续图表SerialChart.连续图包含了线形,柱形,区域图等图形.<br>![1.png]<br>![2.png]<br>13.42.饼图图表PieChart的实现逻辑<br>饼图PieChart是由多个饼图切片Slice控件,一个图例控件Legend控件和一个标注Balloon控件组成.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Windows应用程序开发" scheme="https://drfengling.github.io/categories/Windows%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="UWP" scheme="https://drfengling.github.io/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出Windows应用程序开发(二)</title>
    <link href="https://drfengling.github.io/qm/5bdeb856.html"/>
    <id>https://drfengling.github.io/qm/5bdeb856.html</id>
    <published>2022-12-05T02:39:37.000Z</published>
    <updated>2022-12-10T00:49:13.537Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="应用数据"><a href="#应用数据" class="headerlink" title="应用数据"></a>应用数据</h4><p>6.1 应用设置简介<br>1.拥有容器的层次结构<br>2.有本地和漫游两种设置类型<br>Win10支持本地和漫游两种类型,本地是指数据只会存在于当前的客户端应用程序里面,漫游则是指数据会同步到其他设备的相同账户的客户端里.本地应用设置是在根容器ApplicationData.Current.LocalSettings下,而漫游应用设置是在根容器ApplicationData.Current.RoamingSetting下,只是存储的根目录不一样,其他Api操作完全一致.<br>3.应用设置支持大多数Windows运行时数据类型<br>应用设置所存储的数据是单个的数据类型对象,它并不是所有的类型都会支持,例如,集合对象不支持,如果要将List<String>对象存储到应用设置里会引起异常信息.<br>数值类型:UInt8-64 Int16-64 Single Double<br>布尔类型:Boolean<br>字符类型:Char16,String<br>时间类型:DateTime,TimeSpan<br>结构类型:GUID,Point,Size,Rect<br>组合类型:ApplicationDataCompositeValue<br>对于不支持的类型,使用应用文件存储,另一种是将数据序列化为一种受支持的数据类型<br>6.1.2.应用设置操作<br>应用设置操作支持增删改查,在开始对应用设置操作之前,首先要获取到应用设置的容器对象(ApplicationDataContainer),所有的操作都会从一个容器对象开始.获取应用程序的根容器可以通过ApplicationData.Current属性来获取单例对象<br>1.添加和修改应用设置<br>在进行应用设置相关操作前,需要先获取应用的设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationDataContainer localSettings=Windows.Storage.ApplicationData.Current.LocalSettings;</span><br></pre></td></tr></table></figure><p>获取容器之后,将数据添加到应用设置,如果该应用设置已存在,则对其进行修改,使用ApplicationDataContainer.Values属性可以访问在上一步中获取的LocalSettings容器中的设置,然后通过键/值对方式来操作应用设置.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localSettings.Values[<span class="string">&quot;testSetting&quot;</span>]=<span class="string">&quot;Hello Windows10&quot;</span>;</span><br></pre></td></tr></table></figure><p>如果容器里面没有”testSetting”这个键则新增一个,如果已有,则对其进行修改.<br>使用ApplicationDataContainer.Values属性可以访问在上一步中获取的LocalSetting容器中的设置,然后通过键/值对的方式来操作应用设置.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool isoKeyExist=localSettings.Values.ContainKey(<span class="string">&quot;testSetting&quot;</span>);</span><br></pre></td></tr></table></figure><p>2.读取应用设置<br>从设置中读取数据,也是使用ApplicationDataContainer.Values属性来获取应用设置的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String value=localSettings.Values[<span class="string">&quot;testSetting&quot;</span>].ToString();</span><br></pre></td></tr></table></figure><p>3.删除应用设置<br>如果需要删除应用程序里面的设置数据,可以用ApplicationDataContainerSettings.Remove方法来实现.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localSettings.Values.Remove(<span class="string">&quot;testSetting&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;ApplicationDataContainerSettings&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;!--输入应用设置的键--&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock x:Name=<span class="string">&quot;textBlock2&quot;</span> Text=<span class="string">&quot;Key:&quot;</span> Width=<span class="string">&quot;150&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBox x:Name=<span class="string">&quot;txtKey&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;!--输入应用设置的值--&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Margin=<span class="string">&quot;0 20 0 0&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;Value:&quot;</span> Width=<span class="string">&quot;150&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBox x:Name=<span class="string">&quot;txtValue&quot;</span> Text=<span class="string">&quot;&quot;</span> Width=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;保存&quot;</span> x:Name=<span class="string">&quot;btnSave&quot;</span> Click=<span class="string">&quot;btnSave_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除&quot;</span> x:Name=<span class="string">&quot;btnDelete&quot;</span></span><br><span class="line">                            Click=<span class="string">&quot;btnDelete_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;清空所有&quot;</span> x:Name=<span class="string">&quot;deleteall&quot;</span></span><br><span class="line">                            Click=<span class="string">&quot;deleteall_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;!--显示容器内所有的键的列表,点击选中可以在上面的输入框里面查看和修改它对应的值--&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Keys列表:&quot;</span>/&gt;</span><br><span class="line">                    &lt;ListBox Height=<span class="string">&quot;168&quot;</span> x:Name=<span class="string">&quot;lstKeys&quot;</span> SelectionChanged=<span class="string">&quot;lstKeys_SelectionChanged&quot;</span>/&gt;</span><br><span class="line">                    </span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">              </span><br><span class="line">                </span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> ///获取当前应用程序的本地设置根容器</span><br><span class="line">            _appSettings = ApplicationData.Current.LocalSettings;</span><br><span class="line">            //把容器的键列表绑定到list控件</span><br><span class="line">            BindKeyList();</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 将当前程序中所有的key值绑定到List上</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private void <span class="function"><span class="title">BindKeyList</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            //先清空List控件的绑定值</span><br><span class="line">            lstKeys.Items.Clear();</span><br><span class="line">            //获取当前应用程序的所有Key</span><br><span class="line">            foreach (var item <span class="keyword">in</span> _appSettings.Values.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                //添加到List控件上</span><br><span class="line">                lstKeys.Items.Add(item);</span><br><span class="line">            &#125;</span><br><span class="line">            txtKey.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            txtValue.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //声明容器实例</span><br><span class="line">        private ApplicationDataContainer _appSettings;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 保存应用设置的值</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void btnSave_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //检查key输入框不为空</span><br><span class="line">            <span class="keyword">if</span> (!string.IsNullOrEmpty(txtKey.Text))</span><br><span class="line">            &#123;</span><br><span class="line">                _appSettings.Values[txtKey.Text] = txtValue.Text;</span><br><span class="line">                BindKeyList();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请输入key值&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 删除在List中选中的应用设置</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void btnDelete_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //如果选中了List中的某项</span><br><span class="line">            <span class="keyword">if</span> (lstKeys.SelectedIndex &gt; -1)</span><br><span class="line">            &#123;</span><br><span class="line">                //移除这个键的独立存储设置</span><br><span class="line">                _appSettings.Values.Remove(lstKeys.SelectedItem.ToString());</span><br><span class="line">                BindKeyList();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 清空容器所有的设置</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void deleteall_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            _appSettings.Values.Clear();</span><br><span class="line">            BindKeyList();</span><br><span class="line">        &#125;</span><br><span class="line">        //List控件选中项的事件,将选中的键和值显示在上面的文本框中.</span><br><span class="line">        private void lstKeys_SelectionChanged(object sender, SelectionChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.AddedItems.Count &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                //获取在List中选择的Key</span><br><span class="line">                string key = e.AddedItems[0].ToString();</span><br><span class="line">                //检查设置是否存在这个key</span><br><span class="line">                <span class="keyword">if</span> (_appSettings.Values.ContainsKey(key)) &#123;</span><br><span class="line">                    txtKey.Text = key;</span><br><span class="line">                    //获取key的值并显示在文本框上</span><br><span class="line">                    txtValue.Text = _appSettings.Values[key].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>6.13.存储容器设置<br>1.容器的创建<br>容器的创建必须依赖容器的对象,也就是说必须要在容器下面创建容器,所以容器里是可以嵌套着容器的,<br>但是这个嵌套的层次不能超过32层.首先需要获取根容器,然后调用ApplicationDataContainer.CreateContainer方法,可创建设置容器.该方法有两个参数,第一个是容器的名字,注意同一个容器里面不能有相同名字的两个容器,第二个是ApplicationDataCreateDisposition枚举,通常会设置为枚举中的Always值,表示如果容器不存在则新建一个再返回容器对象.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationDataContainer container=localSettings.CreateContainer(<span class="string">&quot;exampleContainer&quot;</span>,ApplicationDataCreateDisposition.Always);</span><br></pre></td></tr></table></figure><p>2.容器的删除<br>容器的删除可以调用ApplicationDataContainer.DeleteContainer方法,通过传入容器的名称可以删除当前容器下的该名称的容器,注意不是删除容器对象的这个容器.删除容器后,容器下面的应用设置信息也会全部删除掉.所以在做容器删除时一定要确认该容器下面的应用设置信息是否已经完全不需要了,否则会造成信息的丢失.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localSettings.DeleteContainer(<span class="string">&quot;exampleContainer&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;ApplicationDataContainer&quot;</span>&gt;</span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;创建Container&quot;</span> Click=<span class="string">&quot;CreateContainer_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;添加信息&quot;</span> Click=<span class="string">&quot;WriteSetting_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;删除信息&quot;</span> Click=<span class="string">&quot;DeleteSetting_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;删除Container&quot;</span> Click=<span class="string">&quot;DeleteContainer_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                   &lt;TextBlock x:Name=<span class="string">&quot;OutputTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> ///获取根容器</span><br><span class="line">           localSettings=ApplicationData.Current.LocalSettings;</span><br><span class="line">           //输出容器相关信息</span><br><span class="line">           DisplayOutput();</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 展示创建的容器和应用设置的信息</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       private void <span class="function"><span class="title">DisplayOutput</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">          //判断容器是否存在</span><br><span class="line">          bool hasContainer=localSettings.Containers.ContainsKey(containerName);</span><br><span class="line">           //判断容器里面的键值是否存在</span><br><span class="line">           bool hasSetting = hasContainer ? localSettings.Containers[containerName].Values.ContainsKey(settingName) : <span class="literal">false</span>;</span><br><span class="line">           string output = string.Format(</span><br><span class="line">               $<span class="string">&quot;Container Exists:&#123;(hasContainer?true:false)&#125;\n Setting Exists:&#123;(hasSetting?true:false)&#125;&quot;</span>);</span><br><span class="line">           OutputTextBlock.Text = output;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 创建一个容器</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void CreateContainer_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //如果容器不存在则新建</span><br><span class="line">           ApplicationDataContainer container = localSettings.CreateContainer(containerName, ApplicationDataCreateDisposition.Always);</span><br><span class="line">           DisplayOutput();</span><br><span class="line">       &#125;</span><br><span class="line">       //在新建的容器上添加应用设置信息</span><br><span class="line">       private void WriteSetting_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (localSettings.Containers.ContainsKey(containerName))</span><br><span class="line">           &#123;</span><br><span class="line">               localSettings.Containers[containerName].Values[settingName] = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           DisplayOutput();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 删除容器上的应用设置信息</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void DeleteSetting_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (localSettings.Containers.ContainsKey(containerName))</span><br><span class="line">           &#123;</span><br><span class="line">               localSettings.Containers[containerName].Values.Remove(settingName);</span><br><span class="line">           &#125;</span><br><span class="line">           DisplayOutput();</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 删除所创建的容器</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void DeleteContainer_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           localSettings.DeleteContainer(containerName);</span><br><span class="line">           DisplayOutput();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>6.14.复合设置数据<br>应用设置还支持一个特殊的类型 ApplicationDataCompositeValue,就是复合设置.<br>ApplicationDataCompositeValue类表示必须进行自动序列化和反序列化的相关应用程序的设置.<br>复合设置通过将其插入设置映射而序列化,通过从映射查找该设置而反序列化.针对少量数据进行了优化,用于大型数据集，性能可能很差.所以复合设置使用的场景通常是将一组互相依赖的数据捆绑在一起,保证在任何情况下,他们都是作为一个整体进行操作.复合设置是应用设置中的一种,所以其相关的操作和应用设置一致.ApplicationDataCompositeValue对象也是一个键/值对的对象类型.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationDataCompositeValue composite=new ApplicationDataCompositeValue();</span><br><span class="line">composite[<span class="string">&quot;intVal&quot;</span>]=1;</span><br><span class="line">composite[<span class="string">&quot;strVal&quot;</span>]=<span class="string">&quot;string&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"> &lt;PivotItem Header=<span class="string">&quot;ApplicationDataCompositeValue&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;创建&quot;</span> Click=<span class="string">&quot;WriteCompositeSetting_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;删除&quot;</span> Click=<span class="string">&quot;DeleteCompositeSetting_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;OutputTextBlock1&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> ///ApplicationDataCompositiveValue</span><br><span class="line">            roamingSettings=ApplicationData.Current.LocalSettings;</span><br><span class="line">            //展示信息</span><br><span class="line">            DisplayOutputAdcv();</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 展示复合设置的信息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private void <span class="function"><span class="title">DisplayOutputAdcv</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            ApplicationDataCompositeValue composite = (ApplicationDataCompositeValue)roamingSettings.Values[settingNameA];</span><br><span class="line">            string output;</span><br><span class="line">            <span class="keyword">if</span> (composite==null)</span><br><span class="line">            &#123;</span><br><span class="line">                output = <span class="string">&quot;复合设置信息为空&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                output =$<span class="string">&quot;复合设置:&#123;settingNameB&#125;=&#123;composite[settingNameB]&#125;,&#123;settingNameC&#125;=&#123;composite[settingNameC]&#125;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            OutputTextBlock1.Text = output;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> ApplicationDataContainer roamingSettings = null;</span><br><span class="line">        //复合设置的名称</span><br><span class="line">        const string settingNameA = <span class="string">&quot;exampleCompositeSetting&quot;</span>;</span><br><span class="line">        //复合设置里面的键One</span><br><span class="line">        const string settingNameB = <span class="string">&quot;one&quot;</span>;</span><br><span class="line">        //复合设置里面的键two</span><br><span class="line">        const string settingNameC = <span class="string">&quot;two&quot;</span>;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 写入复合设置信息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void WriteCompositeSetting_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            ApplicationDataCompositeValue composite=new ApplicationDataCompositeValue();</span><br><span class="line">            composite[settingNameB] = 1;</span><br><span class="line">            composite[settingNameC] = <span class="string">&quot;world&quot;</span>;</span><br><span class="line">            roamingSettings.Values[settingNameA]=composite;</span><br><span class="line">            DisplayOutputAdcv();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 删除复合设置信息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void DeleteCompositeSetting_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            roamingSettings.Values.Remove(settingNameA);</span><br><span class="line">            DisplayOutputAdcv();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>6.2 应用文件存储<br>在每个应用的应用数据存储中,该应用拥有系统定义的根目录,一个用于本地文件,一个用于漫游文件,还有一个用于临时文件,应用可向根目录添加新文件和新目录,创建新目录可组织文件,分本地和漫游<br>6.21.三种类型的应用文件<br>1.本地应用文件<br>存储在客户端的存储数据,存储区域属于程序的沙箱里,应用程序自己才可以访问,保障了数据的安全性.应用程序卸载后无法恢复.本地应用文件的根目录文件夹可以通过ApplicationData对象的LocalFolder属性来访问,即ApplicationData.Current.LocalFolder,类型是文件夹(StorageFolder)对象.<br>2.漫游应用文件<br>漫游应用文件是指对同一个账号登录的设备共享的数据,用户可以轻松在多个设备保持应用数据同步.漫游应用文件的根目录文件夹可以通过ApplicationData对象的RoamingFolder属性来访问.也就是ApplicationData.Current.RoamingFolder.<br> 1.数据大小有限制.<br>大小由ApplicationData类的RoamingStorageQuota属性决定.RoamingStorageQuota属性表示获取可从漫游应用程序数据存储区同步到云的数据的最大值,如果漫游数据在漫游应用程序数据存储区中的当前大小超过RoamingStorageQuota指定的最大值,则系统会挂起并将包中所有应用程序的数据复制到云,直到当前大小不再超过最大值.出于此原因,最好的做法是仅为用户首选项,链接和小型数据文件使用漫游数据.<br> 2.数据改变时机的不确定性<br>如果需要监控漫游数据的变化,应用应该注册处理ApplicationData类的DataChanged事件,处理操作在漫游应用程序更改时执行.<br> 3.数据版本的一致性<br>更新新版本之前,不会将应用数据更新到用户安装了该应用的其他设备.<br> 4.漫游数据不是永久的,有时间限制.<br>漫游数据同步并不是无期限同步的,它有一个30天的时间间隔限制,用户可在此时间间隔访问漫游数据.超过 云删除.卸载 漫游数据保留  在改时间间隔重新安装,会从云中同步漫游数据.<br> 5.漫游数据同步时机依赖于网络和设备<br>随机 漫游数据是应用设置,可以通过特殊的设置键来设置一个高优先级别的漫游设置数据,可以更快频繁和快速同步到云端.这个高优先级别的key为HighPriority,系统会以最快的速度在多个设备间同步HighPriority所对应的数据.它支持ApplicationDataCompositeValue数据,但总大小限于8KB,限值不是强制的,超过视为常规漫游。<br>3.临时应用文件<br>类似缓存,不会漫游,随时删除.磁盘清理清除 用于存储应用会话期间的临时信息,无法保证超出应用会话结束时间后仍将保留此数据.临时应用文件的根目录文件夹可以通过ApplicationData对象的TemporaryFolder属性来访问,也就是ApplicationData.Current.TemporaryFolder.<br>6.22.应用文件和文件夹操作<br>win10对应用数据所进行的操作,就是对应用文件夹和文件的操作.<br>StorageFolder类表示操作文件夹及其内容,并提供有关它们的信息,用于向本地文件夹内的某个文件读取和写入数据.在设备存储里文件夹的根目录分别为本地文件夹(ApplicationData.Current.LocalFolder),漫游文件夹(ApplicationData.Current.RoamingFolder)和临时文件夹(ApplicationData.Current.TemporaryFolder).<br>Storage类表示文件,提供有关文件及其内容和操作信息.StorageFolder类和StorageFile类是两个关系非常密切的类<br>StorageFolder类的主要成员<br>DateCreated 获取创建文件夹的日期和时间<br>Name 获取存储文件夹的名称<br>Path 获取存储文件夹的路径<br>CreteFileAsync(string desiredName) 在文件夹或文件组中创建一个新文件,desiredName:要创建的文件的所需名称,返回表示新文件的StorageFile<br>CreateFolderAsync(string desiredName) 在当前文件夹中创建新的文件夹.desiredName:要创建的文件夹所需名称.返回表示新文件夹的StorageFolder.<br>DeleteAsync(); 删除当前文件夹或文件组.<br>GetFileAsync(string name) 从当前文件夹获取指定文件.name:要检索的文件的名称.返回表示文件的StorageFile.<br>GetFilesAsync() 在当前文件夹中获取文件.返回文件夹中的文件列表(类型IReadOnlyList<StorageFile>).列表中的每个文件均由一个StorageFile对象表示.<br>GetFolderAsync(string name) 从当前文件夹获取指定文件夹.name:要检索的文件夹的名称.返回表示子文件夹的StorageFolder.<br>RenameAsync(string desiredName) 重命名当前文件夹.desiredName:当前文件夹所需的新名称.<br>StorageFile类的主要成员<br>DateCreated 获取创建文件夹的日期和时间<br>Name 获取存储文件夹的名称<br>Path 获取存储文件夹的路径<br>CopyAndReplaceAsync(IStorageFile fileToReplace) 将指定文件替换为当前文件的副本.fileToReplace:要替换的文件<br>CopyAsync(IStorageFolder destinationFolder):在指定文件夹中创建文件的副本.destinationFolder:从中创建副本的目标文件夹.返回表示副本的StorageFile<br>CopyAsync(IStorageFolder destinationFolder,string desiredNewName) 使用所需的名称,在指定文件夹中创建文件的副本.destinationFolder:从中创建副本的目标文件夹.desiredNewName:副本的所需名称.如果在已经指定desiredNewName的目标文件夹中存在现有文件,则为副本生成唯一的名称.返回表示副本的StorageFile<br>DeleteAsync() 删除当前文件<br>GetFileFromPathAsync(string path) 获取StorageFIle对象以代表指定路径中的文件.path:表示获取StorageFile的文件路径.返回表示文件的StorageFile<br>RenameAsync(string desiredName) 重命名当前文件.desiredName:当前项所需的新名称.<br>1.创建文件夹和文件<br>对于根目录里的StorageFolder对象,可以直接通过ApplicationData类的单例来获取,在文件夹里面再创建文件夹,可以调用StorageFolder.CreateFolderAsync方法在本地文件夹中创建一个文件夹目录,以及调用StorageFolder.CreateFileAsync方法在本地文件夹中创建一个文件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 创建文件夹和文件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private async void <span class="function"><span class="title">GetLocalFolder</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            //获取本地文件夹根目录</span><br><span class="line">            StorageFolder <span class="built_in">local</span> = Windows.Storage.ApplicationData.Current.LocalFolder;</span><br><span class="line">            //创建文件夹,如果文件夹存在则打开它</span><br><span class="line">            var dataFolder =await local.CreateFolderAsync(<span class="string">&quot;DataFolder&quot;</span>,CreationCollisionOption.OpenIfExists);</span><br><span class="line">            //创建一个命名为DataFile.txt的文件,如果文件存在则替换掉</span><br><span class="line">            var file = await dataFolder.CreateFileAsync(<span class="string">&quot;DataFile.txt&quot;</span>,CreationCollisionOption.ReplaceExisting);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>2.文件的读写<br>可以使用StreamReader,StreamWriter类,FileIO类<br>使用S可以读取/写入标准文本文件的各行信息.StreamReader/StreamWriter的默认编码为UTF-8.UTF-8可以正确处理Unicode字符并提供一致的结果.FileIO类是专门为IStorageFile类型的对象表示读取/写入文件提供帮助的方法,FileIO类是一个静态类,直接调用其静态的文件读写方法来进行操作.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 2.文件的读写</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private async void ReadWrite(StorageFile file) &#123;</span><br><span class="line">            //读取文件的文本信息,使用FileIO类实现</span><br><span class="line">            string fileContent = await FileIO.ReadTextAsync(file);</span><br><span class="line">            //读取文件的文本信息,使用StreamReader类实现</span><br><span class="line">            using (StreamReader streamReader = new StreamReader(file.Path))</span><br><span class="line">            &#123;</span><br><span class="line">                fileContent = streamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            //写入文件的文本信息,使用FileIO类实现</span><br><span class="line">            await FileIO.WriteTextAsync(file, <span class="string">&quot;Windows 10&quot;</span>);</span><br><span class="line">            //写入文件的文本信息,使用StreamWriter类实现.</span><br><span class="line">            using (StreamWriter swNew=new StreamWriter(file.Path))</span><br><span class="line">            &#123;</span><br><span class="line">                swNew.WriteLine(<span class="string">&quot;Windows 10&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>还可以使用WindowsRuntimeStorageExtensions类提供的实现IStorageFile和IStorageFolder接口类使用的方法来进行文件和文件夹的读写操作,这些扩展的方法分别有OpenStreamForReadAsync和OpenStreamForWriteAsync.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"> //使用OpenStreamForWriteAsync方法来实现写入文件信息</span><br><span class="line">           byte[] fileBytes=Encoding.UTF8.GetBytes(<span class="string">&quot;Windows 10&quot;</span>.ToCharArray());</span><br><span class="line">           using (var s=await file.OpenStreamForWriteAsync())</span><br><span class="line">           &#123;</span><br><span class="line">               s.Write(fileBytes,0,fileBytes.Length);</span><br><span class="line">           &#125;</span><br><span class="line">          ///文件删除,复制,重命名和移动操作</span><br><span class="line">           //await file.DeleteAsync();</span><br><span class="line">           var newfile =await storageFolder.CreateFileAsync(<span class="string">&quot;sample - Copy.txt&quot;</span>, CreationCollisionOption.ReplaceExisting);</span><br><span class="line">           //复制文件</span><br><span class="line">           StorageFile fileCopy = await file.CopyAsync(storageFolder,<span class="string">&quot;sample - Copy.txt&quot;</span>,NameCollisionOption.ReplaceExisting);</span><br><span class="line">           //重命名文件</span><br><span class="line">           await file.RenameAsync(<span class="string">&quot;sampleRe.txt&quot;</span>);</span><br><span class="line">           var newStorageFolder = await storageFolder.CreateFolderAsync(<span class="string">&quot;newDataFolder&quot;</span>, CreationCollisionOption.OpenIfExists);</span><br><span class="line">           //移动文件</span><br><span class="line">           await file.MoveAsync(newStorageFolder,<span class="string">&quot;newDataFile&quot;</span>);</span><br><span class="line">//文件名</span><br><span class="line">       private string fileName = <span class="string">&quot;testfile.txt&quot;</span>;</span><br><span class="line">       //保存按钮事件处理程序</span><br><span class="line">       private async void bt_save_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (infoStorage.Text!=<span class="string">&quot;&quot;</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               //写入文件信息</span><br><span class="line">               await WriteFile(fileName,infoStorage.Text);</span><br><span class="line">               await new MessageDialog(<span class="string">&quot;保存成功&quot;</span>).ShowAsync();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               await new MessageDialog(<span class="string">&quot;内容不能为空&quot;</span>).ShowAsync();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 写入本地文件夹根目录的文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;fileName&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;text&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private async Task WriteFile(string fileName, string text)</span><br><span class="line">       &#123;</span><br><span class="line">           //获取本地文件夹根目录文件夹</span><br><span class="line">           IStorageFolder applicationFolder=ApplicationData.Current.LocalFolder;</span><br><span class="line">           //在文件夹里面创建文件,如果文件存在则替换掉.</span><br><span class="line">           IStorageFile storageFile = await applicationFolder.CreateFileAsync(fileName,CreationCollisionOption.OpenIfExists);</span><br><span class="line">           //使用FileIO类把字符串信息写入文件</span><br><span class="line">           await FileIO.WriteTextAsync(storageFile, text);</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 删除文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void bt_delete_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           string text;</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               IStorageFolder applicationFolder = ApplicationData.Current.LocalFolder;</span><br><span class="line">               //获取文件</span><br><span class="line">               IStorageFile storageFile=await applicationFolder.GetFileAsync(fileName);</span><br><span class="line">               //删除当前的文件</span><br><span class="line">               await storageFile.DeleteAsync();</span><br><span class="line">               text = <span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception ex)</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               text = <span class="string">&quot;文件删除错误:&quot;</span> + ex.Message;</span><br><span class="line">           &#125;</span><br><span class="line">           await new MessageDialog(text).ShowAsync();</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 读取文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void bt_read_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //读取文件的文本信息</span><br><span class="line">           string content = await ReadFile(fileName);</span><br><span class="line">           await new MessageDialog(content).ShowAsync();</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 读取本地文件夹根目录的文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;fileName&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private async Task&lt;string&gt; ReadFile(string fileName)</span><br><span class="line">       &#123;</span><br><span class="line">           string text;</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               //获取本地文件夹根目录文件夹</span><br><span class="line">               IStorageFolder applicaitonFolder=ApplicationData.Current.LocalFolder;</span><br><span class="line">               //根据文件名获取文件夹里面的文件</span><br><span class="line">               IStorageFile storageFile=await applicaitonFolder.GetFileAsync(fileName);</span><br><span class="line">               //打开文件获取文件的数据流</span><br><span class="line">               IRandomAccessStream accessStream=await storageFile.OpenReadAsync();</span><br><span class="line">               //使用StreamReader读取文件的内容,需要将IRandomAccessStream对象转换为Stream对象来初始化StreamReader对象.</span><br><span class="line">               using (StreamReader streamReader=new StreamReader(accessStream.AsStreamForRead((int)accessStream.Size)))</span><br><span class="line">               &#123;</span><br><span class="line">                   text = streamReader.ReadToEnd();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception e)</span><br><span class="line">           &#123;</span><br><span class="line">               text = <span class="string">&quot;文件读取错误:&quot;</span> + e.Message;</span><br><span class="line">             </span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">return</span> text;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.23.文件Stream和Buffer读写操作<br>操作二进制文件,需要用到DataWriter类和DataReader类,DataWriter类用于写入文件的信息.当然这个信息不仅仅是文本信息<br>1.Buffer的写入操作<br>win10里,文件的Buffer操作使用的是IBuffer对象,所以要使用DataWriter类写入相关的信息之后再转换为IBuffer对象,然后保存到文件中.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">using(InMemoryRandomAccessStream memoryStream=new InMemoryRandomAccessStream())&#123;</span><br><span class="line">using(DataWriter dataWriter=new DataWriter(memoryStream))&#123;</span><br><span class="line">//文件相关的信息,可以根据文件的规则来进行写入</span><br><span class="line">dataWriter.WriterInt32(size);</span><br><span class="line">dataWriter.WriteString(userContent);</span><br><span class="line">buffer=dataWriter.DetachBuffer();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">await FileIO.WriteBufferAsync(file,buffer);</span><br></pre></td></tr></table></figure><p>2.Buffer的读取操作<br>读取的操作其实就是获取文件的IBuffer对象之后,再使用IBuffer对象初始化一个DataReader对象,就可以对文件进行读取操作了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IBuffer buffer=await FileIO.ReadBufferAsync(file);</span><br><span class="line">using(DataReader dataReader=DataReader.FromBuffer(buffer))&#123;</span><br><span class="line">//读取文件相关的信息,读取的规则要与文件的规则一致.</span><br><span class="line">Int32 stringSize=dataReader.ReadInt32();</span><br><span class="line">string fileContent=dataReader.ReadString((uint)stringSize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.Stream的写入操作<br>文件的Stream其实就是文件内的信息,所以在用Stream来写入文件的数据时,直接保存Stream的信息就可以,并不需要再调用文件的对象进行保存.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">using(StorageStreamTransaction transaction=await file.OpenTransactedWriteAsync())&#123;</span><br><span class="line">using(DataWriter dataWriter=new DataWriter(transaction.Stream))&#123;</span><br><span class="line">//文件相关的信息,可以根据文件的规则进行写入</span><br><span class="line">dataWriter.WriteInt32(size);</span><br><span class="line">dataWriter.WriteString(userContent);</span><br><span class="line">... ...</span><br><span class="line">transaction.Stream.Size=await dataWriter.StoreAsync();</span><br><span class="line">//保存Stream数据</span><br><span class="line">await transaction.CommitAsync();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.Stream的读取操作<br>使用Stream读取文件的内容,需要先调用DataReader类的LoadAsync方法,把数据加载进来,再调用相关的Read方法来读取文件的内容;Buffer的操作不用调用LoadAsync方法,那是因为其已经一次性把数据都读取出来了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">using(IRandomAccessStream readStream=await file.OpenAsync(FileAccessMode.Read))&#123;</span><br><span class="line">//读取文件相关的信息,读取的规则要与文件的规则一致</span><br><span class="line">await dataReader.LoadAsync(sizeof(Int32));</span><br><span class="line">Int32 stringSize=dataReader.ReadInt32();</span><br><span class="line">await dataReader.LoadAsync((UInt32)stringSize);</span><br><span class="line">string fileContent=dataReader.ReadString((uint)stringSize);</span><br><span class="line">... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件Stream和Buffer读写操作的示例,演示了文件格式是先写入字符串内容的长度,Int32类型占用4个字节,然后再写入字符串的内容;读取文件的时候再按照这样的方式逆着来.按文件格式读取正确数据.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;StreamBuffer&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_crreate&quot;</span> Content=<span class="string">&quot;创建一个测试文件&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_crreate_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_writebuffer&quot;</span> Content=<span class="string">&quot;写入buffer&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_writebuffer_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_readbuffer&quot;</span> Content=<span class="string">&quot;读取buffer&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_readbuffer_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_writestream&quot;</span> Content=<span class="string">&quot;写入stream&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_writestream_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;bt_readstream&quot;</span> Content=<span class="string">&quot;读取stream&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_readstream_Click&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;StreambufferTextBlock&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line">   /// &lt;summary&gt;</span><br><span class="line">        /// 创建的测试文件对象</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private StorageFile sampleFile;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 文件名</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        private string filename = <span class="string">&quot;sampleFile.dat&quot;</span>;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 创建一个文件事件处理程序</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void bt_crreate_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StorageFolder storageFolder= ApplicationData.Current.LocalFolder;</span><br><span class="line">            sampleFile=await storageFolder.CreateFileAsync(filename,CreationCollisionOption.ReplaceExisting);</span><br><span class="line">            StreambufferTextBlock.Text = $<span class="string">&quot;文件&#123;sampleFile.Name&#125;已经创建好.&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 写入IBuffer按钮事件处理程序</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void bt_writebuffer_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StorageFile file = sampleFile;</span><br><span class="line">            <span class="keyword">if</span> (file!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    string userContent = <span class="string">&quot;测试的文本消息&quot;</span>;</span><br><span class="line">                    IBuffer buffer;</span><br><span class="line">                    //使用一个内存的可访问的数据流创建一个DataWriter对象,写入String 再转换为IBuffer对象.</span><br><span class="line">                    using (InMemoryRandomAccessStream memoryStream=new InMemoryRandomAccessStream())</span><br><span class="line">                    &#123;</span><br><span class="line">                        //把String信息转换为IBuffer对象.</span><br><span class="line">                        using (DataWriter dataWriter=new DataWriter(memoryStream))</span><br><span class="line">                        &#123;</span><br><span class="line">                            //先写入字符串的长度信息</span><br><span class="line">                            dataWriter.WriteInt32(Encoding.UTF8.GetByteCount(userContent));</span><br><span class="line">                            //写入字符串信息</span><br><span class="line">                            dataWriter.WriteString(userContent);</span><br><span class="line">                            buffer=dataWriter.DetachBuffer();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    await FileIO.WriteBufferAsync(file,buffer);</span><br><span class="line">                    StreambufferTextBlock.Text = $<span class="string">&quot;长度为:&#123;buffer.Length&#125; bytes的文本信息写入到了文件&#123;file.Name&#125;:&#123;Environment.NewLine+Environment.NewLine+userContent&#125;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                catch (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    StreambufferTextBlock.Text =$<span class="string">&quot;异常:&#123;ex.Message&#125;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                StreambufferTextBlock.Text = <span class="string">&quot;请先创建文件&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 读取IBuffer按钮事件处理程序</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void bt_readbuffer_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StorageFile file= sampleFile;</span><br><span class="line">            <span class="keyword">if</span> (file != null)</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    IBuffer buffer = await FileIO.ReadBufferAsync(file);</span><br><span class="line">                    using (DataReader dataReader = DataReader.FromBuffer(buffer))</span><br><span class="line">                    &#123;</span><br><span class="line">                        //先读取字符串的长度信息</span><br><span class="line">                        Int32 stringSize = dataReader.ReadInt32();         //读取字符串信息</span><br><span class="line">                        string fileContent = dataReader.ReadString((uint)stringSize);</span><br><span class="line">                        StreambufferTextBlock.Text = $<span class="string">&quot;长度为:&#123;buffer.Length&#125; bytes的文本信息从文件&#123;file.Name&#125;读取出来,其中字符串的长度为&#123;stringSize&#125;bytes:&#123;Environment.NewLine + fileContent&#125;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                catch (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    StreambufferTextBlock.Text = <span class="string">&quot;异常:&quot;</span> + ex.Message;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                StreambufferTextBlock.Text = <span class="string">&quot;请先创建文件&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //写入Stream按钮事件处理程序.</span><br><span class="line">        private async void bt_writestream_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StorageFile file= sampleFile;</span><br><span class="line">            <span class="keyword">if</span> (file!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    string userContent = <span class="string">&quot;测试的文本信息&quot;</span>;</span><br><span class="line">                    //使用StorageStreamTransaction对象来创建DataWriter对象写入数据</span><br><span class="line">                    using (StorageStreamTransaction transaction=await file.OpenTransactedWriteAsync())</span><br><span class="line">                    &#123;</span><br><span class="line">                        using (DataWriter dataWriter=new DataWriter(transaction.Stream))</span><br><span class="line">                        &#123;</span><br><span class="line">                            //先写入信息的长度</span><br><span class="line">                            dataWriter.WriteInt32(Encoding.UTF8.GetByteCount(userContent));</span><br><span class="line">                            //写入字符串信息</span><br><span class="line">                            dataWriter.WriteString(userContent);</span><br><span class="line">                            //提交dataWriter的数据同时重设Stream的大小</span><br><span class="line">                            transaction.Stream.Size=await dataWriter.StoreAsync();</span><br><span class="line">                            //保存Stream数据</span><br><span class="line">                            await transaction.CommitAsync();</span><br><span class="line">                            StreambufferTextBlock.Text = $<span class="string">&quot;使用stream把信息写入了文件&#123;file.Name&#125;:&#123;Environment.NewLine+userContent&#125;&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                catch (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    StreambufferTextBlock.Text = $<span class="string">&quot;异常:&quot;</span> + ex.Message;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                StreambufferTextBlock.Text = <span class="string">&quot;请先创建文件&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 读取Stream按钮事件处理程序</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void bt_readstream_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            StorageFile file=sampleFile;</span><br><span class="line">            <span class="keyword">if</span> (file!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    //使用文件流创建DataReader对象</span><br><span class="line">                    using (IRandomAccessStream readStream=await file.OpenAsync(FileAccessMode.Read))</span><br><span class="line">                    &#123;</span><br><span class="line">                        using (DataReader dataReader=new DataReader(readStream))</span><br><span class="line">                        &#123;</span><br><span class="line">                            UInt64 size = readStream.Size;</span><br><span class="line">                            <span class="keyword">if</span> (size&lt;=UInt32.MaxValue)</span><br><span class="line">                            &#123;</span><br><span class="line">                                //先读取字符串的长度信息</span><br><span class="line">                                await dataReader.LoadAsync(sizeof(Int32));</span><br><span class="line">                                Int32 stringSize=dataReader.ReadInt32();</span><br><span class="line">                                //读取字符串的内容信息</span><br><span class="line">                                await dataReader.LoadAsync((UInt32)stringSize);</span><br><span class="line">                                string fileContent = dataReader.ReadString((UInt32)stringSize);</span><br><span class="line">                                StreambufferTextBlock.Text =$<span class="string">&quot;使用stream把信息从文件&#123;file.Name&#125;读取出来,其中字符串的长度为:&#123;stringSize&#125;bytes:&#123;Environment.NewLine+fileContent&#125;&quot;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                StreambufferTextBlock.Text = $<span class="string">&quot;文件&#123;file.Name&#125;太大,不能再单个数据块中读取&quot;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                catch (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    StreambufferTextBlock.Text = $<span class="string">&quot;异常:&#123;ex.Message&#125;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                StreambufferTextBlock.Text = <span class="string">&quot;请先创建文件&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>6.24.应用文件的URI方案<br>3个根目录文件夹所对应的保存路径的格式分别如下:<br>1.LocalFolder文件夹保存路径格式:%USERPROFILE%\APPDATA\Local\Packages{PackageId}\LocalState.<br>2.RoamingFolder文件夹的保存路径格式:%USERPROFILE%\APPDATA\Local\Packages{PackageId}\RoamingState<br>3.TemporaryFolder文件夹的保存路径格式:%USERPROFILE%\APPDATA\Local\Packages{PackageId}\TempState<br>获取到的路径并不能作为访问文件的路径来使用,访问文件的路径需要使用本地文件夹的ms-appdata的URI方案.LocalFolder文件夹对应的是“ms-appdata:///local/”,RoamingFolder “ms-appdata:///roaming/“<br>TemporaryFolder ms-appdata:///temp/ 可以根据StorageFile类的静态方法GetFileFromApplicationUriAsync来根据URI读取文件.下面示例使用了ms-appdata的URI方法来获取在LocalFolder文件夹里面的AppConfigSettings.xml文件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var file=await StorageFile.GetFileFromApplicationUriAsync(new Uri(<span class="string">&quot;ms-appdata:///local/AppConfigSettings.xml&quot;</span>));</span><br></pre></td></tr></table></figure><p>在这种通过URI访问文件的方案里还需要注意,新文件和文件夹的路径在URI方案名称的最后一个斜杠后面不能超过185个字符.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;GetFolderByUri&quot;</span>&gt;</span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;TextBox Header=<span class="string">&quot;文件信息:&quot;</span> x:Name=<span class="string">&quot;UriInfo&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;bt_saveuri&quot;</span> Content=<span class="string">&quot;创建文件&quot;</span> Click=<span class="string">&quot;bt_save_Click_1&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;bt_readuri&quot;</span> Content=<span class="string">&quot;通过URI读取文件&quot;</span> Margin=<span class="string">&quot;2&quot;</span> Click=<span class="string">&quot;bt_read_Click_1&quot;</span>/&gt;</span><br><span class="line">                   </span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">//文件名</span><br><span class="line">       private string UrifileName = <span class="string">&quot;testfile.txt&quot;</span>;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 读取文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void bt_read_Click_1(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //读取文件的文本信息</span><br><span class="line">           string text;</span><br><span class="line">           try</span><br><span class="line">           &#123;</span><br><span class="line">               //通过URI获取本地文件</span><br><span class="line">               var storageFile = await StorageFile.GetFileFromApplicationUriAsync(new Uri(<span class="string">&quot;ms-appdata:///local/&quot;</span>+UrifileName));</span><br><span class="line">               //打开文件获取文件的数据流</span><br><span class="line">               IRandomAccessStream accessStream = await storageFile.OpenReadAsync();</span><br><span class="line">               //使用StreamReader读取文件的内容,需要将IRandomAccessStream对象转换为Stream对象来初始化StreamReader对象.</span><br><span class="line">               using (StreamReader streamReader=new StreamReader(accessStream.AsStreamForRead((int)accessStream.Size)))</span><br><span class="line">               &#123;</span><br><span class="line">                   text = streamReader.ReadToEnd();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           catch (Exception ex)</span><br><span class="line">           &#123;</span><br><span class="line">               text = $<span class="string">&quot;文件读取错误:&quot;</span>+ex.Message;</span><br><span class="line">               </span><br><span class="line">           &#125;</span><br><span class="line">           await new MessageDialog(text).ShowAsync();</span><br><span class="line">       &#125;</span><br><span class="line">       //创建文件</span><br><span class="line">       private async void bt_save_Click_1(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (UriInfo.Text != <span class="string">&quot;&quot;</span>) &#123; </span><br><span class="line">               //获取本地文件夹根目录文件夹</span><br><span class="line">               IStorageFolder applicationFolder=ApplicationData.Current.LocalFolder;</span><br><span class="line">               //在文件夹里面创建文件,如果文件存在则替换掉</span><br><span class="line">               IStorageFile storageFile = await applicationFolder.CreateFileAsync(UrifileName,CreationCollisionOption.OpenIfExists);</span><br><span class="line">               //使用FileIO类把字符串信息写入文件</span><br><span class="line">               await FileIO.WriteTextAsync(storageFile, UriInfo.Text);</span><br><span class="line">               await new MessageDialog($<span class="string">&quot;保存成功,文件的路径:&#123;storageFile.Path&#125;&quot;</span>).ShowAsync();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               await new MessageDialog(<span class="string">&quot;内容不能为空&quot;</span>).ShowAsync();</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.3.常用的存储数据格式<br>6.31.JSON数据序列化存储<br>JSON用于描述数据结构,有以下形式存在.<br>对象(object):一个对象以”{“开始”,”并以”}”退出.一个对象包含一系列非排序的名称/值对,每个名称/值对之间使用”,”分隔.<br>名称/值(collection):名称和值之间使用”:”隔开,一般的形式是{name;value}.一个名称是一个字符串,一个值可以是一个字符串,一个数值,一个对象,一个布尔值,一个有串行表或者一个null值.值的串行表(Array):一个或者多个值用”,”分区后,使用”[“,”]”括起来就形成了这样的列表.例如,[collection,collection]<br>在win10里如果要使用JSON数据格式来存储相关的信息会有两种编程方式;<br>1.使用DataContractJsonSerializer类对JSON数据进行序列化和反序列化<br>DataContractJsonSerializer类对Json数据进行序列化和反序列化,是最简洁的Json数据操作方式.序列化的过程是把实体类对象转换为Json字符串对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 对实体类进行序列化的方法</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;item&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public string ToJsonData(object item) &#123; </span><br><span class="line">           DataContractJsonSerializer serializer=new DataContractJsonSerializer(item.GetType());</span><br><span class="line">           string result = string.Empty;</span><br><span class="line">           using (MemoryStream ms=new MemoryStream())</span><br><span class="line">           &#123;</span><br><span class="line">               serializer.WriteObject(ms,item);</span><br><span class="line">               ms.Position = 0;</span><br><span class="line">               using (StreamReader reader=new StreamReader(ms))</span><br><span class="line">               &#123;</span><br><span class="line">                   result = reader.ReadToEnd();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">return</span> result;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 把Json字符串反序列化成实体类对象</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;typeparam name=<span class="string">&quot;T&quot;</span>&gt;&lt;/typeparam&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;jsonString&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public T DataContractJsonDeSerializer&lt;T&gt;(string jsonString) &#123; </span><br><span class="line">       var ds=new DataContractJsonSerializer(typeof(T));</span><br><span class="line">           var ms=new MemoryStream(Encoding.UTF8.GetBytes(jsonString));</span><br><span class="line">           T obj=(T)ds.ReadObject(ms);</span><br><span class="line">           ms.Dispose();</span><br><span class="line">           <span class="built_in">return</span> obj;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>2.使用JsonObject对象来自定义Json对象<br>使用DataContractJsonSerializer类对json数据进行序列化和反序列化的操作很方便,但是却有一个弊端,它的灵活性很差.例如,序列化成的Json字符串的名称/值对的名称必须和类的属性完全一致.若要实现灵活复杂的Json数据进行序列化和反序列化的操作可以使用JsonObject类来进行自定义.<br>通过JsonObject类来创建一个如下的Json对象.<br>{“city”:”Beijing”,”street”:”Chaoyang Road”,”postcode”:100025}<br>创建其对应的JsonObject类实现的语法如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JsonObject jsonObject=new JsonObject();</span><br><span class="line">JsonObject.SetNamedValue(<span class="string">&quot;city&quot;</span>,JsonValue.CreateStringValue(<span class="string">&quot;Beijing&quot;</span>));</span><br><span class="line">JsonObject.SetNamedValue(<span class="string">&quot;street&quot;</span>,JsonValue.CreateStringValue(<span class="string">&quot;Chaoyang Road&quot;</span>));</span><br><span class="line">jsonObject.setNamedValue(<span class="string">&quot;postcode&quot;</span>,JsonValue,CreateNumberValue(10025));</span><br></pre></td></tr></table></figure><p>获取JsonObject类对象”city”所对应的数值如下:<br>jsonObject.GetNamedString(“city”,”默认值”);</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;JsonObject&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Write your message&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox x:Name=<span class="string">&quot;userName&quot;</span> Header=<span class="string">&quot;Name:&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBox x:Name=<span class="string">&quot;userAge&quot;</span> Header=<span class="string">&quot;Age:&quot;</span> InputScope=<span class="string">&quot;Number&quot;</span>/&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Your study school:&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                    &lt;CheckBox Content=<span class="string">&quot;Haerbing School&quot;</span> x:Name=<span class="string">&quot;school1&quot;</span>/&gt;</span><br><span class="line">                    &lt;CheckBox Content=<span class="string">&quot;LanXiang School&quot;</span> x:Name=<span class="string">&quot;school2&quot;</span>/&gt;</span><br><span class="line">                    &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;保存&quot;</span> x:Name=<span class="string">&quot;save&quot;</span> Click=<span class="string">&quot;save_Click&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;获取保存的信息&quot;</span> x:Name=<span class="string">&quot;get&quot;</span> Click=<span class="string">&quot;get_Click&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                    &lt;TextBlock x:Name=<span class="string">&quot;JsonObjectInfo&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"> /// &lt;summary&gt;</span><br><span class="line">        /// 对实体类进行序列化的方法</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;item&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public string ToJsonData(object item) &#123; </span><br><span class="line">            DataContractJsonSerializer serializer=new DataContractJsonSerializer(item.GetType());</span><br><span class="line">            string result = string.Empty;</span><br><span class="line">            using (MemoryStream ms=new MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                serializer.WriteObject(ms,item);</span><br><span class="line">                ms.Position = 0;</span><br><span class="line">                using (StreamReader reader=new StreamReader(ms))</span><br><span class="line">                &#123;</span><br><span class="line">                    result = reader.ReadToEnd();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 把Json字符串反序列化成实体类对象</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;typeparam name=<span class="string">&quot;T&quot;</span>&gt;&lt;/typeparam&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;jsonString&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public T DataContractJsonDeSerializer&lt;T&gt;(string jsonString) &#123; </span><br><span class="line">        var ds=new DataContractJsonSerializer(typeof(T));</span><br><span class="line">            var ms=new MemoryStream(Encoding.UTF8.GetBytes(jsonString));</span><br><span class="line">            T obj=(T)ds.ReadObject(ms);</span><br><span class="line">            ms.Dispose();</span><br><span class="line">            <span class="built_in">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private const string UserDataKey = <span class="string">&quot;UserDataKey&quot;</span>;</span><br><span class="line">        private async void save_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (userName.Text==<span class="string">&quot;&quot;</span> || userAge.Text==<span class="string">&quot;&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请输入完整的信息&quot;</span>).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ObservableCollection&lt;School&gt; education = new ObservableCollection&lt;School&gt;();</span><br><span class="line">            <span class="keyword">if</span> (school1.IsChecked == <span class="literal">true</span>) &#123;</span><br><span class="line">                education.Add(new School &#123; Id=<span class="string">&quot;id001&quot;</span>,Name=school1.Content.ToString()&#125;);</span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (school2.IsChecked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                education.Add(new School &#123; Id = <span class="string">&quot;id002&quot;</span>, Name = school2.Content.ToString() &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            User user = new User &#123; Education=education,Id=Guid.NewGuid().ToString(),Name=userName.Text,Age=Int32.Parse(userAge.Text),Verified=<span class="literal">false</span>&#125;;</span><br><span class="line">            //使用DataContractJsonDeSerializer的实现方式</span><br><span class="line">            //string json=ToJsonData(user);</span><br><span class="line">            //使用JsonObject的实现方式</span><br><span class="line">            string json = user.Stringify();</span><br><span class="line">            JsonObjectInfo.Text = json;</span><br><span class="line">            _appSettings.Values[UserDataKey] = json;</span><br><span class="line">            await new MessageDialog(<span class="string">&quot;保存成功&quot;</span>).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line">        // 把应用设置存储的Json数据转换为实体类对象.</span><br><span class="line">        private async void get_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!_appSettings.Values.ContainsKey(UserDataKey)) &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;未保存信息&quot;</span>).ShowAsync();</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            string json = _appSettings.Values[UserDataKey].ToString();</span><br><span class="line">            //使用DataContractJsonDeSerializer的实现方式</span><br><span class="line">            //User user = DataContractJsonDeSerializer&lt;User&gt;(json);</span><br><span class="line">            //使用JsonObject的实现方式</span><br><span class="line">            User user = new User(json);</span><br><span class="line">            string userInfo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            userInfo = $<span class="string">&quot;Id:&#123;user.Id&#125; Name:&#123;user.Name&#125; Age:&#123;user.Age&#125;&quot;</span>;</span><br><span class="line">            foreach (var item <span class="keyword">in</span> user.Education)</span><br><span class="line">            &#123;</span><br><span class="line">                userInfo += $<span class="string">&quot;Education:Id:&#123;item.Id&#125; Name:&#123;item.Name&#125;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            await new MessageDialog(userInfo).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.32.XML文件存储<br>Xml是可扩展标记语言的缩写,用于创建内容并使用限定标记,从而使每个单词,短语或块称为可识别，可分类的信息.Xml是一种易于使用和扩展的标记语言,它比JSON使用得更加广泛,它也是一种简单的数据格式,是纯100%的ASCII文本,而ASCII的抗破坏能力是很强的 下面是一个非常简单的XML文档的格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> enconding=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">test</span>&gt;</span><br><span class="line">Hello Windows 10</span><br><span class="line">&lt;/test&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简写:<? xml?><br>1.使用DataContractSerializer类对Xml文件进行序列化和反序列化<br>DataContractSerializer类和DataContractJsonSerializer类是两个很相似的类,前者是针对Xml格式的数据,后者是针对Json的数据.<br>Person对象Name=”terry”,Age=41,通常上面的序列化方法存储到应用文件里.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Person xmlns:i=<span class="string">&quot;http://www.w3.org/2001/XMLSchema - instance&quot;</span> xmlns=<span class="string">&quot;http://schemas.datacontract.org/2004/07/DataContractSerializerDeno&quot;</span>&gt;&lt;Age&gt;41&lt;/Age&gt;</span><br><span class="line">&lt;Name&gt;terry&lt;/Name&gt;</span><br><span class="line">&lt;/Person&gt;</span><br></pre></td></tr></table></figure><p>2.使用XmlDocument类对Xml文件进行序列化和反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 把实体类对象序列化成xml格式存储到文件里面</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;typeparam name=<span class="string">&quot;T&quot;</span>&gt;&lt;/typeparam&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;data&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;fileName&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public async Task SaveAsync&lt;T&gt;(T data, string fileName) &#123;</span><br><span class="line">           StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(fileName,CreationCollisionOption.ReplaceExisting);</span><br><span class="line">           //获取文件的数据流来进行操作.</span><br><span class="line">           using (IRandomAccessStream raStream=await file.OpenAsync(FileAccessMode.ReadWrite))</span><br><span class="line">           &#123;</span><br><span class="line">               using (IOutputStream outputStream=raStream.GetOutputStreamAt(0))</span><br><span class="line">               &#123;</span><br><span class="line">                   //创建序列化对象写入数据</span><br><span class="line">                   DataContractSerializer serializer = new DataContractSerializer(typeof(T));</span><br><span class="line">                   serializer.WriteObject(outputStream.AsStreamForWrite(),data);</span><br><span class="line">                   await outputStream.FlushAsync();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 反序列化XML文件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;typeparam name=<span class="string">&quot;T&quot;</span>&gt;&lt;/typeparam&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;filename&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">       public async Task&lt;T&gt; ReadAsync&lt;T&gt;(string filename) &#123;</span><br><span class="line">           //获取实体类类型实例化一个对象</span><br><span class="line">           T sessionState_ = default(T);</span><br><span class="line">           StorageFile file = await ApplicationData.Current.LocalFolder.GetFileAsync(filename);</span><br><span class="line">           <span class="keyword">if</span> (file == null) <span class="built_in">return</span> sessionState_;</span><br><span class="line">           using (IInputStream inStream=await file.OpenSequentialReadAsync())</span><br><span class="line">           &#123;</span><br><span class="line">               //反序列化XML数据</span><br><span class="line">               DataContractSerializer serializer = new DataContractSerializer(typeof(T));</span><br><span class="line">               sessionState_ = (T)serializer.ReadObject(inStream.AsStreamForRead());</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">return</span> sessionState_;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// </span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public void <span class="function"><span class="title">SaveAsXml</span></span>() &#123;</span><br><span class="line">           //创建一个XmlDocument对象代表着是一个Xml的文档对象.</span><br><span class="line">           XmlDocument dom = new XmlDocument();</span><br><span class="line">           //创建和添加一条XML的评论</span><br><span class="line">           XmlComment dec = dom.CreateComment(<span class="string">&quot;THis is Students Message.&quot;</span>);</span><br><span class="line">           dom.AppendChild(dec);</span><br><span class="line"></span><br><span class="line">           //添加一个students的元素为Xml文档的根元素</span><br><span class="line">           XmlElement x = dom.CreateElement(<span class="string">&quot;studetns&quot;</span>);</span><br><span class="line">           dom.AppendChild(x);</span><br><span class="line">           //创建一个Student元素后面再添加到students元素的节点上</span><br><span class="line">           XmlElement x1 = dom.CreateElement(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">           //在Student元素里再添加<span class="built_in">id</span>和name两个元素节点,在节点内还添加了文本内容</span><br><span class="line">           XmlElement x11 = dom.CreateElement(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">           x11.InnerText = <span class="string">&quot;id001&quot;</span>;</span><br><span class="line">           x1.AppendChild(x11);</span><br><span class="line">           XmlElement x12 = dom.CreateElement(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">           x12.InnerText = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">           x1.AppendChild(x12);</span><br><span class="line">           x.AppendChild(x1);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>XML文档操作相关的类和说明<br>Document  XmlDocument类  树中所有节点的容器,也称作文档根,文档根并非总是与根元素相同<br>DocumentFragment  XmlDocumentFragment类  包含一个或多个不带任何树结构的节点的临时段<br>DocumentType XmlDocumentType类    &lt;! DOCTYPE…&gt;节点<br>EntityReference XmlEntityReference类  非扩展的实体引用文本<br>Element XmlElement类 元素节点<br>Attr XmlAttribute类  元素的属性<br>ProcessingInstruction XmlProcessingInstruction类 处理指令节点<br>Comment XmlComment类 注释节点<br>Text XmlText类 属于某个元素或属性的文本<br>CDATASection XmlCDataSection类 CDATA<br>Entity XmlEntity类 XML文档(来自内部文档类型定义(DTD)子集或来自外部DTD和参数实体)中的&lt;!ENTITY…&gt;声明<br>Notation XmlNotation类 DTD中声明的表示法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"> &lt;PivotItem Header=<span class="string">&quot;Xml&quot;</span>&gt;</span><br><span class="line">                &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid x:Name=<span class="string">&quot;ContentPanelShop&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                        &lt;!--展示购物清单的列表--&gt;</span><br><span class="line">                        &lt;ListBox FontSize=<span class="string">&quot;48&quot;</span> x:Name=<span class="string">&quot;Files&quot;</span>&gt;</span><br><span class="line">                        &lt;/ListBox&gt;</span><br><span class="line">                    &lt;/Grid&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">        &lt;/Pivot&gt;</span><br><span class="line"> &lt;AppBarButton Label=<span class="string">&quot;新增&quot;</span> Icon=<span class="string">&quot;Add&quot;</span> Click=<span class="string">&quot;AppBarButton_Click_1&quot;</span>/&gt;</span><br><span class="line"> //加载页面触发Loaded事件</span><br><span class="line">            Loaded += BlankPage_Loaded;</span><br><span class="line">  private async void BlankPage_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Files.Items.Clear();</span><br><span class="line">            //获取应用程序的本地存储文件</span><br><span class="line">            StorageFolder storage = await ApplicationData.Current.LocalFolder.CreateFolderAsync(<span class="string">&quot;ShoppingList&quot;</span>,CreationCollisionOption.OpenIfExists);</span><br><span class="line">            var files = await storage.GetFilesAsync();</span><br><span class="line">            &#123;</span><br><span class="line">                //获取购物清单文件夹里面存储的文件</span><br><span class="line">                foreach (StorageFile file <span class="keyword">in</span> files) &#123;</span><br><span class="line">                    //动态构建一个Grid</span><br><span class="line">                    Grid a = new Grid();</span><br><span class="line">                    //定义第一列</span><br><span class="line">                    ColumnDefinition col = new ColumnDefinition();</span><br><span class="line">                    col.Width = GridLength.Auto;</span><br><span class="line">                    a.ColumnDefinitions.Add(col);</span><br><span class="line"></span><br><span class="line">                    //定义第二列</span><br><span class="line">                    ColumnDefinition col2 = new ColumnDefinition();</span><br><span class="line">                    col2.Width = GridLength.Auto;</span><br><span class="line">                    a.ColumnDefinitions.Add(col2);</span><br><span class="line">                    //添加一个TextBlock现实文件名到第一列</span><br><span class="line">                    TextBlock txbx = new TextBlock();</span><br><span class="line">                    txbx.Text = file.DisplayName;</span><br><span class="line">                    Grid.SetColumn(txbx,0);</span><br><span class="line">                    //添加一个HyperlinkButton链接到购物详细清单页面,这是第二列</span><br><span class="line">                    HyperlinkButton btn = new HyperlinkButton();</span><br><span class="line">                    btn.Content = <span class="string">&quot;查看详细&quot;</span>;</span><br><span class="line">                    btn.Name = file.DisplayName;</span><br><span class="line">                    btn.Click += (s,ea)=&gt; &#123;</span><br><span class="line">                        Frame.Navigate(typeof(DisplayPage), file);</span><br><span class="line">                    &#125;;</span><br><span class="line">                    Grid.SetColumn(btn,1);</span><br><span class="line">                    a.Children.Add(txbx);</span><br><span class="line">                    a.Children.Add(btn);</span><br><span class="line">                    Files.Items.Add(a);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// </span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public void <span class="function"><span class="title">SaveAsXml</span></span>() &#123;</span><br><span class="line">            //创建一个XmlDocument对象代表着是一个Xml的文档对象.</span><br><span class="line">            XmlDocument dom = new XmlDocument();</span><br><span class="line">            //创建和添加一条XML的评论</span><br><span class="line">            XmlComment dec = dom.CreateComment(<span class="string">&quot;THis is Students Message.&quot;</span>);</span><br><span class="line">            dom.AppendChild(dec);</span><br><span class="line"></span><br><span class="line">            //添加一个students的元素为Xml文档的根元素</span><br><span class="line">            XmlElement x = dom.CreateElement(<span class="string">&quot;studetns&quot;</span>);</span><br><span class="line">            dom.AppendChild(x);</span><br><span class="line">            //创建一个Student元素后面再添加到students元素的节点上</span><br><span class="line">            XmlElement x1 = dom.CreateElement(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">            //在Student元素里再添加<span class="built_in">id</span>和name两个元素节点,在节点内还添加了文本内容</span><br><span class="line">            XmlElement x11 = dom.CreateElement(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            x11.InnerText = <span class="string">&quot;id001&quot;</span>;</span><br><span class="line">            x1.AppendChild(x11);</span><br><span class="line">            XmlElement x12 = dom.CreateElement(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            x12.InnerText = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">            x1.AppendChild(x12);</span><br><span class="line">            x.AppendChild(x1);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void AppBarButton_Click_1(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Frame.Navigate(typeof(AddItem));</span><br><span class="line">        &#125;</span><br><span class="line">AddItem.xaml .cs</span><br><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.AddItem&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Grid x:Name=<span class="string">&quot;ContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">            &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;100*&quot;</span>/&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;346*&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;TextBlock Grid.Column=<span class="string">&quot;0&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;名称:&quot;</span></span><br><span class="line">                       HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox Name=<span class="string">&quot;nameTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> MaxHeight=<span class="string">&quot;40&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Column=<span class="string">&quot;0&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;价格:&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">&quot;priceTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> MaxHeight=<span class="string">&quot;40&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;2&quot;</span> Grid.Column=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;数量:&quot;</span></span><br><span class="line">                       HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox Name=<span class="string">&quot;quanTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> MaxHeight=<span class="string">&quot;40&quot;</span>/&gt;</span><br><span class="line">            &lt;Button x:Name=<span class="string">&quot;BtnSave&quot;</span> Content=<span class="string">&quot;保存&quot;</span> HorizontalAlignment=<span class="string">&quot;Stretch&quot;</span> Grid.Row=<span class="string">&quot;3&quot;</span> Grid.ColumnSpan=<span class="string">&quot;2&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Click=<span class="string">&quot;BtnSave_Click&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Data.Xml.Dom;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Storage;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class AddItem : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">AddItem</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void BtnSave_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //获取购物清单的文件夹对象</span><br><span class="line">            StorageFolder storage = await ApplicationData.Current.LocalFolder.GetFolderAsync(<span class="string">&quot;ShoppingList&quot;</span>);</span><br><span class="line">            //创建一个Xml的对象,示例格式如&lt;Apple pric=<span class="string">&quot;23&quot;</span> quantity=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">            XmlDocument _doc= new XmlDocument();</span><br><span class="line">            //使用商品的名称来创建一个xml元素作为根节点</span><br><span class="line">            XmlElement _item=_doc.CreateElement(nameTxt.Text);</span><br><span class="line">            //使用属性来作为信息的标识符,用属性的值来存储相关的信息</span><br><span class="line">            _item.SetAttribute(<span class="string">&quot;price&quot;</span>, priceTxt.Text);</span><br><span class="line">            _item.SetAttribute(<span class="string">&quot;quantity&quot;</span>,quanTxt.Text);</span><br><span class="line">            _doc.AppendChild(_item);</span><br><span class="line">            //创建一个应用文件</span><br><span class="line">            StorageFile file = await storage.CreateFileAsync(nameTxt.Text+<span class="string">&quot;.xml&quot;</span>,CreationCollisionOption.ReplaceExisting);</span><br><span class="line">            //把XML的信息保存到文件中去</span><br><span class="line">            await _doc.SaveToFileAsync(file);</span><br><span class="line">            //调回清单主页</span><br><span class="line">            Frame.GoBack();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">DisplayPage.xaml .cs</span><br><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.DisplayPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid x:Name=<span class="string">&quot;ContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">      </span><br><span class="line">            &lt;TextBlock Grid.Column=<span class="string">&quot;0&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;名称:&quot;</span></span><br><span class="line">                       HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;nameTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;价格:&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;priceTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;TextBlock Grid.Column=<span class="string">&quot;0&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;数量:&quot;</span></span><br><span class="line">                       HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Name=<span class="string">&quot;quanTxt&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Name=<span class="string">&quot;PageTitle&quot;</span> Grid.Row=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Data.Xml.Dom;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.Storage;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class DisplayPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">DisplayPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected override async void OnNavigatedTo(NavigationEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">           //获取上一个清单列表传递过来的参数,该参数是一个StorageFile对象.</span><br><span class="line">           StorageFile file=e.Parameter as StorageFile;</span><br><span class="line">            <span class="keyword">if</span> (file == null) <span class="built_in">return</span>;</span><br><span class="line">            //获取文件的名字</span><br><span class="line">            string itemName = file.DisplayName;</span><br><span class="line">            PageTitle.Text = itemName;</span><br><span class="line">            //把应用文件作为一个xml文档加载进来</span><br><span class="line">            XmlDocument doc=await XmlDocument.LoadFromFileAsync(file);</span><br><span class="line">            //获取xml文档的信息</span><br><span class="line">            priceTxt.Text = doc.DocumentElement.Attributes.GetNamedItem(<span class="string">&quot;price&quot;</span>).NodeValue.ToString();</span><br><span class="line">            quanTxt.Text = doc.DocumentElement.Attributes.GetNamedItem(<span class="string">&quot;quantity&quot;</span>).NodeValue.ToString();</span><br><span class="line">            nameTxt.Text = itemName;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.4.安装包文件数据<br>可以在应用程序里获取安装包下的文件,就是在应用程序项目中添加的文件.编译文件源代码和资源文件是获取不到的.安装包文件数据和应用文件应用设置所存储的位置是不一样的,如果是保存应用程序业务的相关信息不建议保存到安装包的目录下,安装包文件数据通常是用于内置一些固定的文件数据.<br>6.41.安装包文件访问<br>获取安装包的文件可以先通过Windows.ApplicationModel.Package类的InstalledLocation属性来获取安装包的文件夹.<br>StorageFolder localFolder=Windows.ApplicationModel.Package.Current.InstalledLocation;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"> &lt;PivotItem Header=<span class="string">&quot;ApplicationModelPackage&quot;</span>&gt;</span><br><span class="line">                &lt;ScrollViewer&gt;</span><br><span class="line">                    &lt;StackPanel&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;获取安装包的根目录&quot;</span> x:Name=<span class="string">&quot;btnGetFile&quot;</span> Click=<span class="string">&quot;btnGetFile_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;文件夹列表:&quot;</span>/&gt;</span><br><span class="line">                        &lt;ListBox x:Name=<span class="string">&quot;lbFolder&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;打开选中的文件夹&quot;</span> x:Name=<span class="string">&quot;open&quot;</span> Click=<span class="string">&quot;open_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;TextBlock Text=<span class="string">&quot;文件列表:&quot;</span>/&gt;</span><br><span class="line">                        &lt;ListBox x:Name=<span class="string">&quot;lbFile&quot;</span>&gt;</span><br><span class="line">                        &lt;/ListBox&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;在选中文件夹下创建测试文件&quot;</span> x:Name=<span class="string">&quot;create&quot;</span> Click=<span class="string">&quot;create_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;Button Content=<span class="string">&quot;删除选中的文件&quot;</span> x:Name=<span class="string">&quot;delete&quot;</span> Click=<span class="string">&quot;delete_Click&quot;</span> Margin=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/StackPanel&gt;</span><br><span class="line">                &lt;/ScrollViewer&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 打开应用程序的根目录</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void btnGetFile_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //清理文件夹列表</span><br><span class="line">            lbFolder.Items.Clear();</span><br><span class="line">            //获取根目录</span><br><span class="line">            StorageFolder localFolder =Windows.ApplicationModel.Package. Current.InstalledLocation;</span><br><span class="line">            //添加遍历根目录的文件夹到文件夹列表</span><br><span class="line">            foreach (var folder <span class="keyword">in</span> await localFolder.GetFoldersAsync())</span><br><span class="line">            &#123;</span><br><span class="line">                ListBoxItem item = new ListBoxItem();</span><br><span class="line">                item.Content = <span class="string">&quot;应用程序目录:&quot;</span> + folder.Name;</span><br><span class="line">                item.DataContext = folder;</span><br><span class="line">                lbFolder.Items.Add(item);</span><br><span class="line">            &#125;</span><br><span class="line">            //清理文件列表</span><br><span class="line">            lbFile.Items.Clear();</span><br><span class="line">            //添加遍历根目录的文件到文件列表</span><br><span class="line">            foreach (var file <span class="keyword">in</span> await localFolder.GetFilesAsync())</span><br><span class="line">            &#123;</span><br><span class="line">                ListBoxItem item3 = new ListBoxItem();</span><br><span class="line">                item3.Content = <span class="string">&quot;文件:&quot;</span> + file.Name;</span><br><span class="line">                item3.DataContext = file;</span><br><span class="line">                lbFile.Items.Add(item3);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 打开选中的文件夹</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void open_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lbFolder.SelectedIndex == -1) &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请选择一个文件夹&quot;</span>).ShowAsync();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ListBoxItem item = lbFolder.SelectedItem as ListBoxItem;</span><br><span class="line">                //获取选中的文件夹</span><br><span class="line">                StorageFolder folder = item.DataContext as StorageFolder;</span><br><span class="line">                //清理文件夹列表</span><br><span class="line">                lbFolder.Items.Clear();</span><br><span class="line">                //添加遍历到的文件夹到文件夹列表</span><br><span class="line">                foreach (var folder2 <span class="keyword">in</span> await folder.GetFoldersAsync())</span><br><span class="line">                &#123;</span><br><span class="line">                    ListBoxItem item2 = new ListBoxItem();</span><br><span class="line">                    item2.Content = <span class="string">&quot;文件夹:&quot;</span> + folder2.Name;</span><br><span class="line">                    item2.DataContext = folder;</span><br><span class="line">                    lbFolder.Items.Add(item2);</span><br><span class="line">                &#125;</span><br><span class="line">                //清理文件列表</span><br><span class="line">                lbFile.Items.Clear();</span><br><span class="line">                //添加遍历到的文件到文件列表</span><br><span class="line">                foreach (var file <span class="keyword">in</span> await folder.GetFilesAsync())</span><br><span class="line">                &#123;</span><br><span class="line">                    ListBoxItem item3 = new ListBoxItem();</span><br><span class="line">                    item3.Content = <span class="string">&quot;文件:&quot;</span> + file.Name;</span><br><span class="line">                    item3.DataContext = file;</span><br><span class="line">                    lbFile.Items.Add(item3);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在选中的文件中新建一个文件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void create_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lbFolder.SelectedIndex == -1)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请选择一个文件夹&quot;</span>).ShowAsync();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ListBoxItem item = lbFolder.SelectedItem as ListBoxItem;</span><br><span class="line">                //获取选中的文件夹</span><br><span class="line">                StorageFolder folder=item.DataContext as StorageFolder;</span><br><span class="line">                //在文件夹中创建一个文件</span><br><span class="line">                StorageFile file = await folder.CreateFileAsync(DateTime.Now.Millisecond.ToString()+<span class="string">&quot;.txt&quot;</span>);</span><br><span class="line">                //添加到文件列表中</span><br><span class="line">                ListBoxItem item3 = new ListBoxItem();</span><br><span class="line">                item3.Content = <span class="string">&quot;文件:&quot;</span> + file.Name;</span><br><span class="line">                item3.DataContext= file;</span><br><span class="line">                lbFile.Items.Add(item3);</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;创建文件成功&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 删除选中的文件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void delete_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lbFile.SelectedIndex == -1) &#123;</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;请选择一个文件夹&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ListBoxItem item=lbFile.SelectedItem as ListBoxItem;</span><br><span class="line">                //获取选中的文件</span><br><span class="line">                StorageFile file=item.DataContext as StorageFile; </span><br><span class="line">                //删除文件</span><br><span class="line">                await file.DeleteAsync();</span><br><span class="line">                lbFile.Items.Remove(item);</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;删除成功&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.42 安装包文件的URI方案<br>应用文件可以通过URI来访问,安装包的文件也一样可以通过URI来访问,不过两者之间的URI方案是有区别的,应用文件使用的是以字符串”ms-appdata:///“开头的URI地址,而安装包使用的是”ms-appx:///“.例如获取安装包PackageTest文件夹下的test.xml:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var file=await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(new Uri(<span class="string">&quot;ms-appx:///PackageTest/test.xml&quot;</span>));</span><br></pre></td></tr></table></figure><p>如果是图片文件也可以直接在XAML上给Image控件的Source属性赋值<br>1.访问存储在本地文件夹中的文件:<Image Source="ms-appdata:///local/images/logo.png"/><br>2.访问存储在漫游文件夹中的文件:<Image Source="ms-appdata:///roaming/images/logo.png"/><br>3.访问存储在临时文件夹中的文件:<Image Source="ms-appdata:///temp/images/logo.png"/><br>4.访问安装包文件夹中的文件:<Image Source="ms-appx:///images/logo.png"/>或者<Image Source="/images/logo.png"/><br>下面给出访问应用文件夹和安装包文件夹图片文件的示例:打开示例程序会先将安装包的一个程序图标文件复制到应用文件夹里,然后通过两种不同的URI方案来给Image控件添加图片资源.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;AppUri&quot;</span>&gt;</span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;TextBlock Text=<span class="string">&quot;安装包的图片展示:&quot;</span>/&gt;</span><br><span class="line">                   &lt;Image x:Name=<span class="string">&quot;packageImage&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                   &lt;TextBlock Text=<span class="string">&quot;应用存储的图片展示:&quot;</span>/&gt;</span><br><span class="line">                   &lt;Image x:Name=<span class="string">&quot;appImage&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">protected override async void OnNavigatedTo(NavigationEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           ApplicationData appData = ApplicationData.Current;</span><br><span class="line">           //将程序包内的文件保存到应用存储中的TemporaryFolder</span><br><span class="line">           StorageFile imgFile = await StorageFile.GetFileFromApplicationUriAsync(new Uri(<span class="string">&quot;ms-appx:///Assets/LockScreenLogo.scale-200.png&quot;</span>));</span><br><span class="line">           await imgFile.CopyAsync(appData.TemporaryFolder,imgFile.Name,NameCollisionOption.ReplaceExisting);</span><br><span class="line">           //引用应用存储内的图片文件并显示</span><br><span class="line">           appImage.Source = new BitmapImage(new Uri(<span class="string">&quot;ms-appdata:///temp/LockScreenLogo.scale-200.png&quot;</span>));</span><br><span class="line">           //引用程序包内的图片文件并显示</span><br><span class="line">           packageImage.Source = new BitmapImage(new Uri(<span class="string">&quot;ms-appx:///Assets/LockScreenLogo.scale-200.png&quot;</span>));</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="图形绘图"><a href="#图形绘图" class="headerlink" title="图形绘图"></a>图形绘图</h4><p>7.11.图形中常用的结构.<br>在图形中经常用到Point,Size,Rect和Color这些数据结构,常用于对图形形状的相关属性赋值<br>1.Point结构.<br>Windows.Foundation.Point定义点的位置.<br>public Point(double x,double y)<br>2.Size结构<br>public Size(double width,double height)<br>3.Rect结构<br>矩形Rect Windows.Foundation.Rect</p><p>1.属性X,Y:矩形结构左上角的x,y坐标.<br>2.只读属性Left,Top:矩形结构左上角的x,y坐标.<br>3.只读属性Right和Bottom:矩形结构对象右下角的x,y坐标<br>4.属性Width,Height,Size矩形结构对象的宽度和高度.<br>5.构造函数Rect(Point location,Size size) 参数1代表矩形结构左上角点结构,参数2代表矩形宽和高的Size结构.<br>6.构造函数Rect(Double x,Double y,Double width,Double height):参数依次为矩形左上角x坐标,y坐标,宽和高.<br>7.方法public void Intersect(Rect rect) 得到调用该方法的矩形结构对象和参数表示的矩形结构的交集</p><p>4.Color结构<br>Windows.UI.Color. a,b,r,g 透明度,蓝色,绿色,红色合成.Color结构支持两种色彩空间sRGB和scRGB.<br>sRGB用无符号32位数代表一种颜色,红色,绿色,蓝色以及透明度各占一个字节,透明度等于0为完全透明,255为完全不透明.例如完全不透明红色用16进制数表示为#ffff0000,scRGB代表的颜色中的红色,绿色，蓝色以及透明度分别用0-1之间的Sing类型数表示,透明度等于0.0为完全透明,1.0为完全不透明.红色,绿色,蓝色全为0.0 表示黑色,全为1.0表示白色.例如不透明红色表示为sc#1.0,1.0,0.0,0.0,其常用属性和方法如下:<br>public static Color FromArgb(byte a,byte r,byte g,byte b):sRGB颜色.<br>7.12.画图相关的类<br>有两组类可用于定义空间的区域:Shape和Geometry.主要区别是:Shape拥有与之关联的画笔并可以呈现到屏幕,但Geometry只定义空间的区域并且不会呈现.可以认为Shape是由Geometry定义的有边界的UIElement,<br>Shape类 有 画线段类Line,Rectangle类,Ellipse,多条线段类Polyline,画由多条线段组成的闭合图形类Polygon,Path.Windows.UI.Xaml.Shapes.Shape<br>1.Fill 填充的画刷 Winodws.UI.Xaml.Media.Brush类型<br>2.Stroke 表示笔触 图形的边界颜色 Windows.UI.Xaml.Media.Brush类型<br>3.StrokeThickness 笔触尺寸.可以理解为图形边界大小.<br>4.Stretch None Fill Uniform UniformToFill<br>5.StrokeDashArray 表示虚线和间隙值的集合,用于画虚线,StrokeDashArray参数采用S[,G][,S*,G**]*的形式,其中S表示笔画的长度值,G表示间隙的长度值,如果忽略了G,则间隙长度与前一个笔画长度相同,例如线宽=1，”2”表示2个像素的实线和2个像素的空白组成的虚线,”3,2”表示3个像素实线和2个像素空白组成的虚线,<br>“2,2,3,2”表示2个像素的实线和2个像素的空白+3个像素的实线和2个像素的空白(如此反复)组成的虚线.<br>实际实线和空白间隔像素还受线宽的影响.<br>6.StrokeDashCap:表示虚线两端(线帽)的类型,用于画虚线(Windows.UI.Xaml.Media.PenLineCap枚举类型)<br>PenLineCap是描述直线或线段末端的形状,枚举值Flat表示一个未超出直线上最后一点的线帽,等同于无线帽,<br>Square表示一个高度等于直线粗细,长度等于直线粗细一半的矩形,Round表示一个直径等于直线粗细的半圆形;Triangle表示一个底边长度等于直线粗细的等腰直角三角形.<br>7.StrokeStartLineCap:虚线起始端(线帽)的类型(Windows.UI.Xaml.Media.PenLineCap枚举类型)<br>8.StrokeEndLineCap:虚线终结端(线帽)的类型<br>9.StrokeDashOffset:虚线的起始位置,用于画虚线,从虚线的起始端的StrokeDashOffset距离处开始描绘虚线.<br>10.StrokeLineJoin:图形连接点处的连接类型(Windows.UI.Xaml.Media.PenLineJoin枚举类型)<br>PenLineJoin是描述连接两条线或线段的形状的枚举类型—Miter表示线条连接使用常规角顶点;Bevel表示线条连接使用斜角顶点.Round表示线条连接使用圆角顶点.<br>11.StrokeMiterLimit:斜接长度与StrokeThickness/2的比值.默认值为10,最小值为1.<br>7.13.基础的图形形状<br>1.Line线段<br>控件Line来画线段,X1 Y1 起点 X2 Y2 终点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Line X1=<span class="string">&quot;0&quot;</span> Y1=<span class="string">&quot;0&quot;</span> X2=<span class="string">&quot;100&quot;</span> Y2=<span class="string">&quot;100&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;10&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>2.Rectangle矩形<br>控件Rectangle可用来画各种矩形,属性Width,Height,RadiusX和RadiusY分别是矩形的宽,高,圆角矩形的圆角x轴半径和y轴半径.x轴半径要小于等于Width二分之一,y轴半径要小于等于height二分之一,当二者都等于二分之一,则圆形变为圆或椭圆.<br><Rectangle Width="200" height="100" Fill="Blue" RadiusX="20" RadiusY="20"/><br>3.Ellipse椭圆<br>控件Ellipse画椭圆时,如果Width=height,则为圆.<br><Ellipse Stroke="Blue" Fill="Red" Width="100" height="100" StrokeThickness="8"/><br>4.Polyline开放多边形和Polygon封闭多边形<br>Polyline类属性Ponints是点结构数组,将数组元素Ponints[0]和Ponints[1],Ponints[1]和Ponints[2],等点连接为多条线段 设置类Polyline属性IsClose=true 也能完成Polygon类相同功能.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Polyline Points=<span class="string">&quot;10,110 60,10 110,110&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;4&quot;</span>/&gt;</span><br><span class="line">&lt;Polygon Points=<span class="string">&quot;10,110 60,10,110,110&quot;</span> Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;4&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>实现更高的灵活化,采用Line去实现画图的功能.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;Line&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas x:Name=<span class="string">&quot;ContentPanelCanvas&quot;</span> Background=<span class="string">&quot;Transparent&quot;</span>&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> //注册画图的指针移动事件,用来捕获手指在设备屏幕上的点</span><br><span class="line">            this.ContentPanelCanvas.PointerMoved += ContentPanelCanvas_PointerMoved;</span><br><span class="line">            //注册指针按下事件,用来记录第一个触摸点</span><br><span class="line">            this.ContentPanelCanvas.PointerPressed += ContentPanelCanvas_PointerPressed;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">        /// 指针按下事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private void ContentPanelCanvas_PointerPressed(object sender, PointerRoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            currentPoint = e.GetCurrentPoint(ContentPanelCanvas).Position;</span><br><span class="line">            oldPoint= currentPoint;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void ContentPanelCanvas_PointerMoved(object sender, PointerRoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            ///获取相对于画布控件的点坐标</span><br><span class="line">            currentPoint=e.GetCurrentPoint(ContentPanelCanvas).Position;</span><br><span class="line">            //根据上一个画图的点和当前的画图的点新建一条线段</span><br><span class="line">            Line line = new <span class="function"><span class="title">Line</span></span>() &#123; X1=currentPoint.X,Y1=currentPoint.Y,X2=oldPoint.X,Y2=oldPoint.Y&#125;;</span><br><span class="line">            //设置线段的相关属性</span><br><span class="line">            line.Stroke = new SolidColorBrush(Colors.Red);</span><br><span class="line">            line.StrokeThickness = 5;</span><br><span class="line">            line.StrokeLineJoin = PenLineJoin.Round;</span><br><span class="line">            line.StrokeStartLineCap= PenLineCap.Round;</span><br><span class="line">            line.StrokeEndLineCap= PenLineCap.Round;</span><br><span class="line">            //把线段添加到画布面板上</span><br><span class="line">            this.ContentPanelCanvas.Children.Add(line);</span><br><span class="line">            //把当前的画图的点作为上一个画图的点</span><br><span class="line">            oldPoint= currentPoint;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>7.2 Path图形<br>7.21.两种Path图形的创建方法<br>最重要的属性是Data,Data的数据类型是Geometry(几何图形),正是使用这个属性将一些基本的线段拼接起来,形成复杂的图形.Data属性赋值的方法有两种,一种是使用Geometry图形绘制的标准语法;另一种是专门用于绘制几何图形的”路径标记语法”.用Geometry图形实现的Path图形显得更加直观.用路径标记语法则显得更加简洁.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Path Fill=<span class="string">&quot;Gold&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">&lt;Path.Data&gt;</span><br><span class="line">&lt;RectangleGeometry Rect=<span class="string">&quot;0,0,100,100&quot;</span>/&gt;</span><br><span class="line">&lt;/Path.Data&gt;</span><br><span class="line">&lt;/Path&gt;</span><br><span class="line">&lt;Path Data=<span class="string">&quot;M0,L100,0 L100,100 L0,100 z&quot;</span> Fill=<span class="string">&quot;Gold&quot;</span> Height=<span class="string">&quot;100&quot;</span> Strenth=<span class="string">&quot;Fill&quot;</span> Width=<span class="string">&quot;100&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>7.22.使用简单的几何图形来创建Path<br>使用Geometry来创建Path图形,是非常直观的语法,它最大的优点是不仅仅可以通过XAML实现,还可以使用C#代码创建,所以如果要动态地改变Path的形状就需要使用Geometry来创建Path图形.<br>Path的Data属性是Geometry类,但是Geometry类是一个抽象类,所以不可能在XAML中直接使用<Geometry>标签.可以使用Geometry的子类.Geometry的子类包括以下几种<br>1.LineGeometry:直线几何图形<br>2.RectangleGeometry:矩形几何图形<br>3.EllipseGeometry:椭圆几何图形<br>4.PathGeometry:路径几何图形,PathGeometry是Geometry中最灵活的,可以绘制任意的2D几何图形<br>5.GeometryGroup:由多个基本几何图形组合在一起,形成几何图形组.<br>定义空间的区域有Shape和Geometry两种类型.Shape类型就是前面所讲的Line,Rectangle,Ellipse类,<br>Geometry类型不仅仅可以用在Path的Data属性上,还可以用在UIElement的Clip属性上.<br>Geometry对象可以分为3个类别:简单几何图形,路径几何图形以及复合几何图形.<br>简单几何图形类包括LineGeometry,RectangleGeometry和EllipseGeometry.用于创建基本的几何形状,例如直线,矩形和圆.<br>1.LineGeometry 通过指定直线的起点和终点来定义.<br>2.RectangleGeometry 通过使用Rect结构来定义,该机构指定矩形的相对位置,高度和宽度.<br>3.EllipseGeometry 通过中心点,x半径和y半径来定义.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;Geometry&quot;</span>&gt;</span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;!--直线--&gt;</span><br><span class="line">                   &lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                       &lt;Path.Data&gt;</span><br><span class="line">                           &lt;LineGeometry StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;400,20&quot;</span>/&gt;</span><br><span class="line">                       &lt;/Path.Data&gt;</span><br><span class="line">                   &lt;/Path&gt;</span><br><span class="line">                   &lt;!--矩形路径--&gt;</span><br><span class="line">                   &lt;Path Fill=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                       &lt;Path.Data&gt;</span><br><span class="line">                           &lt;RectangleGeometry Rect=<span class="string">&quot;20,20,400,50&quot;</span>/&gt;</span><br><span class="line">                       &lt;/Path.Data&gt;</span><br><span class="line">                   &lt;/Path&gt;</span><br><span class="line">                   &lt;!--椭圆路径--&gt;</span><br><span class="line">                   &lt;Path Fill=<span class="string">&quot;Red&quot;</span>&gt;</span><br><span class="line">                       &lt;Path.Data&gt;</span><br><span class="line">                           &lt;!--&lt;GeometryGroup组合&gt;--&gt;</span><br><span class="line">                           &lt;GeometryGroup FillRule=<span class="string">&quot;EvenOdd&quot;</span>&gt;</span><br><span class="line">                               &lt;RectangleGeometry Rect=<span class="string">&quot;80,50,200,100&quot;</span>/&gt;</span><br><span class="line">                               &lt;EllipseGeometry Center=<span class="string">&quot;300,100&quot;</span> RadiusX=<span class="string">&quot;80&quot;</span> RadiusY=<span class="string">&quot;60&quot;</span>&gt;</span><br><span class="line">                                   </span><br><span class="line">                               &lt;/EllipseGeometry&gt;</span><br><span class="line">                           &lt;/GeometryGroup&gt;</span><br><span class="line">                       &lt;/Path.Data&gt;</span><br><span class="line">                   &lt;/Path&gt;</span><br><span class="line"></span><br><span class="line">                   &lt;Path Fill=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">                       &lt;Path.Data&gt;</span><br><span class="line">                           &lt;!--&lt;GeometryGroup组合&gt;--&gt;</span><br><span class="line">                           &lt;GeometryGroup FillRule=<span class="string">&quot;Nonzero&quot;</span>&gt;</span><br><span class="line">                               &lt;RectangleGeometry Rect=<span class="string">&quot;80,50,200,100&quot;</span>/&gt;</span><br><span class="line">                               &lt;EllipseGeometry Center=<span class="string">&quot;300,100&quot;</span> RadiusX=<span class="string">&quot;80&quot;</span> RadiusY=<span class="string">&quot;60&quot;</span>/&gt;</span><br><span class="line">                           &lt;/GeometryGroup&gt;</span><br><span class="line">                       &lt;/Path.Data&gt;</span><br><span class="line">                   &lt;/Path&gt;</span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">       &lt;/Pivot&gt;</span><br></pre></td></tr></table></figure><p>7.23.使用PathGeometry来创建Path<br>PathGeometry是Geometry里最灵活的几何图形,相当于Shape里面的Path一样,PathGeometry的核心是PathGeometry对象的集合,这些对象之所以这样命名是因为每个图形都描绘PathGeometry中的一个离散状态,每个PathFigure自身又由一个或多个PathSegment对象组成,每个这样的对象均描绘图形的一条线段.<br>PathGeometry所支持的Segment<br>ArcSegment 在两个点之间创建一条椭圆弧线<br>BezierSegment 在两个点之间创建一条三次方贝塞尔曲线<br>LineSegment 在两个点之间创建一条直线<br>PolyBezierSegment 创建一系列三次方贝塞尔曲线.<br>PolyQuadraticBezierSegment 创建一系列二次方贝塞尔曲线<br>PolyLineSegment 创建一系列直线<br>QuadraticBezierSegment 创建一条二次贝塞尔曲线<br>PathGeometry的Figures属性可以容纳PathFigure对象.而PathFigure对象的Segments属性又可以容纳各种线段用来组合成复杂的图形.<br>1.LineSegment和PolylineSegment<br>LineSegment类表示在两个点之间绘制一条线,它可能是Path数据的PathFigure的一部分.使用PathFigure对象通过LineSegment对象和其他线段来创建复合形状.LineSegment类不包含用于直线起点的属性,直线的起点是前一条线段的终点,如果不存在其他线段,则为PathFigure的StartPoint;其他的Segment也是一样的规则.<br>可以使用Line生成线条的简单形状,LineSegment用于在更复杂的几何组中绘制线.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                    &lt;Path.Data&gt;</span><br><span class="line">                        &lt;PathGeometry&gt;</span><br><span class="line">                            &lt;PathFigure StartPoint=<span class="string">&quot;10,20&quot;</span>&gt;</span><br><span class="line">                                &lt;PathFigure.Segments&gt;</span><br><span class="line">                                    &lt;LineSegment Point=<span class="string">&quot;100,130&quot;</span>/&gt;</span><br><span class="line">                                &lt;/PathFigure.Segments&gt;</span><br><span class="line">                            &lt;/PathFigure&gt;</span><br><span class="line">                        &lt;/PathGeometry&gt;</span><br><span class="line">                    &lt;/Path.Data&gt;</span><br><span class="line">                &lt;/Path&gt;</span><br></pre></td></tr></table></figure><p>PolyLineSegment类表示由PointCollection定义的线段集合,每个Point指定线段的终点.<br>PolyLineSegment在Xaml上语法示例如下,省略掉部分Path的代码与上文相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;PolyLineSegment Points=<span class="string">&quot;50,100,50,150&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>2.ArcSegment绘制圆弧.<br>Point属性指明圆弧连接的终点,Size属性表示完整椭圆的横轴和纵轴半径.RotationAngle属性指明圆弧母椭圆的旋转角度,SweepDirection属性指明圆弧是顺时针方向还是逆时针方向,IsLargeArc属性指明是否使用大弧去连接,如果椭圆上的两个点的位置不对称,这两点间的圆弧就会分为大弧和小弧.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">                    &lt;Path.Data&gt;</span><br><span class="line">                        &lt;PathGeometry&gt;</span><br><span class="line">                            &lt;PathGeometry.Figures&gt;</span><br><span class="line">                                &lt;PathFigure StartPoint=<span class="string">&quot;10,50&quot;</span>&gt;</span><br><span class="line">                                    &lt;PathFigure.Segments&gt;</span><br><span class="line">                                        &lt;ArcSegment Size=<span class="string">&quot;50,50&quot;</span> RotationAngle=<span class="string">&quot;45&quot;</span> IsLargeArc=<span class="string">&quot;True&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span> Point=<span class="string">&quot;200,100&quot;</span>&gt;</span><br><span class="line">                                            </span><br><span class="line">                                        &lt;/ArcSegment&gt;</span><br><span class="line">                                    &lt;/PathFigure.Segments&gt;</span><br><span class="line">                                &lt;/PathFigure&gt;</span><br><span class="line">                            &lt;/PathGeometry.Figures&gt;</span><br><span class="line">                        &lt;/PathGeometry&gt;</span><br><span class="line">                    &lt;/Path.Data&gt;</span><br><span class="line">                &lt;/Path&gt;</span><br></pre></td></tr></table></figure><p>3.BezierSegment,PolyBezierSegment,PolyQuadraticBezierSegment和QuadraticBezierSegment<br>一条三次方贝塞尔曲线由4个点定义:一个起点,一个终点,和两个控制点(Point1和Point2).三次方贝塞尔曲线的两个控制点作用像磁铁一样,朝着自身的方向吸引本应为直线的部分,从而形成一条曲线.第一个控制点Point1影响曲线的开始部分;第二个控制点Point2影响曲线的结束部分.注意,曲线不一定必须通过两个控制点之一.每个控制点将直线的一部分朝着自己的方向移动,但不能通过自身,PolyBezierSegment通过将Points属性设置为点集合来指定一条或多条三次方贝塞尔曲线.PolyBezierSegment实质上可以有无限个控制点,这些点和终点的值由Points属性值提供.<br>QuadraticBezierSegment表示二次方贝塞尔曲线,与BezierSegment类似,只是控制点由两个变成了一个.也就是说QuadraticBezierSegment由3个点决定:起点(即前一个线段的终点或PathFigure的StartPoint),终点(Point2属性,即曲线的终止位置)和控制点(Point1属性)<br>7.24.使用路径标记语法创建Path<br>路径标记语法 就是各种线段的简记法.<LineSegment point="150,5"/>可以简写为”L 150,5”<br>还增加了一些更实用的绘图命令 H用来绘制水平线,”H 180”就是指从当前点画一条水平直线,终点的横坐标是180.(不需要考虑纵坐标,纵坐标和当前点一致.) 类似的还有V命令,用来划竖直直线.<br>使用路径标记语法绘图一般分三步,移动至起点—绘图—闭合图形 移动M 绘图 L ,H,V,A,C,Q等.如果图形是闭合的,需要使用闭合命令Z,这样最后一条线段终点与第一条线段的起点就会连接上一条直线段.<br>在路径标记语法中使用两个Double类型的数值来表示一个点.第一个值表示的是横坐标(记作X),第二个值表示纵坐标(记作y),两个数字可以使用逗号分隔(x,y),也可以使用空格分隔. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Path Stroke=<span class="string">&quot;Red&quot;</span> StrokeThickness=<span class="string">&quot;3&quot;</span> Data=<span class="string">&quot;M 100,200 C 100,25 400,350 400,175 H 280&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>上面Path创建了由一条贝塞尔曲线线段和一条线段组成的Path.Data字符串以’move’命令开头(M),建立起点,大写的M表示新的当前点的绝对位置.小写的m表示相对位置.第一个线段是一个三次方贝塞尔曲线,该曲线从(100,200)开始,在(400,175)结束,使用(100,25)和(400,350)这两个控制点绘制.此线段由Data字符串中的C命令指示.同样,大写的C表示绝对路径,小写的c代表相对路径.第二个线段以绝对水平线命令H开头,它指定绘制一条从前面的子路径的终结点(400,175)到新终结点(280,175)的直线.由于他是一个水平线命令,因此指定的值是x坐标.<br>路径标记语法<br>移动指令 M  M x,y或m x,y 大写M x,y是绝对值;小写的m指示x,y是相对于上一个点的偏移量, 0,0表示不存在偏移.在move命令之后列出多个点时,即使指定的是线条命令,也将绘制出连接这些点的线.<br>绘制指令 通过使用一个大写或小写字母输入各命令,大写表示绝对值,小写表示相对值,线段的控制点是相对于上一线段终点而言的,依次输入多个同一类型的命令时,可以省略重复的命令项,例如,L 100,200 300,400 等同于L 100,200 L 300,400<br>    直线 Line L 格式:L结束点坐标 或I结束点坐标. L 100<br>    水平直线 Horizontal line H H x值或h x值(x为System.Double类型的值) 绘制从当前点到指定x坐标的水平直线. H 100<br>    垂直直线 Vertical line V V y或v y值 绘制从当前点到指定y坐标的垂直直线. V1 100<br>    三次方贝塞尔曲线 Cubic Bezier curve C C第一控制点 第二控制点 结束点 通过指定两个控制点来绘制由当前点到指定结束点间的三次方程贝塞尔曲线. C 100,200 200,400 300,200   100,200为第一控制点<br>    二次方程式贝塞尔曲线 Quadratic Bezier curve Q Q控制点结束点或q控制点结束点 通过指定的一个控制点来绘制由当前点到指定结束点间的二次方程贝塞尔曲线. q 100,200 300,200  100,200控制点 300，200 结束点<br>    平滑三次方程式贝塞尔曲线 Smooth cubic Bezier curve (S) S控制点结束点或s控制点结束点 通过一个指定点来”平滑”控制当前点到指定点的贝塞尔曲线 如 S 100,200 200,300<br>    平滑二次方程式贝塞尔曲线 smooth quadratic bezier curver T  T控制点 结束点  T 100,200 200,300<br>    椭圆圆弧:elliptical Arc A A尺寸圆弧旋转角度值优势弧的标记正负角度标记结点 在当前点与指定结束点间绘制圆弧.<br>    尺寸 Size 指定椭圆圆弧X,Y方向上的半径值.<br>    旋转角度 rotationAngle System.Double类型. 圆弧旋转角度值<br>    优势弧的标记(isLargeArcFlag) 是否为优势弧,如果弧的角度大于等于180°,则设为1,否则为0<br>    正负角度标记(sweepDirectionFlag) 当正角方向绘制时设为1 否则为0.<br>    结束点 endPoint  例如:A 5,5 0 0 1 10,10<br>关闭指令 可选 用Z或z表示.用以将图形的首,尾点用直线连接,以形成一个封闭的区域<br>填充规则 fileRule 如果省略此命令,则路径使用默认行为,即EvenOdd.如果指定此命令,则必须将其置于最前面.<br>    EvenOdd填充规则 F0指定EvenOdd填充规则.EvenOdd确定一个点是否位于填充区域内的规则方法:从该点沿任意方向画一条无限长的射线,然后计算该射线在给定形状中因交叉而形成的路径段数.如果该数为奇数，则点在内部;如果为偶数,则点在外部<br>    Nonzero填充规则 F1指定Nonzero填充规则 Nonzero确定一个点是否位于路径填充区域内的的规则方法:从该点沿任意方向画一条无限长的射线,然后检查形状段与该射线的交点,从0开始计数,每当线段从左到右穿过该射线时加1,而每当路径段从左到右穿过该射线时加1,而每当路径段从右向左穿过该射线-1.计算交点的数目后,如果结果为0,则说明该点位于路径外部,否则,它位于路径内部.<br>7.25.使用Path实现自定义图形<br>布局面板通过重载FrameworkElement类的ArrangeOverride方法对子对象进行排列,从Path类派生的图形类一样也可以通过重载ArrangeOverride方法对图形进行初始化.在初始化逻辑生成适用于自定义形状的几何图形,随后再将其设置赋值给Path.Data属性,可以充分利用Width和Height等这些Path自带的属性作为自定义图形的相关参数,当然如果需要额外的参数,也是可以通过实现自定义属性进行传递.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">  &lt;Grid x:Name=<span class="string">&quot;HexagonContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                   &lt;controls:Hexagon Height=<span class="string">&quot;300&quot;</span> Width=<span class="string">&quot;300&quot;</span> Stroke=<span class="string">&quot;Yellow&quot;</span> StrokeThickness=<span class="string">&quot;8&quot;</span> Fill=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line"></span><br><span class="line">public class Hexagon : Path</span><br><span class="line">   &#123;</span><br><span class="line">       private double lastWidth = 0;</span><br><span class="line">       private double lastHeight = 0;</span><br><span class="line">       private PathFigure figure;</span><br><span class="line">       public <span class="function"><span class="title">Hexagon</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">           CreateDataPath(0,0);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void CreateDataPath(double width,double height)</span><br><span class="line">       &#123;</span><br><span class="line">           //把高度和宽度先减去边的宽度</span><br><span class="line">           height -= this.StrokeThickness;</span><br><span class="line">           width-= this.StrokeThickness;</span><br><span class="line">           //用来跳出布局的循环,因为只创建一次</span><br><span class="line">           <span class="keyword">if</span> (lastWidth == width &amp;&amp; lastHeight == height)</span><br><span class="line">               <span class="built_in">return</span>;</span><br><span class="line">           lastWidth= width;</span><br><span class="line">           lastHeight= height;</span><br><span class="line">           PathGeometry geometry= new PathGeometry();</span><br><span class="line">           figure= new PathFigure();</span><br><span class="line">           //取左上角的点为第一个点</span><br><span class="line">           figure.StartPoint=new Windows.Foundation.Point(0.25*width,0);</span><br><span class="line">           //算出每个顶点的坐标然后创建线段连接起来</span><br><span class="line">           AddPoint(0.75*width,0);</span><br><span class="line">           AddPoint(width,0.5*height);</span><br><span class="line">           AddPoint(0.75*width,height);</span><br><span class="line">           AddPoint(0.25*width,height);</span><br><span class="line">           AddPoint(0,0.5*height);</span><br><span class="line">           figure.IsClosed= <span class="literal">true</span>;</span><br><span class="line">           geometry.Figures.Add(figure);</span><br><span class="line">           this.Data = geometry;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void AddPoint(double x, double y)</span><br><span class="line">       &#123;</span><br><span class="line">          LineSegment segment= new LineSegment();</span><br><span class="line">           segment.Point=new Point(x+0.5*StrokeThickness,y+0.5*StrokeThickness);</span><br><span class="line">           figure.Segments.Add(segment);</span><br><span class="line">       &#125;</span><br><span class="line">       protected override Size MeasureOverride(Size availableSize)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">return</span> availableSize;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       protected override Size ArrangeOverride(Size finalSize)</span><br><span class="line">       &#123;</span><br><span class="line">           //初始化图形</span><br><span class="line">           CreateDataPath(finalSize.Width,finalSize.Height);</span><br><span class="line">           <span class="built_in">return</span> finalSize;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>7.26.利用Expression Blend工具创建Path图形<br>1.使用笔或者铅笔工具画出Path图形<br>打开Expression Blend工具,可以找到左边图标工具栏上的笔或铅笔<br>2.把相关的图形转换成Path图形.<br>在Blend里面除了基本图形外,还封装了很多其他的图形,可以直接把这些图形转换为Path图形.转换的方法是在图形上面,右键——&gt;路径——&gt;转换为路径,这时候就把相关的图形转换为Path绘图的方式.<br>3.通过合并图形的方式生成Path图形<br>合并图形的方式是指在Blend里面创建了多个图形,按住Ctrl键把要合并的图形选中,然后右键—&gt;合并—&gt;相并/拆分/相交/相减/排除重叠.<br>4.导入设计的源文件<br>在Blend里可以导入Illustrator文件/FXG文件/Photoshop文件,把这些文件转换为XAML编码,同时也会把里面相关的图形转换为Path图形,这是Blend工具提供的一个非常有用的一个功能,通常设计师会采用Phoneshop设计图片,直接把设计好的Photoshop文件导入就可以把文件转成为XAML编码<br>7.3画刷<br>使用XAML时,在控件的Background,Foreground和Fill属性中简单的输入颜色名,应用程序运行时就会将字符串值转换为有效的颜色资源对应的画刷.<br>7.31.SolidColorBrush画刷<br>SolidColorBrush画刷主要用来填充单色形状或控件,可以直接通过颜色进行创建,在Xaml中直接输入颜色名使用的就是SolidColorBrush画刷,可以通过直接使用Colors里面的颜色值进行赋值.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Rectangle width=<span class="string">&quot;100&quot;</span> height=<span class="string">&quot;100&quot;</span> Fill=<span class="string">&quot;#FFFF0000&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>7.32.LinearGradientBrush画刷<br>线性渐变画刷(LinearGradientBrush)用来填充一个复合渐变色到一个元素中,并且可以任意搭配两种或两种以上的颜色,重要的属性有倾斜点(GradientStop),渐变颜色(Color),起始坐标点(StartPoint),结束坐标点(EndPoint).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Path Canvas.Left=<span class="string">&quot;15&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> Data=<span class="string">&quot;M 0,0 A 15,5 180 1 1 200,0 L 200,100 L 300,100 L 300,200 A 15,5 180 1 1 100,200 L 100,100 L 0,100 Z&quot;</span>&gt;</span><br><span class="line">&lt;Path.Fill&gt;</span><br><span class="line">&lt;LinearGradientBrush StartPoint=<span class="string">&quot;0,0&quot;</span> EndPoint=<span class="string">&quot;1,0&quot;</span>&gt;</span><br><span class="line">&lt;GradientStop Offset=<span class="string">&quot;0&quot;</span> Color=<span class="string">&quot;DarkBlue&quot;</span>/&gt;</span><br><span class="line">&lt;GradientStop Offset=<span class="string">&quot;1&quot;</span> Color=<span class="string">&quot;LightBlue&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearGradientBrush&gt;</span><br><span class="line">&lt;/Path.Fill&gt;</span><br><span class="line">&lt;/Path&gt;</span><br></pre></td></tr></table></figure><p>7.33.ImageBrush画刷<br>ImageBrush画刷使用图像绘制一个区域,由其ImageSource属性指定的JPEG或PNG图像绘制区域,默认情况下,ImageBrush会将其图像拉伸以完全充满要绘制的区域,如果绘制的区域和该图像的长宽比不同,则可能会扭曲该图像.可以通过将Stretch属性从默认值Fill更改为None,Uniform或者UniformToFill来更改此现象.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Ellipse Height=<span class="string">&quot;180&quot;</span> Width=<span class="string">&quot;180&quot;</span> Margin=<span class="string">&quot;50,0,0,0&quot;</span>&gt;</span><br><span class="line">&lt;Ellipse.Fill&gt;</span><br><span class="line">&lt;ImageBrush ImageSource=<span class="string">&quot;Assets/ApplicationIcon.png&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span>/&gt;</span><br><span class="line">&lt;/Ellipse.Fill&gt;</span><br><span class="line">&lt;/Ellipse&gt;</span><br></pre></td></tr></table></figure><p>通常会利用ImageBrush来做一些特别的遮罩效果,<br>7.4 图形裁剪<br>Geometry类型还有一个用途就是可以用在UIElement的Clip属性上对从UIElement派生的控件进行图形裁剪,裁剪出来的形状就是Geometry类型所构成的图形.Geometry类型在UIElement的Clip属性上的语法和在Path的Data属性上的语法完全一样.<br>7.41.使用几何图形进行裁剪<br>裁剪图像时是指仅把图像的某个局部区域的图像显示出来.可以通过使用UIElement的Clip属性来设置图像裁剪的区域,Clip属性值为Geometry类型的派生类,可以取值为RectangleGeometry类型,这就意味着可以从图像中裁切掉矩形的几何形状.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Image Source=<span class="string">&quot;myImage.jpg&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;150&quot;</span>&gt;</span><br><span class="line">&lt;Image.Clip&gt;</span><br><span class="line">&lt;RectangleGeometry Rect=<span class="string">&quot;0,0,50,50&quot;</span>/&gt;</span><br><span class="line">&lt;/Image.Clip&gt;</span><br><span class="line">&lt;/Image&gt;</span><br></pre></td></tr></table></figure><p>因为Clip属性是UIElement的属性,所以不仅仅只有Image控件可以使用其来裁剪图形,所有的UI对象都可以使用Clip属性对UI进行裁剪.<br>7.42.对布局区域进行剪裁<br>使用布局面板来布局一些子控件,实际上这些子控件所在的位置可以超出布局面板的范围,实现一个布局面板,让面板里的子控件都在面板的范围里,超出面板就不可见.可以利用Clip属性去实现,因为Clip属性是UIElement类的属性,也就是说所有的XAML控件都可以使用这个属性去进行图形裁剪.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">  &lt;Grid x:Name=<span class="string">&quot;ClipContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas Background=<span class="string">&quot;White&quot;</span> Margin=<span class="string">&quot;20&quot;</span> controls:Clip.ToBounds=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                        &lt;Ellipse Fill=<span class="string">&quot;Red&quot;</span> Canvas.Top=<span class="string">&quot;-10&quot;</span> Canvas.Left=<span class="string">&quot;-10&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line"></span><br><span class="line">public class Clip </span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public static bool GetToBounds(DependencyObject obj)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> (bool)obj.GetValue(ToBoundsProperty);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void SetToBounds(DependencyObject obj, bool value)</span><br><span class="line">        &#123;</span><br><span class="line">            obj.SetValue(ToBoundsProperty, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> ToBounds.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty ToBoundsProperty =</span><br><span class="line">            DependencyProperty.RegisterAttached(<span class="string">&quot;ToBounds&quot;</span>, typeof(bool), typeof(Clip), new PropertyMetadata(<span class="literal">false</span>,OnToBoundsPropertyChanged));</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 定义属性改变事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;d&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">        private static void OnToBoundsPropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            FrameworkElement fe = d as FrameworkElement;</span><br><span class="line">            <span class="keyword">if</span> (fe != null)</span><br><span class="line">            &#123;</span><br><span class="line">                //裁剪图形</span><br><span class="line">                ClipToBounds(fe);</span><br><span class="line">                //当对象加载或者大小改变时都需要重新处理边界</span><br><span class="line">                fe.Loaded += Fe_Loaded;</span><br><span class="line">                fe.SizeChanged += Fe_SizeChanged;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void Fe_SizeChanged(object sender, SizeChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            ClipToBounds(sender as FrameworkElement);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void Fe_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            ClipToBounds(sender as FrameworkElement);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void ClipToBounds(FrameworkElement fe)</span><br><span class="line">        &#123;</span><br><span class="line">            //如果ToBounds设置为<span class="literal">true</span>则进行裁剪</span><br><span class="line">            <span class="keyword">if</span> (GetToBounds(fe))</span><br><span class="line">            &#123;</span><br><span class="line">                //使用布局面板的实际高度和宽度来创建一个RectangleGeometry赋值给Clip属性</span><br><span class="line">                fe.Clip = new Windows.UI.Xaml.Media.<span class="function"><span class="title">RectangleGeometry</span></span>()</span><br><span class="line">                &#123;</span><br><span class="line">                    Rect = new Windows.Foundation.Rect(0, 0, fe.ActualWidth, fe.ActualHeight)</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fe.Clip = null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>7.5.使用位图编程<br>Image控件用于显示图片,在Win10中将一张图片显示出来可以添加一个Image控件,然后在控件中设置图片的路径.使用Image控件显示图片语法如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Image Source=<span class="string">&quot;myPicture.png&quot;</span>/&gt;</span><br><span class="line">Image myImage=new Image();</span><br><span class="line">myImage.Source=new BitmapImage(new Uri(<span class="string">&quot;ms-appx:///myPicture.jpg&quot;</span>,UriKind.Absolute));</span><br></pre></td></tr></table></figure><p>Source属性用于指定要显示的图像位置,在路径中,使用ms-appx URI方案名称编写安装文件夹地址:ms-appx:///，表示指向于安装包文件的地址.<br>7.51 拉伸图像<br>如果没有设置Image的Width和Height值,使用图像自然尺寸显示,Stretch:None,Uniform,Uniform    ToFill.<br>7.52.使用RenderTargetBitmap类生成图片<br>RenderTargetBitmap类可以将可视化对象转换为位图,也就是说可以将任意的UIElement以位图的形式呈现,在实现的编程中通常利用RenderTartgetBitmap类对UI界面进行截图操作.<br>使用RenderTargetBitmap类生成图片一般有两种用途,一种是直接把生成的图片在当前的页面上进行展示,还有一种是把生成的图片当作文件存储起来,或者通过某种分享方向把图片文件分享出去.<br>使用RenderTargetBitmap类生成图片操作主要是依赖于RenderTargetBitmap类的RenderAsync方法.<br>RenderAsync方法有两个重载;RenderAsync(UIElement)和RenderAsync(UIElement,Int32,Int32),可在后者处指定要与源可视化树的自然大小不同的所需图像源尺寸.RenderAsync方法设计为异步方法,因此无法保证与UI源进行精确的框架同步,但大多数情况下都足够及时.由于RenderTargetBitmap是ImageSource的子类,因此,可以将其用作Image元素或ImageBrush画笔的图像源.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;RenderTargetBitmap&quot;</span>&gt;</span><br><span class="line">               &lt;!--注册PointerReleased事件用于捕获屏幕的单击操作,并在时间处理程序中生成图片.--&gt;</span><br><span class="line">               &lt;Grid x:Name=<span class="string">&quot;root&quot;</span> Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span> PointerReleased=<span class="string">&quot;root_PointerReleased&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                       &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                   &lt;StackPanel x:Name=<span class="string">&quot;TitlePanel&quot;</span> Margin=<span class="string">&quot;12,35,0,28&quot;</span>&gt;</span><br><span class="line">                       &lt;TextBlock Text=<span class="string">&quot;我的应用程序&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                       &lt;TextBlock Text=<span class="string">&quot;点击截屏&quot;</span> FontSize=<span class="string">&quot;60&quot;</span>/&gt;</span><br><span class="line">                   &lt;/StackPanel&gt;</span><br><span class="line">                   &lt;Grid x:Name=<span class="string">&quot;RenderTargetBitmapContentPanel&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                   &lt;!--该图片控件用于展示截图图片效果--&gt;</span><br><span class="line">                       &lt;Image x:Name=<span class="string">&quot;img&quot;</span>/&gt;</span><br><span class="line">                   &lt;/Grid&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 指针释放的事件处理程序</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void root_PointerReleased(object sender, PointerRoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //创建一个RenderTargetBitmap对象,对界面中的Grid控件root生成图片</span><br><span class="line">           RenderTargetBitmap bitmap = new RenderTargetBitmap();</span><br><span class="line">           await bitmap.RenderAsync(root);</span><br><span class="line">           //把图片展现出来</span><br><span class="line">           img.Source=bitmap;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>7.53.存储生成的图片文件<br>在调用RenderAsync方法时会初始化RenderTargetBitmap类的对象,但是RenderTargetBitmap类的对象本身并不能作为图片来进行存储,要生成图片文件需要获取到图片的二进制数据,如果想要获取DataTransferManager操作 如共享协定交换的图像,或者想要使用Windows.Graphics.Imaging Api将效果应用到图像上或对图像进行转码,就需要用到像素数据,如果访问RenderTargetBitmap的pIxels数据,需要在用RenderAsync方法将UIElement定义为RenderTargetBitmap后m在调用RenderTargetBitmpa的GetPixelsAsync方法来获取其Pixels数据,该方法返回值是IBuffer类型,里面存储的是二进制位图数,这个IBuffer可以转换成一个Byte数组,数组里面的数据以BGRA8格式存储.<br>以下代码示例如何从一个RenderTargetBitmap对象中获得以Byte数组类型存储的像素数.需要特别注意的是IBuffer实例调用的ToArray方法是一个扩展方法,需要在项目中加入System.Runtime.InteropServices.WindowsRuntime这个命名空间.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var bitmap=new RenderTargetBitmap();</span><br><span class="line">await bitmap.RenderAsync(elementToRender);</span><br><span class="line">IBuffer pixelBuffer=await bitmap.GetPixelsAsync();</span><br><span class="line">byte[] pixels=pixelBuffer.ToArray();</span><br></pre></td></tr></table></figure><p>在获取到了图像的二进制数据之后,如果要把二进制的数据生成图片文件,需要使用到BitmapEncoder类.BitmapEncoder类包含创建,编辑和保存图像的各种方法.创建图片文件首先需要调用BitmapEncoder类CreateAsync方法,使用文件的流创建一个BitmapEncoder对象,然后再使用BitmapEncoder类的SetPixelData设置图像有关帧的像素数据.SetPixelData的方法参数如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetPixelData(BitmapPixelFormat pixelFormat,BitmapAlphaMode alphaMode,uint width,uint height,double dpiX,double dpiY,byte[] pixels)</span><br></pre></td></tr></table></figure><p>其中,pixelFormat表示像素数据的像素格式,alphaMode表示像素数据的alpha模式,width表示像素数据的宽度(以像素为单位),height表示像素数据的高度(以像素为单位);dpiX表示像素数据的水平分辨率(以每英寸点数为单位);pixels表示像素数据.该方法是同步的,因为直到调用FlushAsync,GoToNextFrameAsync或GoToNextFrameAsync(IIterable(IkeyValuePair))才会提交数据.该方法将所有像素数据视为sRGB颜色空间中的像素数据.<br>保存截图文件的示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">           &lt;PivotItem Header=<span class="string">&quot;SaveBitmapEncoder&quot;</span>&gt;</span><br><span class="line">               &lt;Grid x:Name=<span class="string">&quot;root1&quot;</span> Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                   &lt;Grid x:Name=<span class="string">&quot;BitmapEncoderContentPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                       &lt;StackPanel&gt;</span><br><span class="line">                           &lt;Button x:Name=<span class="string">&quot;bt_save1&quot;</span> Content=<span class="string">&quot;存储生成的图片&quot;</span> Click=<span class="string">&quot;bt_save_Click_2&quot;</span>/&gt;</span><br><span class="line">                           &lt;Button x:Name=<span class="string">&quot;bt_show&quot;</span></span><br><span class="line">                                   Content=<span class="string">&quot;展示存储的图片&quot;</span></span><br><span class="line">                                   Click=<span class="string">&quot;bt_show_Click&quot;</span>/&gt;</span><br><span class="line">                           &lt;ScrollViewer BorderBrush=<span class="string">&quot;Red&quot;</span> BorderThickness=<span class="string">&quot;2&quot;</span> Height=<span class="string">&quot;350&quot;</span>&gt;</span><br><span class="line">                               &lt;Image x:Name=<span class="string">&quot;img1&quot;</span>/&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/ScrollViewer&gt;</span><br><span class="line">                       &lt;/StackPanel&gt;</span><br><span class="line">                   &lt;/Grid&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">       /// 按钮事件生成图片并保存到程序的存储里</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void bt_save_Click_2(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           //生成RenderTargetBitmap对象.</span><br><span class="line">           RenderTargetBitmap bitmapbitmap = new RenderTargetBitmap();</span><br><span class="line">           await bitmapbitmap.RenderAsync(root1);</span><br><span class="line">           //获取图像的二进制数据</span><br><span class="line">           var pixelBuffer=await bitmapbitmap.GetPixelsAsync();</span><br><span class="line">           //创建程序文件存储</span><br><span class="line">           IStorageFolder applicationFolder=ApplicationData.Current.LocalFolder;</span><br><span class="line">           IStorageFile saveFile = await applicationFolder.CreateFileAsync(<span class="string">&quot;snapshot.png&quot;</span>,CreationCollisionOption.OpenIfExists);</span><br><span class="line">           //把图片的二进制数据写入文件存储</span><br><span class="line">           using (var fileStream=await saveFile.OpenAsync(FileAccessMode.ReadWrite))</span><br><span class="line">           &#123;</span><br><span class="line">               var encoder = await BitmapEncoder.CreateAsync(BitmapEncoder.PngEncoderId,fileStream);</span><br><span class="line">               encoder.SetPixelData(</span><br><span class="line">                   BitmapPixelFormat.Bgra8,</span><br><span class="line">                   BitmapAlphaMode.Ignore,</span><br><span class="line">                   (uint)bitmapbitmap.PixelWidth,</span><br><span class="line">                   (uint)bitmapbitmap.PixelHeight,</span><br><span class="line">                   DisplayInformation.GetForCurrentView().LogicalDpi,</span><br><span class="line">                   DisplayInformation.GetForCurrentView().LogicalDpi,</span><br><span class="line">                   pixelBuffer.ToArray());</span><br><span class="line">               await encoder.FlushAsync();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 展示程序存储图片的按钮事件</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private void bt_show_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           // “ms-appdata:///local”表示是程序存储的根目录</span><br><span class="line">           BitmapImage bitmapImage=new BitmapImage(new Uri(<span class="string">&quot;ms-appdata:///local/snapshot.png&quot;</span>,UriKind.Absolute));</span><br><span class="line">           img1.Source= bitmapImage;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Windows应用程序开发" scheme="https://drfengling.github.io/categories/Windows%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="UWP" scheme="https://drfengling.github.io/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出Windows通用应用程序开发(一)</title>
    <link href="https://drfengling.github.io/qm/7b676f35.html"/>
    <id>https://drfengling.github.io/qm/7b676f35.html</id>
    <published>2022-11-29T05:15:57.000Z</published>
    <updated>2022-12-05T02:32:22.431Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="创建Windows-10通用应用"><a href="#创建Windows-10通用应用" class="headerlink" title="创建Windows 10通用应用"></a>创建Windows 10通用应用</h3><h2 id="创建Hello-World项目"><a href="#创建Hello-World项目" class="headerlink" title="创建Hello World项目"></a>创建Hello World项目</h2><p>1.打开vs,New Project,C#,Windows,Universal/UWP,选择一个空白项目模板(Universal Windows),单击OK按钮完成项目的创建.<br>2.MainPage.xaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.MainPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Button HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> Content=<span class="string">&quot;Hello,App&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.编辑部署程序<br>选择Deploy Solution在模拟器上运行应用程序.</p><h3 id="解析应用"><a href="#解析应用" class="headerlink" title="解析应用"></a>解析应用</h3><p>1.MainPage.xaml<br>    Background=”{ThemeResource ApplicationPageBackgroundThemeBrush}”&gt;<br>表示当前背景使用的是系统的主题资源背景.<br>2.App.xaml.cs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.ApplicationModel;</span><br><span class="line">using Windows.ApplicationModel.Activation;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Media.Animation;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 提供特定于应用程序的行为，以补充默认的应用程序类。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    sealed partial class App : Application</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        private TransitionCollection transitions;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 初始化单一实例应用程序对象。这是执行的创作代码的第一行，</span><br><span class="line">        /// 已执行，逻辑上等同于 main() 或 WinMain()。</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        public <span class="function"><span class="title">App</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">            this.Suspending += OnSuspending;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在应用程序由最终用户正常启动时进行调用。</span><br><span class="line">        /// 将在启动应用程序以打开特定文件等情况下使用。</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;有关启动请求和过程的详细信息。&lt;/param&gt;</span><br><span class="line">        protected override void OnLaunched(LaunchActivatedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Frame rootFrame = Window.Current.Content as Frame;</span><br><span class="line"></span><br><span class="line">            // 不要在窗口已包含内容时重复应用程序初始化，</span><br><span class="line">            // 只需确保窗口处于活动状态</span><br><span class="line">            <span class="keyword">if</span> (rootFrame == null)</span><br><span class="line">            &#123;</span><br><span class="line">                // 创建要充当导航上下文的框架，并导航到第一页</span><br><span class="line">                rootFrame = new Frame();</span><br><span class="line">                //设置当前的页面框架可以缓存的页面数量</span><br><span class="line"></span><br><span class="line">                rootFrame.CacheSize=1;</span><br><span class="line"></span><br><span class="line">                rootFrame.NavigationFailed += OnNavigationFailed;</span><br><span class="line">                //判断程序的上一个状态.</span><br><span class="line">                <span class="keyword">if</span> (e.PreviousExecutionState == ApplicationExecutionState.Terminated)</span><br><span class="line">                &#123;</span><br><span class="line">                    //如果是从休眠程序启动,这里要加载上一个状态的相关数据</span><br><span class="line">                    //TODO: 从之前挂起的应用程序加载状态</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 将框架放在当前窗口中</span><br><span class="line">                Window.Current.Content = rootFrame;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (e.PrelaunchActivated == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                //判断框架内容是否为空</span><br><span class="line">                <span class="keyword">if</span> (rootFrame.Content == null)</span><br><span class="line">                &#123;</span><br><span class="line">                    //如果相关的动画值不为空则添加动画</span><br><span class="line">                    <span class="keyword">if</span> (rootFrame.ContentTransitions!=null)</span><br><span class="line">                    &#123;</span><br><span class="line">                        this.transitions= new TransitionCollection();</span><br><span class="line">                        foreach (var item <span class="keyword">in</span> rootFrame.ContentTransitions)</span><br><span class="line">                        &#123;</span><br><span class="line">                            this.transitions.Add(item);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    rootFrame.ContentTransitions= null;</span><br><span class="line">                    //添加导航跳转完成的事件</span><br><span class="line">                    rootFrame.Navigated += RootFrame_Navigated;</span><br><span class="line">                    ///导航跳转到引用程序的MainPage页面</span><br><span class="line">                    <span class="keyword">if</span> (!rootFrame.Navigate(typeof(MainPage), e.Arguments)) &#123;</span><br><span class="line">                        throw new Exception(<span class="string">&quot;Failed to create initial page.&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    // 当导航堆栈尚未还原时，导航到第一页，</span><br><span class="line">                    // 并通过将所需信息作为导航参数传入来配置</span><br><span class="line">                    // 参数</span><br><span class="line">                    rootFrame.Navigate(typeof(MainPage), e.Arguments);</span><br><span class="line">                &#125;</span><br><span class="line">                // 确保当前窗口处于活动状态</span><br><span class="line">                Window.Current.Activate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //导航事件完成的处理程序,从新创建启动动画的集合.</span><br><span class="line">        private void RootFrame_Navigated(object sender, NavigationEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            var rootFrame = sender as Frame;</span><br><span class="line">            rootFrame.ContentTransitions=this.transitions= new <span class="function"><span class="title">TransitionCollection</span></span>() &#123; new NavigationThemeTransition()&#125;;</span><br><span class="line">            rootFrame.Navigated-= RootFrame_Navigated;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 导航到特定页失败时调用</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        ///&lt;param name=<span class="string">&quot;sender&quot;</span>&gt;导航失败的框架&lt;/param&gt;</span><br><span class="line">        ///&lt;param name=<span class="string">&quot;e&quot;</span>&gt;有关导航失败的详细信息&lt;/param&gt;</span><br><span class="line">        void OnNavigationFailed(object sender, NavigationFailedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new Exception(<span class="string">&quot;Failed to load Page &quot;</span> + e.SourcePageType.FullName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 在将要挂起应用程序执行时调用。  在不知道应用程序</span><br><span class="line">        /// 无需知道应用程序会被终止还是会恢复，</span><br><span class="line">        /// 并让内存内容保持不变。</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;挂起的请求的源。&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;有关挂起请求的详细信息。&lt;/param&gt;</span><br><span class="line">        private void OnSuspending(object sender, SuspendingEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            var deferral = e.SuspendingOperation.GetDeferral();</span><br><span class="line">            //TODO: 保存应用程序状态并停止任何后台活动</span><br><span class="line">            deferral.Complete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>应用程序的三种主要状态,Running,NotRunning,Suspended.<br>1.应用启动 从其他状态到Running<br>2.应用激活 从NotRunning到Running<br>activated事件参数包括一个PreviousExecutionState属性,该属性告诉你应用在激活之前处于哪种状态.此属性是ApplicationExecutionState属性枚举值之一,CloseByUser,Terminated,NotRunning.PreviousExecutionState.Running,Suspended.应用以前不是被终止,因此不用担心还原数据.<br>3.应用挂起.从Running状态到Suspended状态.<br>4.应用恢复 从Suspended状态到Running状态.</p><p>3.Package.appxmanifest<br>声明应用的标识,应用的功能以及用来进行部署和更新的信息.<br>Package元素是整个清单的根节点.Identity元素表示应用程序版本发布者名称的信息.mp:PhoneIdentity元素表示应用程序相关的唯一标识符信息.Properties元素包含应用程序的名称,发布者名称等信息的设置.Prerequisites元素则是用于设置应用程序所支持的系统版本号,Resources元素表示应用程序所使用资源信息.Applicaitons元素包含了与应用程序相关的logo设置,闪屏图片设置等可视化的设置信息.Capablities元素表示当前应用程序所使用的一些手机特定功能,例如internetClient表示使用网络的功能</p><h3 id="不同平台设备的适配"><a href="#不同平台设备的适配" class="headerlink" title="不同平台设备的适配"></a>不同平台设备的适配</h3><h2 id="特定平台的API调用"><a href="#特定平台的API调用" class="headerlink" title="特定平台的API调用"></a>特定平台的API调用</h2><p>Window10里面有Windows Mobile Extension SDK和Windows Desktop Extension SDK分别表示手机版本和桌面版本的扩展SDK.都是内置在WIndow10SDK里面的,默认情况下不会给项目工程加上,需要使用时可以在项目工程里引用.Project,Add Reference,Window Universal,Extensions.在使用Api时必须判断当前环境支不支持.<br>判断方法为Windows.Foundation.Metadata.ApiInformation.IsTypePresent(string typeName),typename表示带完整命名空间的API名称,i返回true表示支持.ji返回false表示不支持.下面通过一个手机硬件后退键的适配来演示如何使用和适配特定平台的API.<br>首先创建WIndow10通用应用程序项目,BackButtonDemo,在项目里面引用Windows Mobile Extension SDK.<br>1.BlackPage.xaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.BlankPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel VerticalAlignment=<span class="string">&quot;Top&quot;</span> Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">            &lt;Button x:Name=<span class="string">&quot;backButton&quot;</span> Margin=<span class="string">&quot;24,24,24,24&quot;</span> Click=<span class="string">&quot;backButton_Click&quot;</span> Style=<span class="string">&quot;&#123;StaticResource NavigationBackButtonNormalStyle&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;你好&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">//App.xaml.cs</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=234238 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class BlankPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">BlankPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">            <span class="keyword">if</span> (App.IsHardwareButtonsAPIPresent)</span><br><span class="line">            &#123;</span><br><span class="line">                backButton.Visibility = Visibility.Collapsed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                backButton.Visibility = Visibility.Visible;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 后退按钮处理</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void backButton_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(this.Frame.CanGoBack)</span><br><span class="line">            &#123; this.Frame.GoBack(); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">///MainPage.xaml</span><br><span class="line">&lt;Page</span><br><span class="line">    x:Class=<span class="string">&quot;App1.MainPage&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;using:App1&quot;</span></span><br><span class="line">    xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">    xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">    mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">    Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel Orientation=<span class="string">&quot;Vertical&quot;</span>&gt;</span><br><span class="line">            &lt;Button HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> Content=<span class="string">&quot;Hello,App&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">&quot;跳转到新的页面&quot;</span> Click=<span class="string">&quot;Button2_Click&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Runtime.InteropServices.WindowsRuntime;</span><br><span class="line">using Windows.Foundation;</span><br><span class="line">using Windows.Foundation.Collections;</span><br><span class="line">using Windows.UI.Xaml;</span><br><span class="line">using Windows.UI.Xaml.Controls;</span><br><span class="line">using Windows.UI.Xaml.Controls.Primitives;</span><br><span class="line">using Windows.UI.Xaml.Data;</span><br><span class="line">using Windows.UI.Xaml.Input;</span><br><span class="line">using Windows.UI.Xaml.Media;</span><br><span class="line">using Windows.UI.Xaml.Navigation;</span><br><span class="line"></span><br><span class="line">// https://go.microsoft.com/fwlink/?LinkId=402352&amp;clcid=0x804 上介绍了“空白页”项模板</span><br><span class="line"></span><br><span class="line">namespace App1</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 可用于自身或导航至 Frame 内部的空白页。</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public sealed partial class MainPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">MainPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            this.InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            MediaElement media=new MediaElement();</span><br><span class="line">            var synth = new Windows.Media.SpeechSynthesis.SpeechSynthesizer();</span><br><span class="line">            Windows.Media.SpeechSynthesis.SpeechSynthesisStream stream = await synth.SynthesizeTextToStreamAsync(<span class="string">&quot;Hello,App!&quot;</span>);</span><br><span class="line">            media.SetSource(stream,stream.ContentType);</span><br><span class="line">            media.Play();   </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Button2_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            this.Frame.Navigate(typeof(BlankPage));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="界面适配"><a href="#界面适配" class="headerlink" title="界面适配"></a>界面适配</h3><p>1.使用相对的布局控件来进行排列,如Grid,RelativePanel等.<br>2.使用相对的属性来设置控件在容器的位置.如orizontaolAligment，VertaicalAlignment属性<br>3.设置长度宽度的最大值最小值限制;<br>4.根据设备实际分辨率来设置长度宽度或者位置;</p><h4 id="xaml界面原理和语法"><a href="#xaml界面原理和语法" class="headerlink" title="xaml界面原理和语法"></a>xaml界面原理和语法</h4><h3 id="对象元素"><a href="#对象元素" class="headerlink" title="对象元素"></a>对象元素</h3><p>Xaml的对象元素是指Xaml中一个完整的节点.</p><h3 id="设置属性"><a href="#设置属性" class="headerlink" title="设置属性"></a>设置属性</h3><p>1.使用属性语法<br>2.使用属性元素语法<br>3.使用内容元素语法<br>4.使用集合语法</p><h3 id="附加属性"><a href="#附加属性" class="headerlink" title="附加属性"></a>附加属性</h3><h3 id="标记扩展"><a href="#标记扩展" class="headerlink" title="标记扩展"></a>标记扩展</h3><p>1.Binding 实现在Xaml载入时,将数据绑定到xaml对象.<br>2.StaticResource标记扩展,实现引用数据字典中定义的静态资源.<br>3.ThemeResource标记扩展,表示系统内置的静态资源.<br>4.TemplateBinding标记扩展,实现在Xaml页面中对象模板绑定调用.<br>5.RelativeSource标记扩展,实现对特定数据源的绑定.</p><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p>&lt;元素对象 事件名称 =”事件处理”&gt;</p><h3 id="Xaml原理"><a href="#Xaml原理" class="headerlink" title="Xaml原理"></a>Xaml原理</h3><h2 id="动态加载xaml"><a href="#动态加载xaml" class="headerlink" title="动态加载xaml"></a>动态加载xaml</h2><p>动态加载Xaml是指在程序运行时通过解析xaml格式的字符串或文件来动态生成UI的效果.<br>使用XamlReader.Load方法动态加载XAML对XAML的字符串是有一定要求的,这些格式良好的XAML片段必须符合以下要求:<br>1.Xaml内容串必须定义单个根元素,使用XamlReader.Load创建的内容只能赋予一个Win10对象,它们是1对1关系.<br>2.内容字符串Xaml必须是格式良好的xml,并且必须是可分析的Xaml.<br>3.所需的根元素还必须指定某一默认的Xml命名空间值,这通常是命名空间xmlns=”<a href="http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;">http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</a><br>动态加载Xaml的示例:演示了使用XamlReader.Load方法加载Xaml字符串生成一个按钮和加载XAML文件生成一个矩形</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">   &lt;StackPanel x:Name=<span class="string">&quot;sp_Show&quot;</span>&gt;</span><br><span class="line">                &lt;Button x:Name=<span class="string">&quot;bt_addXaml&quot;</span> Content=<span class="string">&quot;加载Xaml按钮&quot;</span> Click=<span class="string">&quot;bt_addXaml_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 加载Xaml按钮</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void bt_addXaml_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //注意Xaml字符串里面的命名空间<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/presentation&quot;</span>不能少</span><br><span class="line">            string buttonXaml = $<span class="string">&quot;&lt;Button xmlns=&#x27;http://schemas.microsoft.com/winfx/2006/xaml/presentation&#x27; Content=\&quot;加载XAML文件\&quot; Foreground=\&quot;Red\&quot;/&gt;&quot;</span>;</span><br><span class="line">            Button btnRed=(Button)XamlReader.Load(buttonXaml);</span><br><span class="line">            btnRed.Click += BtnRed_Click;</span><br><span class="line">            sp_Show.Children.Add(btnRed);</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 已加载的XAML按钮关联的事件</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private async void BtnRed_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            string xaml = string.Empty;</span><br><span class="line">            //加载程序的Retangle.xaml文件</span><br><span class="line">            StorageFile fileRead=await Windows.ApplicationModel.Package.Current. InstalledLocation.GetFileAsync(<span class="string">&quot;Rectangle.xaml&quot;</span>);</span><br><span class="line">            //读取文件的内容</span><br><span class="line">            xaml=await FileIO.ReadTextAsync(fileRead);</span><br><span class="line">            //加载Rectangle</span><br><span class="line">            Rectangle rectangle=(Rectangle)XamlReader.Load(xaml);</span><br><span class="line">            sp_Show.Children.Add(rectangle);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">/// Rectangle.xaml</span><br><span class="line">&lt;Rectangle</span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    Height=<span class="string">&quot;100&quot;</span> Width=<span class="string">&quot;200&quot;</span></span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;Rectangle.Fill&gt;</span><br><span class="line">        &lt;LinearGradientBrush&gt;</span><br><span class="line">            &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">            &lt;GradientStop Color=<span class="string">&quot;Red&quot;</span> Offset=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">            &lt;GradientStop Color=<span class="string">&quot;Black&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">        &lt;/LinearGradientBrush&gt;</span><br><span class="line">    &lt;/Rectangle.Fill&gt;</span><br><span class="line">&lt;/Rectangle&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加Rectangle.xaml文件,需要手动设置Build Action属性为Content.表示作为内容资源来使用。</p><h4 id="XAML树结构"><a href="#XAML树结构" class="headerlink" title="XAML树结构"></a>XAML树结构</h4><h3 id="可视化树"><a href="#可视化树" class="headerlink" title="可视化树"></a>可视化树</h3><p>VisualTreeHelper类<br>VisualTreeHelper是一个静态帮助器类,它提供了一个在可视化对象级别编程的低级功能<br>提供了用来枚举可视化树成员的功能.可以在运行时对可视化树执行操作,并且可以遍历到模板部件,这是一种可用来检查模板组成情况的有用手段.此外,可以检查可能通过数据绑定填充的子集合，或者是应用程序代码可能无法全部了解运行时对象树的完整本质的子集合.若要检索父级,请调用GetParent方法.若要检索父级,请调用GetParent方法,若要检索可视化对象的子级或直接子代,请调用GetChild方法,此方法返回父级在指定索引处的子对象.<br>VisualTreeHelper4个常用静态方法<br>1.FindElementsInHostCoordinates 检索一组对象,这些对象位于某一对象的坐标空间的指定点或矩形内<br>2.GetChild 使用提供的索引,通过检查可视化树获取所提供对象的特定子对象<br>3.GetChildrenCount 返回在可视化树中在某一对象的子集合中存在的子级的数目.<br>4.GetParent 返回可视化树中某一对象的父对象.</p><h3 id="遍历可视化树"><a href="#遍历可视化树" class="headerlink" title="遍历可视化树"></a>遍历可视化树</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> &lt;StackPanel x:Name=<span class="string">&quot;stackPanel&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">               &lt;TextBox&gt;</span><br><span class="line">               &lt;/TextBox&gt;</span><br><span class="line">               &lt;Button Content=<span class="string">&quot;遍历&quot;</span> Click=<span class="string">&quot;Button_Click1&quot;</span>&gt;</span><br><span class="line">               &lt;/Button&gt;</span><br><span class="line">           &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">string visualTreeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 单击事件,弹出XAML页面里面StackPanel控件的可视化树的所有对象.</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       private async void Button_Click1(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           visualTreeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">           GetChildType(stackPanel);</span><br><span class="line">           MessageDialog messageDialog = new MessageDialog(visualTreeStr);</span><br><span class="line">           await messageDialog.ShowAsync();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 获取某个XAML元素的可视化对象的递归方法</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=<span class="string">&quot;stackPanel&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">       /// &lt;exception cref=<span class="string">&quot;NotImplementedException&quot;</span>&gt;&lt;/exception&gt;</span><br><span class="line">       private void GetChildType(DependencyObject reference)</span><br><span class="line">       &#123;</span><br><span class="line">           //获取子对象的个数</span><br><span class="line">           int count=VisualTreeHelper.GetChildrenCount(reference);</span><br><span class="line">           //如果子对象的个数不为0 继续递归</span><br><span class="line">           <span class="keyword">if</span> (count&gt;0)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">for</span> (int i = 0; i &lt;= VisualTreeHelper.GetChildrenCount(reference)-1; i++)</span><br><span class="line">               &#123;</span><br><span class="line">                   //获取当前节点的子对象.</span><br><span class="line">                   var child=VisualTreeHelper.GetChild(reference, i);</span><br><span class="line">                   //获取子对象的类型</span><br><span class="line">                   visualTreeStr += child.GetType().ToString() + count + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                   //递归调用</span><br><span class="line">                   GetChildType(child);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="框架和页面"><a href="#框架和页面" class="headerlink" title="框架和页面"></a>框架和页面</h3><p>Frame frmae=Window.current.Content as Frame;<br>this.Frame.Navigate(typeof(BlackPage1));</p><h3 id="页面导航"><a href="#页面导航" class="headerlink" title="页面导航"></a>页面导航</h3><p>应用的导航历史记录是一种后进先出的堆栈结构.该结构还称为后退堆栈,因为它所包含的一组页面在后退导航的堆栈结构中,最新的页面会被添加到顶部,此操作称为推送操作.删除堆栈顶部项的操作称为弹出操作.<br>还可以使用Frame类BackStack属性获取后退堆栈的项目,后退堆栈的项目为PageStackEntry类的对象.PackStackEntry类表示后退或前进导航历史记录中的一个条目.通过PageStackEntry类的Type属性和Parameter属性可以知道导航过来的Page对象的类型和参数.</p><h4 id="控件编程"><a href="#控件编程" class="headerlink" title="控件编程"></a>控件编程</h4><p>扁平化设计风格<br>系统控件基类有FrameworkElement类.Panel类,Control类.ContentControl类.和ItemControl类.所有的系统控件都派生自这5个基类.这5个基类自身之间也是派生的关系.<br>FrameworkElement类<br>Panel类 Control类<br>Control类<br>ContentControl类 ItemControl类<br>1.FrameworkElement类<br>2.Panel类<br>布局<br>3.Control类<br>表示用户界面元素的基类.这些元素使用ControlTemplate来定义其外观.ControlTemplate是控件的模板.由多个元素组成,并且可以直接由用户去定义和修改.<br>4.ContentControl类<br>Content属性<br>5.ItemsControl类.<br>ItemsControl类是派生自Control类,表示一个可用于呈现项的集合的控件.ItemsControl类本身也是一个列表控件类.或用于显示从指向某个对象的数据绑定中获取的列表.当然,ItemsControl类只是封装了列表的一些基本特性,ItemSource属性,指定为对某个对象集合的引用.</p><p>5各类别<br>1.面板控件 Pannel派生 Canvas,Grid,StackPanel,RelativePanel.<br>2.内容控件 Button,RadioButton,HyperlinkButton,CheckBox,ScrollViewer.<br><ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/><br>ContentPresenter元素用于ContentControl的Template的内部,不同的内容控件(如Button,CheckBox)会把ContentPresenter放置在控件内部不同的地方.内容控件通过给Content属性赋值就会把相关信息传递到了ContentPresenter里面进行呈现和显示.<br>3.列表控件<br>这类控件由ItemsControl类派生,经常用于显示数据的集合,包括ListBox,Pivot,ListView和GridView控件.<br>最主要的属性 Items表示生成控件内容的集合.ItemsPanel表示定义了控制项的布局的面板.ItemSource表示生成ItemsControl的内容的集合.ItemTemplate表示用于显示每个项的DataTemplate.<br>4.普通控件<br>直接派生Control类，包含TextBox,PasswordBox,ProgressBar,ScrollBar,Slider等控件.这类控件的共性特点是可以自定义或者修改其控件的数据模板,也就是说控件内部的呈现元素可以通过模板去修改.<br>5.其他控件<br>FrameworkElement TextBlock. Border.Image,MediaElement.Popup.<br>4.2 Button<br>1.Windows.UI.Controls.Button.<br>按钮控件三个状态. 分别是按下状态(Press),悬停状态(Hover),释放状态(Release) 通过设置按钮控件的ClickMode属性来控制按钮在哪种状态下才执行Clcik事件.<br>2.文字的相关属性<br>Win10内置的SymbolIcon图形作为Content属性.在Visual Studio里面打开按钮属性窗口.<br>选择Symbol的图形就可以看到一系列扁平化的图标图形.<br>TextBox<br>如需支持Enter换行 需要把AcceptsReturn设为true.<br>通过InputScope属性来设置在控件输入信息所提供的键盘类型,比如TextBox只是要求用户输入手机号,<br>设置InputScope=”TelephoneNumber”来制定电话号码的输入键盘.可以通过枚举值InputScopeNameValue来看到所有的键盘类型,包括EmailSmtpAddress,Url,Number等.<br>textBox1.InputScope=new InputScope();<br>textBox1.InputScope.Names.Add(new InputScopeName(){NameValue=InputScopeNameValue.TelephoneLocalNumber});<br>3.控件头<br>Header 请输入用户名<br>4.5边框 Border<br>边框是指在另一个对象周围绘制边框,背景或同时绘制二者的控件.<br>4.6 超链接<br>&lt;HyperlinkButton …/&gt; 或 <HyperlinkButton>内容</HyperlinkButton>                <HyperlinkButton Content="Google" NavigateUri="http://goole.com"/><br>4.7 单选按钮<br>4.9 ProgressBar<br>重复模式 非重复模式 IsIndeterminate true 重复 默认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextBlock Text=<span class="string">&quot;选择ProgressBar的类型:&quot;</span>/&gt;</span><br><span class="line">                &lt;RadioButton Content=<span class="string">&quot;Determinate类型&quot;</span> Height=<span class="string">&quot;71&quot;</span> Name=<span class="string">&quot;radioButton1&quot;</span> GroupName=<span class="string">&quot;Type&quot;</span>/&gt;</span><br><span class="line">                &lt;RadioButton Content=<span class="string">&quot;Indeterminate类型&quot;</span> Height=<span class="string">&quot;71&quot;</span> Name=<span class="string">&quot;radioButton2&quot;</span> GroupName=<span class="string">&quot;Type&quot;</span> IsChecked=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;启动ProgressBar&quot;</span> Height=<span class="string">&quot;72&quot;</span> x:Name=<span class="string">&quot;begin&quot;</span> Click=<span class="string">&quot;begin_Click&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;取消ProgressBar&quot;</span> Height=<span class="string">&quot;72&quot;</span> x:Name=<span class="string">&quot;cancel&quot;</span> Click=<span class="string">&quot;cancel_Click&quot;</span>/&gt;</span><br><span class="line">                &lt;ProgressBar x:Name=<span class="string">&quot;progressBar1&quot;</span> IsIndeterminate=<span class="string">&quot;True&quot;</span>/&gt; </span><br><span class="line"></span><br><span class="line">  private void cancel_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //隐藏进度条</span><br><span class="line">            progressBar1.Visibility= Visibility.Collapsed;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void begin_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //设置进度条为可见</span><br><span class="line">            progressBar1.Visibility = Visibility.Visible;</span><br><span class="line">            <span class="keyword">if</span> (radioButton1.IsChecked==<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                //设置进度条为不可重复模式</span><br><span class="line">                progressBar1.IsIndeterminate = <span class="literal">false</span>;</span><br><span class="line">                //使用一个定时器,每一秒钟触发以下进度的改变</span><br><span class="line">                DispatcherTimer timer= new DispatcherTimer();</span><br><span class="line">                timer.Interval = TimeSpan.FromSeconds(1);</span><br><span class="line">                timer.Tick += Timer_Tick;</span><br><span class="line">                timer.Start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                //设置进度条的值为0</span><br><span class="line">                progressBar1.Value = 0;</span><br><span class="line">                //设置进度条为重复模式</span><br><span class="line">                progressBar1.IsIndeterminate=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //定时器的定时触发的事件处理</span><br><span class="line">        private async void Timer_Tick(object sender, object e)</span><br><span class="line">        &#123;</span><br><span class="line">            //如果进度没有到达100则在原来的进度基础上再增加10</span><br><span class="line">            <span class="keyword">if</span> (progressBar1.Value&lt;100)</span><br><span class="line">            &#123;</span><br><span class="line">                progressBar1.Value += 10;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                //进度完成</span><br><span class="line">                (sender as DispatcherTimer).Tick-= Timer_Tick;</span><br><span class="line">                //停止定时器的运行</span><br><span class="line">                (sender as DispatcherTimer).Stop();</span><br><span class="line">                await new MessageDialog(<span class="string">&quot;进度完成&quot;</span>).ShowAsync();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4.10 滚动视图(ScrollViewer)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScrollViewer Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span> VerticalScrollBarVisibility=<span class="string">&quot;Auto&quot;</span> HorizontalScrollBarVisibility=<span class="string">&quot;Auto&quot;</span>&gt;</span><br><span class="line">                   &lt;ScrollViewer.Content&gt;</span><br><span class="line">                       &lt;StackPanel&gt;</span><br><span class="line">                           &lt;Image Source=<span class="string">&quot;/Assets/StoreLogo.png&quot;</span>/&gt;</span><br><span class="line">                       &lt;/StackPanel&gt;</span><br><span class="line">                   &lt;/ScrollViewer.Content&gt;</span><br><span class="line">               &lt;/ScrollViewer&gt;</span><br><span class="line"></span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;ScrollViewer Name=<span class="string">&quot;scrollViewer1&quot;</span> VerticalScrollBarVisibility=<span class="string">&quot;Hidden&quot;</span> Height=<span class="string">&quot;300&quot;</span>&gt;</span><br><span class="line">                       &lt;StackPanel Name=<span class="string">&quot;stkpnImage&quot;</span>/&gt;</span><br><span class="line">                   &lt;/ScrollViewer&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;往上&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Click=<span class="string">&quot;btnUp_Click&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;往下&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Click=<span class="string">&quot;btnDown_Click&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;停止&quot;</span> FontSize=<span class="string">&quot;30&quot;</span></span><br><span class="line">                           Click=<span class="string">&quot;stop_Click&quot;</span>/&gt;</span><br><span class="line">                      //添加图片到ScrollViewer里面的StackPanel中.</span><br><span class="line">           <span class="keyword">for</span> (int i = 0; i &lt;=30; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               Image imgItem = new Image();</span><br><span class="line">               imgItem.Width = 200;</span><br><span class="line">               imgItem.Height = 200;</span><br><span class="line">               //4张图片循环添加到StackPanel的子节点上</span><br><span class="line">               <span class="keyword">if</span> (i % 4 == 0)</span><br><span class="line">               &#123;</span><br><span class="line">                   imgItem.Source = (new BitmapImage(new Uri(<span class="string">&quot;a.jpg&quot;</span>, UriKind.RelativeOrAbsolute)));</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (i % 4 == 1)</span><br><span class="line">               &#123;</span><br><span class="line">                   imgItem.Source = (new BitmapImage(new Uri(<span class="string">&quot;b.jpg&quot;</span>, UriKind.RelativeOrAbsolute)));</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (i % 4 == 2)</span><br><span class="line">               &#123;</span><br><span class="line">                   imgItem.Source = (new BitmapImage(new Uri(<span class="string">&quot;c.jpg&quot;</span>, UriKind.RelativeOrAbsolute)));</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (i % 4 == 3) &#123;</span><br><span class="line">                   imgItem.Source = (new BitmapImage(new Uri(<span class="string">&quot;d.jpg&quot;</span>, UriKind.RelativeOrAbsolute)));</span><br><span class="line">               &#125;;</span><br><span class="line">               this.stkpnImage.Children.Add(imgItem);</span><br><span class="line">           &#125;</span><br><span class="line">           //初始化tmrDown定时触发器</span><br><span class="line">           tmrDowm = new DispatcherTimer();</span><br><span class="line">           //每500毫秒跑一次</span><br><span class="line">           tmrDowm.Interval=new TimeSpan(500);</span><br><span class="line">           //加入每次tick的事件</span><br><span class="line">           tmrDowm.Tick += TmrDowm_Tick;</span><br><span class="line">           //初始化tmrUp定时触发器</span><br><span class="line">           tmrUp=new DispatcherTimer();</span><br><span class="line">           tmrUp.Interval=new TimeSpan(500);</span><br><span class="line">           tmrUp.Tick += TmrUp_Tick;</span><br><span class="line"></span><br><span class="line">private DispatcherTimer tmrDowm;</span><br><span class="line">       //往上滚动的定时触发器</span><br><span class="line">       private DispatcherTimer tmrUp;</span><br><span class="line">       //往上按钮事件</span><br><span class="line">       private void btnUp_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           tmrDowm.Stop();</span><br><span class="line">           tmrUp.Start();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void TmrUp_Tick(object sender, object e)</span><br><span class="line">       &#123;</span><br><span class="line">           //将VerticalOffset-10将出现图片将往上滚动的效果</span><br><span class="line">           scrollViewer1.ChangeView(0,scrollViewer1.VerticalOffset-10,0);</span><br><span class="line">       &#125;</span><br><span class="line">       private void TmrDowm_Tick(object sender, object e)</span><br><span class="line">       &#123;</span><br><span class="line">           //先停止往上的定时触发器</span><br><span class="line">           tmrUp.Stop();</span><br><span class="line">           //将VerticalOffset+10将出现图片往下滚动的效果</span><br><span class="line">           scrollViewer1.ChangeView(0, scrollViewer1.VerticalOffset + 10, 0);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void btnDown_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           tmrUp.Stop();</span><br><span class="line">           tmrDowm.Start();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void stop_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           tmrDowm.Stop();</span><br><span class="line">           tmrUp.Stop();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>4.11.Slider</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> &lt;StackPanel Grid.Row=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">            &lt;Grid Name=<span class="string">&quot;controlGrid&quot;</span>&gt;</span><br><span class="line">                &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">                    &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;ColumnDefinition Width=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">                &lt;!--设置红色--&gt;</span><br><span class="line">                &lt;TextBlock Text=<span class="string">&quot;红色&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;Slider x:Name=<span class="string">&quot;redSlider&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span></span><br><span class="line">                        ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock x:Name=<span class="string">&quot;redText&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;0&quot;</span> Foreground=<span class="string">&quot;Red&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;!--设置绿色--&gt;</span><br><span class="line">                &lt;TextBlock Grid.Column=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;绿色&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;Slider x:Name=<span class="string">&quot;greenSlider&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span> ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>&gt;&lt;/Slider&gt;</span><br><span class="line">                &lt;TextBlock x:Name=<span class="string">&quot;greenText&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;!--设置蓝色--&gt;</span><br><span class="line">                &lt;TextBlock Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;0&quot;</span> Text=<span class="string">&quot;蓝色&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                &lt;Slider x:Name=<span class="string">&quot;blueSlider&quot;</span> Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> Minimum=<span class="string">&quot;0&quot;</span> Maximum=<span class="string">&quot;255&quot;</span> ValueChanged=<span class="string">&quot;redSlider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                &lt;TextBlock x:Name=<span class="string">&quot;blueText&quot;</span> Grid.Column=<span class="string">&quot;2&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;0&quot;</span> Foreground=<span class="string">&quot;Blue&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">                </span><br><span class="line">                &lt;!--设置--&gt;</span><br><span class="line">            &lt;/Grid&gt;</span><br><span class="line">            &lt;Ellipse Height=<span class="string">&quot;100&quot;</span> x:Name=<span class="string">&quot;ellipse1&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span> StrokeThickness=<span class="string">&quot;1&quot;</span> Width=<span class="string">&quot;224&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;textBlockColor&quot;</span> Text=<span class="string">&quot;颜色&quot;</span> FontSize=<span class="string">&quot;26&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">//三个Slider控件的初始值</span><br><span class="line">            redSlider.Value = 128;</span><br><span class="line">            greenSlider.Value= 128;</span><br><span class="line">            blueSlider.Value= 128;</span><br><span class="line">            <span class="keyword">if</span> (App.IsHardwareButtonsAPIPresent)</span><br><span class="line">            &#123;</span><br><span class="line">                backButton.Visibility = Visibility.Collapsed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                backButton.Visibility = Visibility.Visible;</span><br><span class="line">            &#125;</span><br><span class="line"> private void redSlider_ValueChanged(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //</span><br><span class="line">            Color clr = Color.FromArgb(255,(byte)redSlider.Value,(byte)greenSlider.Value,(byte)blueSlider.Value);</span><br><span class="line">            //将三种颜色的混合色设置为ellipse1的填充颜色</span><br><span class="line">            ellipse1.Fill = new SolidColorBrush(clr);</span><br><span class="line">            textBlockColor.Text = clr.ToString();</span><br><span class="line">            redText.Text = clr.R.ToString(<span class="string">&quot;X2&quot;</span>);</span><br><span class="line">            greenText.Text = clr.G.ToString(<span class="string">&quot;X2&quot;</span>);</span><br><span class="line">            blueText.Text = clr.B.ToString(<span class="string">&quot;X2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.12 时间选择器和日期选择器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;StackPanel Grid.Row=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">            &lt;TimePicker x:Name=<span class="string">&quot;time&quot;</span> Header=<span class="string">&quot;请选择时间:&quot;</span> TimeChanged=<span class="string">&quot;time_TimeChanged&quot;</span>/&gt;</span><br><span class="line">            &lt;DatePicker x:Name=<span class="string">&quot;date&quot;</span> Header=<span class="string">&quot;请选择日期:&quot;</span></span><br><span class="line">                        DateChanged=<span class="string">&quot;date_DateChanged&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=<span class="string">&quot;info&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> TextWrapping=<span class="string">&quot;Wrap&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">  ///DatePicker TimePicker</span><br><span class="line">            //控件默认的时间和日期是设备当前的时间和日期</span><br><span class="line">            info.Text = $<span class="string">&quot;时间:&#123;time.Time.ToString()&#125; 日期:&#123;date.Date.ToString()&#125;&quot;</span>;</span><br><span class="line">private void time_TimeChanged(object sender, TimePickerValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Text = $<span class="string">&quot;时间改变为:&#123;time.Time&#125; 日期:&#123;date.Date&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// </span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void date_DateChanged(object sender, DatePickerValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Text = $<span class="string">&quot;时间:&#123;time.Time&#125; 日期改变为:&#123;date.Date&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4.13 枢轴控件(Pivot)<br>枢轴控件Pivot提供了一种快捷的方式来管理应用中的视图或页面,通过一种类似页签的方式来将视图分类,这样就可以在一个界面上通过切换页签来浏览多个数据集,或者切换应用视图.枢轴控件水平放置独立的视图,同时处理左侧和右侧的导航,在触摸屏上可以通过划动或者平移手势来切换枢轴控件中的视图,同时处理左侧和右侧的导航,在触摸屏上通过划动或平移手势来切换枢轴控件中的视图.语法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Pivot&gt;</span><br><span class="line">&lt;PivotItem&gt;</span><br><span class="line">&lt;!--UI内容--&gt;</span><br><span class="line">&lt;/PivotItem&gt;</span><br><span class="line">&lt;PivotItem&gt;</span><br><span class="line">&lt;!--UI内容--&gt;</span><br><span class="line">&lt;/PivotItem&gt;</span><br><span class="line">&lt;/Pivot&gt;</span><br></pre></td></tr></table></figure><p>Pivot分两部分 标题 内容<br>1.标题 通过Title设置 PivotItem Header 富文本信息<br>2.内容 SelectionChanged SelectedIndex SelectedItem 可以获取到当前选中的页签索引和对象<br>4.14 全景视图控件(Hub)<br>全景视图控件Hub是Win10中独特的视图控件,给用户提供一种纵向拉伸延长的效果,提供了独特显示控件,数据，服务的方式.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Hub&gt;</span><br><span class="line">&lt;HubSection&gt;</span><br><span class="line">&lt;HubSection.ContentTemplate&gt;</span><br><span class="line">&lt;DateTemplate&gt;</span><br><span class="line">&lt;!--UI内容--&gt;</span><br><span class="line">&lt;/DateTemplate&gt;</span><br><span class="line">&lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">&lt;/hubSection&gt;</span><br><span class="line">&lt;HubSection Header=<span class="string">&quot;second item&quot;</span>&gt;</span><br><span class="line">&lt;HubSection.ContentTemplate&gt;</span><br><span class="line">&lt;DataTemplate&gt;</span><br><span class="line">&lt;!--UI内容--&gt;</span><br><span class="line">&lt;/DataTemplate&gt;</span><br><span class="line">&lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">&lt;/Hub&gt;</span><br></pre></td></tr></table></figure><p>Hub控件和Pivot控件是同一类型的控件,都是使用页签的方式来组织页面的内容,不过这两个控件的交互效果却不太一样<br>在使用Hub控件时通常会关注Hub控件的三个部分,背景,全景背景,全景区域.<br>背景是Hub控件包装下的整个应用程序的背景,位于全景应用的最底层,这个背景会铺满整个设备屏幕.<br>背景通常是一张全景图,他可能是应用程序最直观的部分,也可以不设置.全景标题与全景区域跟Pivot控件的作用类似.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--在大标题上添加程序的图标--&gt;            </span><br><span class="line">                  &lt;Hub&gt;</span><br><span class="line">                      &lt;Hub.Header&gt;</span><br><span class="line">                          &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                              &lt;Image Source=<span class="string">&quot;Assets/StoreLogo.scale-100.png&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                              &lt;TextBlock Text=<span class="string">&quot;My App&quot;</span>/&gt;</span><br><span class="line">                          &lt;/StackPanel&gt;</span><br><span class="line">                      &lt;/Hub.Header&gt;</span><br><span class="line">                      &lt;HubSection Header=<span class="string">&quot;first item&quot;</span>&gt;</span><br><span class="line">                          &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                              &lt;DataTemplate&gt;</span><br><span class="line">                                  &lt;StackPanel&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;第一个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;这是第一个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                  &lt;/StackPanel&gt;</span><br><span class="line">                              &lt;/DataTemplate&gt;</span><br><span class="line">                          &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                      &lt;/HubSection&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;HubSection Header=<span class="string">&quot;second item&quot;</span>&gt;</span><br><span class="line">                          &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                              &lt;DataTemplate&gt;</span><br><span class="line">                                  &lt;StackPanel&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;第二个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;这是第二个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                  &lt;/StackPanel&gt;</span><br><span class="line">                              &lt;/DataTemplate&gt;</span><br><span class="line">                          &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                      &lt;/HubSection&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;HubSection Header=<span class="string">&quot;Third item&quot;</span>&gt;</span><br><span class="line">                          &lt;HubSection.ContentTemplate&gt;</span><br><span class="line">                              &lt;DataTemplate&gt;</span><br><span class="line">                                  &lt;StackPanel&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;第三个Item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                      &lt;TextBlock Text=<span class="string">&quot;这是第三个item&quot;</span> FontSize=<span class="string">&quot;50&quot;</span>/&gt;</span><br><span class="line">                                  &lt;/StackPanel&gt;</span><br><span class="line">                              &lt;/DataTemplate&gt;</span><br><span class="line">                          &lt;/HubSection.ContentTemplate&gt;</span><br><span class="line">                      &lt;/HubSection&gt;</span><br><span class="line">                  &lt;/Hub&gt;</span><br></pre></td></tr></table></figure><p>4.15 浮出控件(Flyout)<br>浮出控件(Flyout)是一个轻型的辅助型的弹出控件,通常作为提示或者要求用户进行相关的交互来使用.<br>Flyout控件与Win10里面的弹出框MessageDialog有很大区别.Flyout控件是一个辅助控件,需要与其他控件组合起来才能使用.其次,取消的规则不一样,Flyout控件收集用户输入,显示与某个项目相关的更多信息或者要求用户确认某个操作,只有当为了相应用户点击时才应显示Flyout控件,也就是说Flyout控件并不是直接显示出来,而是需要用户操作才能呈现出来,当用户在弹出窗口外部点击时,Flyout控件就会消失,这也是Flyout控件默认的关闭规则.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button&gt;</span><br><span class="line">&lt;Button.Flyout&gt;</span><br><span class="line">&lt;Flyout&gt;</span><br><span class="line">&lt;!--浮出的UI内容--&gt;</span><br><span class="line">&lt;/Flyout&gt;</span><br><span class="line">&lt;/Button.Flyout&gt;</span><br><span class="line">&lt;/Button&gt;</span><br></pre></td></tr></table></figure><p>非Button控件也一样可以使用Flyout控件,也可以使用FlyoutBase.AttachedFlyout附加属性,将Flyout控件附加到任何FrameworkElement对象.因为Flyout控件必须要响应相应某个用户的操作,Button控件默认关联到了Clcik事件,如果用FlyoutBase.AttachedFlyout附加属性来添加Flyout控件就必须相应FrameworkElement控件上的交互,并在代码中打开Flyout控件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextBlock text=<span class="string">&quot;Tapped事件触发Flyout&quot;</span> Tapped=<span class="string">&quot;Textblock_Tapped&quot;</span>&gt;</span><br><span class="line">&lt;FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">&lt;Flyout&gt;</span><br><span class="line">&lt;!--浮出的UI内容--&gt;</span><br><span class="line">&lt;/Flyout&gt;</span><br><span class="line">&lt;/FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">&lt;/TextBlock&gt;</span><br><span class="line">private void TextBlock_Tapped(object sender,TappedRoutedEventArgs e)&#123;</span><br><span class="line">FrameworkElement element=sender as FrameworkElement;</span><br><span class="line"><span class="keyword">if</span>(element!=null)&#123;</span><br><span class="line">FlyoutBase.ShowAttachedFlyout(element);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Flyout有两种创建方式,一种方式 Button Flyout 添加 2.通过FlyoutBase.AttachedFlyout附加属性给任何FrameworkElement对象来添加,在Win10上Flyout控件一共有6种不同的类型,Flyout,DatePickerFlyout,TimePickerFlyout,PickerFlyout,ListPickerFlyout和MenuFlyout.<br>1.Flyout<br>Flyout类型表示处理自定义浮出窗口,Flyout控件经常使用的事件是Closed,Opened和Opening,分别表示在关闭,已打开,正在打开,在实际种在Closed事件获取用户操作结果.这三种事件也是其他共性<br>2.DatePickerFlyout TimerPickerFlyout<br>3,PickerFlyout ListPickerFlyout<br>PickerFlyout表示选择的浮出窗口,可以在页面底下添加确认的菜单栏用于用户确认;<br>ListPickerFlyout表示列表形式展示的浮出窗口,需要通过集合数据绑定来呈现列表的选择.<br>与其他区别是提供了选中确认的时间,分别是PickerFlyout对应的Confirmed事件和ListPickerFlyout对应的ItemsPicked事件.ListPickerFlyout需要通过数据绑定来实现选择的列表<br>4.MenuFlyout<br>MenuFlyout表示上下文菜单的选择浮出窗口,一个MenuFlyout会包含若干个MenuFlyoutItem.<br>每个MenuFlyoutItem表示一个选项,用户可以单击,同时通过MenuFlyoutItem的Click事件来处理单击请求.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"> &lt;PivotItem Header=<span class="string">&quot;Flyout&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show Flyout&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;Flyout&gt;</span><br><span class="line">                                &lt;StackPanel&gt;</span><br><span class="line">                                    &lt;TextBox PlaceholderText=<span class="string">&quot;Please Enter Name.&quot;</span>/&gt;</span><br><span class="line">                                    &lt;Button HorizontalAlignment=<span class="string">&quot;Right&quot;</span> Content=<span class="string">&quot;确定&quot;</span>/&gt;</span><br><span class="line">                                &lt;/StackPanel&gt;</span><br><span class="line">                            &lt;/Flyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出上下文菜单,点击菜单后改变当前按钮上的文本内容--&gt;</span><br><span class="line">                    &lt;Button x:Name=<span class="string">&quot;menuFlyoutButton&quot;</span> Content=<span class="string">&quot;Show MenuFlyout&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;MenuFlyout&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 1&quot;</span> Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 2&quot;</span></span><br><span class="line">                                                Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                                &lt;MenuFlyoutItem Text=<span class="string">&quot;Option 3&quot;</span> Click=<span class="string">&quot;MenuFlyoutItem_Click&quot;</span>/&gt;</span><br><span class="line">                            &lt;/MenuFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;!--浮出选择日期弹窗,点击确认后触发DatePicked事件,然后可以获取选中的日期--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show DatePicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;DatePickerFlyout DatePicked=<span class="string">&quot;DatePickerFlyout_DatePicked&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出选择时间弹窗,点击确认后触发DatePicked事件,然后可以获取选中的时间--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show TimePicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;TimePickerFlyout TimePicked=<span class="string">&quot;TimePickerFlyout_TimePicked&quot;</span>/&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--浮出选择弹窗,显示底下的确认取消菜单栏并且处理其确认事件Confirmed--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show Picker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;PickerFlyout Confirmed=<span class="string">&quot;PickerFlyout_Confirmed&quot;</span></span><br><span class="line">                                          ConfirmationButtonsVisible=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock Text=<span class="string">&quot;你确定吗？？？？？&quot;</span> FontSize=<span class="string">&quot;30&quot;</span> Margin=<span class="string">&quot;0 100 0 0&quot;</span>/&gt;</span><br><span class="line">                            &lt;/PickerFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">&lt;!--浮出选择列表弹窗,绑定集合的数据,处理选中的事件ItemsPicked--&gt;</span><br><span class="line">                    &lt;Button Content=<span class="string">&quot;Show DataPicker&quot;</span>&gt;</span><br><span class="line">                        &lt;Button.Flyout&gt;</span><br><span class="line">                            &lt;ListPickerFlyout x:Name=<span class="string">&quot;listPickerFlyout&quot;</span> Title=<span class="string">&quot;Select Mobile Tag：&quot;</span> ItemsPicked=<span class="string">&quot;listPickerFlyout_ItemsPicked&quot;</span>&gt;</span><br><span class="line">                                &lt;ListPickerFlyout.ItemTemplate&gt;</span><br><span class="line">                                    &lt;DataTemplate&gt;</span><br><span class="line">                                        &lt;TextBlock Text=<span class="string">&quot;&#123;Binding&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                        </span><br><span class="line">                                    &lt;/DataTemplate&gt;</span><br><span class="line">                                &lt;/ListPickerFlyout.ItemTemplate&gt;</span><br><span class="line">                            &lt;/ListPickerFlyout&gt;</span><br><span class="line">                        &lt;/Button.Flyout&gt;</span><br><span class="line">                    &lt;/Button&gt;</span><br><span class="line">                    &lt;!--使用附加属性FlyoutBase.AttachedFlyout来实现Flyout控件--&gt;</span><br><span class="line">                    &lt;TextBlock Text=<span class="string">&quot;Please Click Me!&quot;</span> Tapped=<span class="string">&quot;TextBlock_Tapped&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>&gt;</span><br><span class="line">                        &lt;FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">                            &lt;Flyout&gt;</span><br><span class="line">                                &lt;TextBox Text=<span class="string">&quot;你好!&quot;</span>&gt;</span><br><span class="line">                                    </span><br><span class="line">                                    &lt;/TextBox&gt;</span><br><span class="line">                                &lt;/Flyout&gt;</span><br><span class="line">                            &lt;/FlyoutBase.AttachedFlyout&gt;</span><br><span class="line">                    &lt;/TextBlock&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> //Flyout</span><br><span class="line">            //绑定ListPickerFlyout数据源</span><br><span class="line">            listPickerFlyout.ItemsSource = new List&lt;string&gt; &#123; <span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Honor&quot;</span>, <span class="string">&quot;RedMi&quot;</span>, <span class="string">&quot;TSD&quot;</span>,<span class="string">&quot;HTC&quot;</span> &#125;;</span><br><span class="line">   private void MenuFlyoutItem_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            menuFlyoutButton.Content = (sender as MenuFlyoutItem).Text;</span><br><span class="line">        &#125;</span><br><span class="line">        //ListPickerFlyout的选中事件，点击列表的某一项便会触发,在事件处理程序中通常会获取选中的项目来进行相关逻辑的处理.</span><br><span class="line">        private async void listPickerFlyout_ItemsPicked(ListPickerFlyout sender, ItemsPickedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sender.SelectedItem!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                await new MessageDialog($<span class="string">&quot;你选择的是:&#123;sender.SelectedItem.ToString()&#125;&quot;</span>).ShowAsync();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void DatePickerFlyout_DatePicked(DatePickerFlyout sender, DatePickedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            await new MessageDialog(args.NewDate.ToString()).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line">        // TimerPickerFlyout 时间选中事件,在事件处理程序里可以获取选中的时间</span><br><span class="line">        private async void TimePickerFlyout_TimePicked(TimePickerFlyout sender, TimePickedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            await new MessageDialog(args.NewTime.ToString()).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private async void PickerFlyout_Confirmed(PickerFlyout sender, PickerConfirmedEventArgs args)</span><br><span class="line">        &#123;</span><br><span class="line">            await new MessageDialog(<span class="string">&quot;你点击了确定&quot;</span>).ShowAsync();</span><br><span class="line">        &#125;</span><br><span class="line">        // 通过Flyoutase.ShowAttachedFlyout方法来展示Flyout控件</span><br><span class="line">        private void TextBlock_Tapped(object sender, TappedRoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            FrameworkElement element= sender as FrameworkElement;</span><br><span class="line">            <span class="keyword">if</span> (element!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                FlyoutBase.ShowAttachedFlyout(element);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4.16 ComboBox<br>对ComboBox控件下拉数据进行绑定,可以通过ItemTemplate设置选项的模板和绑定的属性,然后再绑定数据源.<br>常用事件:DropDownOpened(下拉框打开时触发的事件) DropDownClosed(下拉框关闭时触发的事件)<br>再选中选项后关闭菜单,获取选中选项.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;StackPanel&gt;</span><br><span class="line">                  &lt;!--纯文本的下拉框--&gt;</span><br><span class="line">                  &lt;ComboBox Header=<span class="string">&quot;Colors&quot;</span> PlaceholderText=<span class="string">&quot;Pick a Color&quot;</span>&gt;</span><br><span class="line">                      &lt;x:String&gt;</span><br><span class="line">                          Blue</span><br><span class="line">                      &lt;/x:String&gt;</span><br><span class="line">                      &lt;x:String&gt;</span><br><span class="line">                          Green</span><br><span class="line">                      &lt;/x:String&gt;</span><br><span class="line">                      &lt;x:String&gt;</span><br><span class="line">                          Red</span><br><span class="line">                      &lt;/x:String&gt;</span><br><span class="line">                      &lt;x:String&gt;</span><br><span class="line">                          Yellow</span><br><span class="line">                      &lt;/x:String&gt;</span><br><span class="line">                  &lt;/ComboBox&gt;</span><br><span class="line">                  &lt;!--数据绑定的下拉框--&gt;</span><br><span class="line">                  &lt;ComboBox x:Name=<span class="string">&quot;comboBox2&quot;</span> DropDownClosed=<span class="string">&quot;comboBox2_DropDownClosed&quot;</span>&gt;</span><br><span class="line">                      &lt;ComboBox.ItemTemplate&gt;</span><br><span class="line">                          &lt;DataTemplate&gt;</span><br><span class="line">                              &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span>&gt;</span><br><span class="line">                                  &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Name&#125;&quot;</span> FontSize=<span class="string">&quot;30&quot;</span>/&gt;</span><br><span class="line">                                  &lt;TextBlock Text=<span class="string">&quot;&#123;Binding Age&#125;&quot;</span> Margin=<span class="string">&quot;50 10 0 0&quot;</span>/&gt;</span><br><span class="line">                              &lt;/StackPanel&gt;</span><br><span class="line">                          &lt;/DataTemplate&gt;</span><br><span class="line">                      &lt;/ComboBox.ItemTemplate&gt;</span><br><span class="line">                  &lt;/ComboBox&gt;</span><br><span class="line">                  </span><br><span class="line">                 &lt;!--数据绑定的下拉框关闭后,这里显示选中的选项的信息--&gt;</span><br><span class="line">                  &lt;TextBlock x:Name=<span class="string">&quot;Info&quot;</span> FontSize=<span class="string">&quot;20&quot;</span>/&gt;</span><br><span class="line">              &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">private void comboBox2_DropDownClosed(object sender, object e)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (comboBox2.SelectedItem!=null)</span><br><span class="line">          &#123;</span><br><span class="line">              Man man = comboBox2.SelectedItem as Man;</span><br><span class="line">              Info.Text = $<span class="string">&quot;name:&#123;man.Name&#125; age:&#123;man.Age&#125;&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>4.17 命令栏/菜单栏(CommandBar)<br>命令栏(CommandBar)也是程序中的菜单栏控件,win10中可以作为底部的菜单栏来使用.<br>Page页面的BottomAppBar属性表示页面的底部菜单栏,这个菜单栏必须是CommandBar控件类型,所以CommandBar控件通常都用在页面的底部菜单栏上,菜单栏有两种类型的按钮:一种是图形的图形按钮,另一种是文字的菜单按钮,这两种按钮都是使用AppBarButton控件来表示,只不过文字的菜单按钮需要放在CommandBar控件的SecondaryCommands属性上.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page.BottomAppBar&gt;</span><br><span class="line">&lt;CommandBar&gt;</span><br><span class="line">&lt;AppBarButton/&gt;</span><br><span class="line"></span><br><span class="line">&lt;CommandBar.SecondaryCommands&gt;</span><br><span class="line">&lt;AppBarButton/&gt;</span><br><span class="line">&lt;/CommandBar.SecondaryCommands&gt;</span><br><span class="line">&lt;/CommandBar&gt;</span><br><span class="line">&lt;/Page.BottomAppBar&gt;</span><br></pre></td></tr></table></figure><p>对于CommandBar里面的应用栏按钮控件AppBarButton,通常需要设置其Label和Icon属性用于定义应用栏按钮的内容,除此之外,AppBarButton控件可以作为一种图形的图形按钮单独使用,Label属性属于设置按钮的文本标签,Icon属性用于设置按钮的图形,图形的图标可以使用以下4种类型:<br>1.FontIcon:图标基于来自指定字体系列的字型<br>2.BitmapIcon:图标基于带指定URI的位图图像文件<br>3.PathIcon:图标基于Path数据.<br>4.SymbolIcon:图标基于来自Segoe UI Symbol字体的字型预定义列表.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page.BottomAppBar&gt;</span><br><span class="line">        &lt;CommandBar Opened=<span class="string">&quot;CommandBar_Opened&quot;</span> Closed=<span class="string">&quot;CommandBar_Closed&quot;</span>&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;buy&quot;</span> Icon=<span class="string">&quot;Shop&quot;</span>/&gt;</span><br><span class="line">            &lt;!--BitmapIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;BitmapIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;BitmapIcon UriSource=<span class="string">&quot;ms-appx:///Assets/questionmark.png&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--FontIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;FontIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;FontIcon FontFamily=<span class="string">&quot;Candara&quot;</span> Glyph=<span class="string">&quot;&amp;#x03a3;&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--PathIcon图标按钮--&gt;</span><br><span class="line">            &lt;AppBarButton Label=<span class="string">&quot;PathIcon&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>&gt;</span><br><span class="line">                &lt;AppBarButton.Icon&gt;</span><br><span class="line">                    &lt;PathIcon Data=<span class="string">&quot;F1 M 20,20L 24,10L 24,24L 5,24&quot;</span>/&gt;</span><br><span class="line">                &lt;/AppBarButton.Icon&gt;</span><br><span class="line">            &lt;/AppBarButton&gt;</span><br><span class="line">            &lt;!--文本菜单按钮--&gt;</span><br><span class="line">            &lt;CommandBar.SecondaryCommands&gt;</span><br><span class="line">                &lt;AppBarButton Label=<span class="string">&quot;about&quot;</span> Click=<span class="string">&quot;AppBarButton_Click&quot;</span>/&gt;</span><br><span class="line">            &lt;/CommandBar.SecondaryCommands&gt;</span><br><span class="line">        &lt;/CommandBar&gt;</span><br><span class="line">    &lt;/Page.BottomAppBar&gt;</span><br><span class="line"></span><br><span class="line"> private void CommandBar_Opened(object sender, object e)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Text = <span class="string">&quot;The CommmandBar is Opened&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void CommandBar_Closed(object sender, object e)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Text = <span class="string">&quot;The CommandBar is Closed&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void AppBarButton_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            info.Text = $<span class="string">&quot;单击了菜单栏:&#123;(sender as AppBarButton).Label&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4.18 分屏控件(SPlitView)<br>SplitView是Win10通用应用程序推荐的交互控件,通常和一个汉堡按钮搭配作为一种抽屉式菜单来进行呈现.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;SplitView&gt;</span><br><span class="line">&lt;SplitView.Pane&gt;</span><br><span class="line">...菜单面板的内容</span><br><span class="line">&lt;/SplitView.Pane&gt;</span><br><span class="line">...主体内容</span><br><span class="line">&lt;/SplitView&gt;</span><br></pre></td></tr></table></figure><p>菜单面板是通过Pane属性来进行赋值,并且通过IsPaneOpen属性来控制打开和关闭状态.true表示打开,false表示关闭,当菜单关闭时,页面将全部显示SplitView的主体内容,主题内容为Content属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;SplitView&quot;</span>&gt;</span><br><span class="line">               &lt;Grid Background=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span><br><span class="line">                   &lt;ToggleButton Click=<span class="string">&quot;ToggleButton_Click&quot;</span> VerticalAlignment=<span class="string">&quot;Top&quot;</span> Foreground=<span class="string">&quot;Green&quot;</span>&gt;</span><br><span class="line">                       &lt;ToggleButton.Content&gt;</span><br><span class="line">                           &lt;Border Background=<span class="string">&quot;Transparent&quot;</span> Width=<span class="string">&quot;40&quot;</span> Height=<span class="string">&quot;40&quot;</span>&gt;</span><br><span class="line">                               &lt;FontIcon x:Name=<span class="string">&quot;hamburger&quot;</span> FontFamily=<span class="string">&quot;Segoe MDL2 Assets&quot;</span> Glyph=<span class="string">&quot;&amp;#xE700;&quot;</span>/&gt;</span><br><span class="line">                               </span><br><span class="line">                           &lt;/Border&gt;</span><br><span class="line">                       &lt;/ToggleButton.Content&gt;</span><br><span class="line">                   &lt;/ToggleButton&gt;</span><br><span class="line">                   &lt;SplitView x:Name=<span class="string">&quot;Splitter&quot;</span> IsPaneOpen=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                       &lt;SplitView.Pane&gt;</span><br><span class="line">                           &lt;StackPanel VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                               &lt;Button Content=<span class="string">&quot;菜单1&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                               &lt;Button Content=<span class="string">&quot;菜单2&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                               &lt;Button Content=<span class="string">&quot;菜单3&quot;</span></span><br><span class="line">                                       Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                               &lt;Button Content=<span class="string">&quot;菜单4&quot;</span> Click=<span class="string">&quot;Button_Click_1&quot;</span>/&gt;</span><br><span class="line">                           &lt;/StackPanel&gt;</span><br><span class="line">                       &lt;/SplitView.Pane&gt;</span><br><span class="line">                       &lt;Grid&gt;</span><br><span class="line">                           &lt;TextBlock x:Name=<span class="string">&quot;tb&quot;</span> Text=<span class="string">&quot;&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">                       &lt;/Grid&gt;</span><br><span class="line">                   &lt;/SplitView&gt;</span><br><span class="line">               &lt;/Grid&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br><span class="line">private void ToggleButton_Click(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Splitter.IsPaneOpen = (Splitter.IsPaneOpen == <span class="literal">true</span>) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       private void Button_Click_1(object sender, RoutedEventArgs e)</span><br><span class="line">       &#123;</span><br><span class="line">           Splitter.IsPaneOpen = <span class="literal">false</span>;</span><br><span class="line">           tb.Text = $<span class="string">&quot;你好,&#123;(sender as Button).Content&#125;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="布局控件"><a href="#布局控件" class="headerlink" title="布局控件"></a>布局控件</h4><p>5.14 Canvas</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;渐变矩形&quot;</span>&gt;</span><br><span class="line">                &lt;Canvas Background=<span class="string">&quot;White&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;400&quot;</span> Width=<span class="string">&quot;400&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;50&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;360&quot;</span> Width=<span class="string">&quot;360&quot;</span> Canvas.Left=<span class="string">&quot;20&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;70&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.2&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;320&quot;</span> Width=<span class="string">&quot;320&quot;</span> Canvas.Left=<span class="string">&quot;40&quot;</span> Canvas.Top=<span class="string">&quot;90&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.3&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;280&quot;</span> Width=<span class="string">&quot;280&quot;</span> Canvas.Left=<span class="string">&quot;60&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;110&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.4&quot;</span>/&gt;</span><br><span class="line">                    &lt;Canvas Height=<span class="string">&quot;240&quot;</span> Width=<span class="string">&quot;240&quot;</span> Canvas.Left=<span class="string">&quot;80&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;130&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;200&quot;</span> Width=<span class="string">&quot;200&quot;</span> Canvas.Left=<span class="string">&quot;100&quot;</span> Canvas.Top=<span class="string">&quot;150&quot;</span> Background=<span class="string">&quot;Gray&quot;</span> Opacity=<span class="string">&quot;0.6&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;160&quot;</span> Width=<span class="string">&quot;160&quot;</span> Canvas.Left=<span class="string">&quot;120&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;170&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.3&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;120&quot;</span> Width=<span class="string">&quot;120&quot;</span> Canvas.Left=<span class="string">&quot;140&quot;</span> Canvas.Top=<span class="string">&quot;190&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.4&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;80&quot;</span> Width=<span class="string">&quot;80&quot;</span> Canvas.Left=<span class="string">&quot;160&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;210&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.5&quot;</span>/&gt;</span><br><span class="line">                        &lt;Canvas Height=<span class="string">&quot;40&quot;</span> Width=<span class="string">&quot;40&quot;</span> Canvas.Left=<span class="string">&quot;180&quot;</span></span><br><span class="line">                            Canvas.Top=<span class="string">&quot;230&quot;</span> Background=<span class="string">&quot;Black&quot;</span> Opacity=<span class="string">&quot;0.6&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br></pre></td></tr></table></figure><p>5.15. 相对布局(RelativePanel)<br>控件的位置是按照相对位置来计算的,后一个控件在什么位置依赖于前一个控件的基本位置,是最灵活的一种布局.<br>RelativePanel也是通过附加属性来控制控件的布局,类似于Canvas的left.Top等.<br>Relative主要附加属性如下所示<br>Above:在某元素的上方<br>Belo:在某元素的下方<br>LeftOf:在某元素的左方<br>RightOf:在某元素的右方<br>AlignBottmWith:本元素的下边缘和某元素的下边缘对齐.<br>AlignLeftWith:本元素的左边缘和某元素的左边缘对齐<br>AlignRightWith:本元素的右边缘和某元素的右边缘对齐.<br>AlignTopWith:本元素的上边缘和某元素的上边缘对齐.<br>AlignVerticalCenterWith:本元素和某元素的垂直居中对齐.<br>5.16 多分辨率的适配布局</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;PivotItem Header=<span class="string">&quot;RelativePanel&quot;</span>&gt;</span><br><span class="line">               &lt;RelativePanel VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;bt1&quot;</span> Content=<span class="string">&quot;按钮1&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;bt2&quot;</span> Content=<span class="string">&quot;按钮2&quot;</span> RelativePanel.RightOf=<span class="string">&quot;bt1&quot;</span> Height=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">                   &lt;Button x:Name=<span class="string">&quot;bt3&quot;</span> Content=<span class="string">&quot;按钮3... ...&quot;</span></span><br><span class="line">                           RelativePanel.AlignLeftWith=<span class="string">&quot;bt2&quot;</span></span><br><span class="line">                           RelativePanel.AlignBottomWithPanel=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">               &lt;/RelativePanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br></pre></td></tr></table></figure><p>5.16.多分辨率的适配布局<br>1.对于要自适应布局部分不要硬编码 设置HorizontalAlignment VerticalAlignment 设置为strenth.通过MaxWidth,MinWidth来控制长度范围.<br>2.利用Grid面板或者RelativePanel面板动态布局.<br>规则的 Grid 反之<br>3.直接根据分辨率进行适配<br>真正的长和宽 WIndows.UI.Xaml.Window.Current.Bounds类的Height和Width属性来获取.<br>4.使用AdaptiveTrigger进行适配<br>通过设置MinWindowHeight,MinWindowWidth来设置触发的时机,当最小的窗口高度或者宽度超过限制将会触发布局属性的修改.AdaptiveManager需要在VisualStateManger里面使用.并且设置触发某个状态的改变.<br>5.23.布局系统的重要方法和属性<br>1.UIElement类<br>关于布局,重要属性 DesiredSize RenderSize 重要方法 Measure Arrange.<br>DesiredSize:只读 Size类 表示在布局过程的测量处理过程中计算的大小<br>RenderSize:这是一个只读属性,类型是Size类,表示UI元素最终呈现大小,RenderSize和DesiredSize并不一定相等.RenderSize就是其ArrangeOverride方法的返回值.<br>public void Measure(Size availableSize)方法:更新UIElement的DesiredSize属性,测量出UI元素的大小.[如果在该元素上实现了FrameworkElement.MeasureOverride(System.Windows.Size)方法,将会用此方法以形成递归布局更新.参数availableSize表示父对象可以为子对象分配可用空间.子对象可以请求大于可用空间的空间,如果特定面板中允许滚动或其他调整大小行为,则提供的大小可以适应此空间.<br>public void Arrange(Rect finalRect):Arrange方法所做的事情是定位子对象并确定UIElement的大小,也就是DesiredSize属性的值,如果在该元素上实现了FrameworkElement,ArrangeOverride(System.Windows.Size)方法,将会用此方法以形成递归布局更新,参数finalRect表示布局中父对象为子对象计算的最终大小,作为System.WIndows.Rect值提供.<br>2.FrameworkElement类<br>FrameworkElement MeasureOverride ArrangeOverride<br>Protected virtual Size MeasureOverride(Size availableSize)<br>Protected virtual Size ArrangeOverride(Size finalSize)<br>5.24 测量和排列过程<br>1.测量的过程是为了确认DesiredSize的值,最终是要提供给排列的过程去使用.<br>2.DesiredSize是根据Margin,Width,Height等属性来决定.<br>3.排列的过程确定RenderSize,以及最终子对象被安置的空间.RenderSize就是ArrangeOverride的返回值,还没有被裁剪过的值.<br>4.Margin,Width,Height只是控件表面上的属性,而实际掌控这些效果的是布局的测量排列过程.<br>5.Margin,Width,Height等属性的改变会重新触发布局的过程.<br>5.3.自定义布局规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">public class TestPanel :Panel</span><br><span class="line">   &#123;</span><br><span class="line">       public <span class="function"><span class="title">TestPanel</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line">       &#125;</span><br><span class="line">       protected override Size MeasureOverride(Size availableSize)</span><br><span class="line">       &#123;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;进入父对象:&#123;this.Name&#125;的MeasureOverride方法测量大小.&quot;</span>);</span><br><span class="line">           foreach (var item <span class="keyword">in</span> this.Children)</span><br><span class="line">           &#123;</span><br><span class="line">               item.Measure(new Size(120,120));</span><br><span class="line">               Debug.WriteLine($<span class="string">&quot;子对象的DesiredSize值Width:&#123;item.DesiredSize.Width&#125; Height:&#123;item.DesiredSize.Height&#125;&quot;</span>);</span><br><span class="line">               Debug.WriteLine($<span class="string">&quot;子对象的RenderSize值Width:&#123;item.RenderSize.Width&#125; Height:&#123;item.RenderSize.Height&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;父对象的DesiredSize值Width:&#123;this.DesiredSize.Width&#125; Height:&#123;this.DesiredSize.Height&#125;&quot;</span>);</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;父对象的RenderSize值Width:&#123;this.RenderSize.Width&#125; Height:&#123;this.RenderSize.Height&#125;&quot;</span>);</span><br><span class="line">           <span class="built_in">return</span> availableSize;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       protected override Size ArrangeOverride(Size finalSize)</span><br><span class="line">       &#123;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;进入父对象:&#123;this.Name&#125;的ArrangeOverride方法进行排列&quot;</span>);</span><br><span class="line">           double x = 0;</span><br><span class="line">           foreach (var item <span class="keyword">in</span> this.Children)</span><br><span class="line">           &#123;</span><br><span class="line">               //排列子元素</span><br><span class="line">               item.Arrange(new Rect(x,0,item.DesiredSize.Width,item.DesiredSize.Height));</span><br><span class="line">               x += item.DesiredSize.Width;</span><br><span class="line">               Debug.WriteLine($<span class="string">&quot;子对象的DesiredSize值Width:&#123;item.DesiredSize.Width&#125; Height:&#123;item.DesiredSize.Height&#125;&quot;</span>);</span><br><span class="line">               Debug.WriteLine($<span class="string">&quot;子对象的RenderSize值Width:&#123;item.RenderSize.Width&#125; Height:&#123;item.RenderSize.Height&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;父对象的Desired值Width:&#123;this.DesiredSize.Width&#125; Height:&#123;this.DesiredSize.Height&#125;&quot;</span>);</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;父对象的Render值Width:&#123;this.RenderSize.Width&#125; Height:&#123;this.RenderSize.Height&#125;&quot;</span>);</span><br><span class="line">           <span class="built_in">return</span> base.ArrangeOverride(finalSize);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">public class TestUIElement : Panel</span><br><span class="line">   &#123;</span><br><span class="line">       public <span class="function"><span class="title">TestUIElement</span></span>()</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       protected override Size MeasureOverride(Size availableSize)</span><br><span class="line">       &#123;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;进入子对象:&#123;this.Name&#125;的MeasureOverride方法测量大小.&quot;</span>);</span><br><span class="line">           <span class="built_in">return</span> availableSize;</span><br><span class="line">       &#125;</span><br><span class="line">       protected override Size ArrangeOverride(Size finalSize)</span><br><span class="line">       &#123;</span><br><span class="line">           Debug.WriteLine($<span class="string">&quot;进入子对象:&#123;this.Name&#125;的ArrangeOverride方法进行排列&quot;</span>);</span><br><span class="line">           <span class="built_in">return</span> finalSize;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&lt;PivotItem Header=<span class="string">&quot;MeasureArrange&quot;</span>&gt;</span><br><span class="line">               &lt;StackPanel&gt;</span><br><span class="line">                   &lt;Button Content=<span class="string">&quot;改变高度&quot;</span> Click=<span class="string">&quot;Button_Click_2&quot;</span>/&gt;</span><br><span class="line">                   &lt;controls:TestPanel x:Name=<span class="string">&quot;element1&quot;</span> Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;60&quot;</span> Background=<span class="string">&quot;Red&quot;</span> Margin=<span class="string">&quot;10&quot;</span>/&gt;</span><br><span class="line">                   &lt;controls:TestUIElement x:Name=<span class="string">&quot;element2&quot;</span> Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;60&quot;</span> Background=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                   </span><br><span class="line">               &lt;/StackPanel&gt;</span><br><span class="line">           &lt;/PivotItem&gt;</span><br></pre></td></tr></table></figure><p>5.3.1.创建布局类<br>需要注意的是,自定义的半径属性发生改变的时候,需要调用InvalidateArrange方法重新触发布局的排列过程,否则修改半径后将不会起到任何作用.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">public class CirclePanel:Panel</span><br><span class="line">    &#123;</span><br><span class="line">        //自定义的半径变量</span><br><span class="line">        private double _radius = 0;</span><br><span class="line"></span><br><span class="line">        public double Radius</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (double)GetValue(RadiusProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(RadiusProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> Radius.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty RadiusProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;Radius&quot;</span>, typeof(double), typeof(CirclePanel), new PropertyMetadata(0.0,OnRadiusPropertyChanged));</span><br><span class="line"></span><br><span class="line">        public <span class="function"><span class="title">CirclePanel</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void OnRadiusPropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //获取触发属性改变的CirclePanel对象.</span><br><span class="line">            CirclePanel target = (CirclePanel)d;</span><br><span class="line">            //获取传递进来的最新的值,并赋值给半径变量</span><br><span class="line">            target._radius = (double)e.NewValue;</span><br><span class="line">            //使排列状态失效,进行重新排列</span><br><span class="line">            target.InvalidateArrange();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected override Size MeasureOverride(Size availableSize)</span><br><span class="line">        &#123;</span><br><span class="line">            //处理测量子对象的逻辑</span><br><span class="line">            //最大的宽度的变量</span><br><span class="line">            double maxElementWidth = 0;</span><br><span class="line">            //遍历所有的子对象,并调用子对象的Measure方法进行测量,取出最大的宽度的子对象.</span><br><span class="line">            foreach (var item <span class="keyword">in</span> Children)</span><br><span class="line">            &#123;</span><br><span class="line">                //测量子对象</span><br><span class="line">                item.Measure(availableSize);</span><br><span class="line">                maxElementWidth = Math.Max(item.DesiredSize.Width,maxElementWidth);</span><br><span class="line">            &#125;</span><br><span class="line">            //取两个半径的大小和最大的宽度的两倍作为面板的宽度.</span><br><span class="line">            double panelWidth = 2 * this.Radius + 2 * maxElementWidth;</span><br><span class="line">            //取面板所分配的高度,宽度和计算出来的宽度的最小值作为面板的实际大小.</span><br><span class="line">            double width = Math.Min(panelWidth,availableSize.Width);</span><br><span class="line">            double height = Math.Min(panelWidth,availableSize.Height);</span><br><span class="line">            <span class="built_in">return</span> new Size(width,height); </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected override Size ArrangeOverride(Size finalSize)</span><br><span class="line">        &#123;</span><br><span class="line">            //当前的角度,从0开始排列</span><br><span class="line">            double degree = 0;</span><br><span class="line">            //计算每个子对象所占用的角度大小.</span><br><span class="line">            double degreeStep = (double)360 / this.Children.Count;</span><br><span class="line">            //计算</span><br><span class="line">            double mX = this.DesiredSize.Width / 2;</span><br><span class="line">            double mY = this.DesiredSize.Height / 2;</span><br><span class="line">            //遍历所有子对象进行排列</span><br><span class="line">            foreach (var item <span class="keyword">in</span> Children)</span><br><span class="line">            &#123;</span><br><span class="line">                //把角度转换为弧度单位</span><br><span class="line">                double angle = Math.PI * degree / 180.0;</span><br><span class="line">                //根据弧度计算出圆弧上的x,y的坐标值</span><br><span class="line">                double x = Math.Cos(angle) * this._radius;</span><br><span class="line">                double y = Math.Sin(angle) * this._radius;</span><br><span class="line">                //使用变换效果让控件旋转角度degree</span><br><span class="line">                RotateTransform rotateTransform = new RotateTransform();</span><br><span class="line">                rotateTransform.Angle = degree;</span><br><span class="line">                rotateTransform.CenterX = 0;</span><br><span class="line">                rotateTransform.CenterY = 0;</span><br><span class="line">                item.RenderTransform = rotateTransform;</span><br><span class="line">                //排列子对象</span><br><span class="line">                item.Arrange(new Rect(mX+x,mY+y,item.DesiredSize.Width,item.DesiredSize.Height));</span><br><span class="line">                //角度递增</span><br><span class="line">                degree += degreeStep;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> finalSize;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;PivotItem Header=<span class="string">&quot;CustomPanel&quot;</span>&gt;</span><br><span class="line">                &lt;Grid x:Name=<span class="string">&quot;ContentPanel1&quot;</span> Margin=<span class="string">&quot;12,0,12,0&quot;</span>&gt;</span><br><span class="line">                    &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">                        &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">                    &lt;Slider Grid.Row=<span class="string">&quot;0&quot;</span> Value=<span class="string">&quot;5&quot;</span> ValueChanged=<span class="string">&quot;Slider_ValueChanged&quot;</span>/&gt;</span><br><span class="line">                    &lt;controls:CirclePanel x:Name=<span class="string">&quot;circlePanel&quot;</span> Radius=<span class="string">&quot;50&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                        &lt;TextBlock&gt;Start here&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 2&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 3&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 4&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 5&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 6&lt;/TextBlock&gt;</span><br><span class="line">                        &lt;TextBlock&gt;TextBlock 7&lt;/TextBlock&gt;</span><br><span class="line">                    &lt;/controls:CirclePanel&gt;</span><br><span class="line">                &lt;/Grid&gt;</span><br><span class="line">            &lt;/PivotItem&gt;</span><br><span class="line"></span><br><span class="line"> private void Slider_ValueChanged(object sender, RangeBaseValueChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (circlePanel!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                circlePanel.Radius = e.NewValue * 10;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Windows应用程序开发" scheme="https://drfengling.github.io/categories/Windows%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="UWP" scheme="https://drfengling.github.io/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>WPF-MVVM工具包</title>
    <link href="https://drfengling.github.io/qm/88e21dd9.html"/>
    <id>https://drfengling.github.io/qm/88e21dd9.html</id>
    <published>2022-11-29T01:53:20.000Z</published>
    <updated>2022-11-30T09:28:13.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>WPF-图片按钮</title>
    <link href="https://drfengling.github.io/qm/f76c692.html"/>
    <id>https://drfengling.github.io/qm/f76c692.html</id>
    <published>2022-11-25T05:10:00.000Z</published>
    <updated>2022-11-25T07:02:10.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">public class ImageButton:Button</span><br><span class="line">&#123;</span><br><span class="line">    static <span class="function"><span class="title">ImageButton</span></span>() &#123; </span><br><span class="line">        DefaultStyleKeyProperty.OverrideMetadata(typeof(ImageButton), new FrameworkPropertyMetadata(typeof(ImageButton)));</span><br><span class="line">    &#125;</span><br><span class="line">    ///ImageSize NormalImage HowerImage PressedImage BorderVisiblity</span><br><span class="line">    ///</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public double ImageSize</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (double)GetValue(ImageSizeProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(ImageSizeProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Using a DependencyProperty as the backing store <span class="keyword">for</span> ImageSize.  This enables animation, styling, binding, etc...</span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty ImageSizeProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;ImageSize&quot;</span>, typeof(double), </span><br><span class="line">            typeof(ImageButton), new FrameworkPropertyMetadata(30.0,FrameworkPropertyMetadataOptions.AffectsRender));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public string NormalImage</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (string)GetValue(NormalImageProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(NormalImageProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Using a DependencyProperty as the backing store <span class="keyword">for</span> NormalImage.  This enables animation, styling, binding, etc...</span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty NormalImageProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;NormalImage&quot;</span>, typeof(string), typeof(ImageButton), </span><br><span class="line">            new FrameworkPropertyMetadata(<span class="string">&quot;&quot;</span>,FrameworkPropertyMetadataOptions.AffectsRender,ImageSourceChanged));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public string HoverImage</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (string)GetValue(HoverImageProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(HoverImageProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty HoverImageProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;HoverImage&quot;</span>, typeof(string), typeof(ImageButton),</span><br><span class="line">        new FrameworkPropertyMetadata(<span class="string">&quot;&quot;</span>, FrameworkPropertyMetadataOptions.AffectsRender, ImageSourceChanged));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public string PressedImage</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (string)GetValue(PressedImageProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(PressedImageProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Using a DependencyProperty as the backing store <span class="keyword">for</span> PressedImage.  This enables animation, styling, binding, etc...</span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty PressedImageProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;PressedImage&quot;</span>, typeof(string), typeof(ImageButton), new FrameworkPropertyMetadata(<span class="string">&quot;&quot;</span>, FrameworkPropertyMetadataOptions.AffectsRender, ImageSourceChanged));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public string DisabledImage</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (string)GetValue(DisabledImageProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(DisabledImageProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Using a DependencyProperty as the backing store <span class="keyword">for</span> MyProperty.  This enables animation, styling, binding, etc...</span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty DisabledImageProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;DisabledImage&quot;</span>, typeof(string), typeof(ImageButton), new FrameworkPropertyMetadata(<span class="string">&quot;&quot;</span>,FrameworkPropertyMetadataOptions.AffectsRender,ImageSourceChanged));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public Visibility BorderVisibility</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; <span class="built_in">return</span> (Visibility)GetValue(BorderVisibilityProperty); &#125;</span><br><span class="line">        <span class="built_in">set</span> &#123; SetValue(BorderVisibilityProperty, value); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Using a DependencyProperty as the backing store <span class="keyword">for</span> BorderVisibility.  This enables animation, styling, binding, etc...</span><br><span class="line">    public static <span class="built_in">readonly</span> DependencyProperty BorderVisibilityProperty =</span><br><span class="line">        DependencyProperty.Register(<span class="string">&quot;BorderVisibility&quot;</span>, typeof(Visibility), typeof(ImageButton), new FrameworkPropertyMetadata(Visibility.Hidden,FrameworkPropertyMetadataOptions.AffectsRender));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static void ImageSourceChanged(DependencyObject Object, DependencyPropertyChangedEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        Application.GetResourceStream(new Uri(<span class="string">&quot;pack://application:,,,&quot;</span>+(string)e.NewValue));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="资源样式"><a href="#资源样式" class="headerlink" title="资源样式"></a>资源样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">&lt;ResourceDictionary xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">                    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:Controls=<span class="string">&quot;clr-namespace:ImageButton.Controls&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    &lt;ControlTemplate x:Key=<span class="string">&quot;ImageButtonTemplate1&quot;</span> TargetType=<span class="string">&quot;&#123;x:Type Controls:ImageButton&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Grid x:Name=<span class="string">&quot;grid&quot;</span>&gt;</span><br><span class="line">            &lt;Border x:Name=<span class="string">&quot;bg&quot;</span></span><br><span class="line">                    Background=<span class="string">&quot;&#123;TemplateBinding Background&#125;&quot;</span></span><br><span class="line">                    BorderBrush=<span class="string">&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span></span><br><span class="line">                    BorderThickness=<span class="string">&quot;&#123;TemplateBinding BorderThickness&#125;&quot;</span></span><br><span class="line">                    CornerRadius=<span class="string">&quot;3&quot;</span></span><br><span class="line">                    Visibility=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=BorderVisibility&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> VerticalAlignment=<span class="string">&quot;&#123;TemplateBinding VerticalContentAlignment&#125;&quot;</span>  HorizontalAlignment=<span class="string">&quot;&#123;TemplateBinding HorizontalContentAlignment&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Image x:Name=<span class="string">&quot;ButtonImage&quot;</span> Source=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=NormalImage&#125;&quot;</span></span><br><span class="line">                           Height=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=ImageSize&#125;&quot;</span></span><br><span class="line">                           Width=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=ImageSize&#125;&quot;</span> ToolTip=<span class="string">&quot;&#123;TemplateBinding ToolTip&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;ContentPresenter HorizontalAlignment=<span class="string">&quot;&#123;TemplateBinding HorizontalContentAlignment&#125;&quot;</span> VerticalAlignment=<span class="string">&quot;&#123;TemplateBinding VerticalContentAlignment&#125;&quot;</span> RecognizesAccessKey=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/Border&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">        &lt;ControlTemplate.Triggers&gt;</span><br><span class="line">            &lt;Trigger Property=<span class="string">&quot;IsMouseOver&quot;</span> Value=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">                &lt;Setter TargetName=<span class="string">&quot;ButtonImage&quot;</span> Property=<span class="string">&quot;Source&quot;</span> Value=<span class="string">&quot;&#123;Binding HoverImage,RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/Trigger&gt;</span><br><span class="line">            &lt;Trigger Property=<span class="string">&quot;IsPressed&quot;</span> Value=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">                &lt;Setter TargetName=<span class="string">&quot;ButtonImage&quot;</span> Property=<span class="string">&quot;Source&quot;</span> Value=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=PressedImage&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/Trigger&gt;</span><br><span class="line">            &lt;Trigger Property=<span class="string">&quot;IsEnabled&quot;</span> Value=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">                &lt;Setter TargetName=<span class="string">&quot;ButtonImage&quot;</span> Property=<span class="string">&quot;Source&quot;</span> Value=<span class="string">&quot;&#123;Binding RelativeSource=&#123;RelativeSource Mode=TemplatedParent&#125;,Path=DisabledImage&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/Trigger&gt;</span><br><span class="line">        &lt;/ControlTemplate.Triggers&gt;</span><br><span class="line">    &lt;/ControlTemplate&gt;</span><br><span class="line">    &lt;Style TargetType=<span class="string">&quot;Controls:ImageButton&quot;</span> BasedOn=<span class="string">&quot;&#123;x:Null&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Padding&quot;</span> Value=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Margin&quot;</span> Value=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;ImageSize&quot;</span> Value=<span class="string">&quot;32&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;BorderThickness&quot;</span> Value=<span class="string">&quot;3&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Foreground&quot;</span> Value=<span class="string">&quot;&#123;DynamicResource TextBrush&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Background&quot;</span> Value=<span class="string">&quot;&#123;DynamicResource ButtonBorderBrush&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;BorderBrush&quot;</span> Value=<span class="string">&quot;&#123;DynamicResource ButtonBorderBrush&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;VerticalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;HorizontalContentAlignment&quot;</span> Value=<span class="string">&quot;Center&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Template&quot;</span> Value=<span class="string">&quot;&#123;StaticResource ImageButtonTemplate1&#125;&quot;</span>/&gt;</span><br><span class="line">    &lt;/Style&gt;</span><br><span class="line">    &lt;Style x:Key=<span class="string">&quot;ButtonStyleOne&quot;</span> TargetType=<span class="string">&quot;Controls:ImageButton&quot;</span> BasedOn=<span class="string">&quot;&#123;StaticResource &#123;x:Type Controls:ImageButton&#125;&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;NormalImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Normal.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;HoverImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Happy.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;PressedImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Tounge.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;DisabledImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Sad.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;ToolTip&quot;</span> Value=<span class="string">&quot;Button Two&quot;</span>/&gt;</span><br><span class="line">    &lt;/Style&gt;</span><br><span class="line">    &lt;Style x:Key=<span class="string">&quot;ButtonStyleTwo&quot;</span> TargetType=<span class="string">&quot;Controls:ImageButton&quot;</span> BasedOn=<span class="string">&quot;&#123;StaticResource ButtonStyleOne&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;NormalImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Happy.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;HoverImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Tounge.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;PressedImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Surprize.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;ToolTip&quot;</span> Value=<span class="string">&quot;Button Two&quot;</span>/&gt;</span><br><span class="line">    &lt;/Style&gt;</span><br><span class="line">    &lt;Style x:Key=<span class="string">&quot;ButtonStyleThree&quot;</span> TargetType=<span class="string">&quot;Controls:ImageButton&quot;</span></span><br><span class="line">           BasedOn=<span class="string">&quot;&#123;StaticResource ButtonStyleTwo&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;NormalImage&quot;</span> Value=<span class="string">&quot;/ImageButton;component/Resources/Normal.png&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;ToolTip&quot;</span> Value=<span class="string">&quot;Button Three&quot;</span>/&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;BorderVisibility&quot;</span> Value=<span class="string">&quot;Visible&quot;</span>/&gt;</span><br><span class="line">    &lt;/Style&gt;</span><br><span class="line">&lt;/ResourceDictionary&gt;</span><br><span class="line"></span><br><span class="line">&lt;ResourceDictionary x:Class=<span class="string">&quot;Consilium.Mobile.Tablet.Theme.ThemeDictionary&quot;</span></span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Color x:Key=<span class="string">&quot;WindowsBackgroundColor1&quot;</span>&gt;<span class="comment">#FF000000&lt;/Color&gt;</span></span><br><span class="line">    &lt;Color x:Key=<span class="string">&quot;WindowsBackgroundColor2&quot;</span>&gt;<span class="comment">#FF1A1A1A&lt;/Color&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;LinearGradientBrush x:Key=<span class="string">&quot;WindowBackground&quot;</span> EndPoint=<span class="string">&quot;0,1&quot;</span> StartPoint=<span class="string">&quot;0,0&quot;</span>&gt;</span><br><span class="line">      &lt;GradientStop Color=<span class="string">&quot;&#123;StaticResource WindowsBackgroundColor1&#125;&quot;</span> Offset=<span class="string">&quot;.5&quot;</span>/&gt;</span><br><span class="line">      &lt;GradientStop Color=<span class="string">&quot;&#123;StaticResource WindowsBackgroundColor2&#125;&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">    &lt;/LinearGradientBrush&gt;</span><br><span class="line"></span><br><span class="line">    &lt;SolidColorBrush x:Key=<span class="string">&quot;TextBrush&quot;</span> Color=<span class="string">&quot;#FFFFFFFF&quot;</span> /&gt;</span><br><span class="line">    &lt;SolidColorBrush x:Key=<span class="string">&quot;ButtonBackgroundBrush&quot;</span> Color=<span class="string">&quot;#FF999999&quot;</span> /&gt;</span><br><span class="line">    &lt;SolidColorBrush x:Key=<span class="string">&quot;ButtonBorderBrush&quot;</span> Color=<span class="string">&quot;#FF333333&quot;</span> /&gt;            </span><br><span class="line">&lt;/ResourceDictionary&gt;</span><br><span class="line">&lt;Application x:Class=<span class="string">&quot;ImageButton.App&quot;</span></span><br><span class="line">             xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">             xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">             xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:ImageButton&quot;</span></span><br><span class="line">             StartupUri=<span class="string">&quot;MainWindow.xaml&quot;</span>&gt;</span><br><span class="line">    &lt;Application.Resources&gt;</span><br><span class="line">        &lt;ResourceDictionary&gt;</span><br><span class="line">            &lt;ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">                &lt;ResourceDictionary Source=<span class="string">&quot;/ImageButton;component/Themes/ImageButton.xaml&quot;</span>/&gt;</span><br><span class="line">                &lt;ResourceDictionary Source=<span class="string">&quot;/ImageButton;component/Themes/Resources.xaml&quot;</span>/&gt;</span><br><span class="line">            &lt;/ResourceDictionary.MergedDictionaries&gt;</span><br><span class="line">        &lt;/ResourceDictionary&gt;</span><br><span class="line">    &lt;/Application.Resources&gt;</span><br><span class="line">&lt;/Application&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Xaml"><a href="#Xaml" class="headerlink" title="Xaml"></a>Xaml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">&quot;ImageButton.MainWindow&quot;</span></span><br><span class="line">        xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">        xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">        xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">        xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">        xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:ImageButton&quot;</span> xmlns:controls=<span class="string">&quot;clr-namespace:ImageButton.Controls&quot;</span></span><br><span class="line">        mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">        Title=<span class="string">&quot;MainWindow&quot;</span> Background=<span class="string">&quot;&#123;DynamicResource WindowBackground&#125;&quot;</span> ResizeMode=<span class="string">&quot;NoResize&quot;</span>&gt;</span><br><span class="line">    &lt;ScrollViewer Width=<span class="string">&quot;500&quot;</span> Height=<span class="string">&quot;500&quot;</span>&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span> BorderVisibility=<span class="string">&quot;Visible&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span></span><br><span class="line">                                  BorderVisibility=<span class="string">&quot;Visible&quot;</span> IsEnabled=<span class="string">&quot;False&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span> Content=<span class="string">&quot;Test Button&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span> BorderVisibility=<span class="string">&quot;Visible&quot;</span> Content=<span class="string">&quot;Test Button&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleOne&#125;&quot;</span></span><br><span class="line">                                  BorderVisibility=<span class="string">&quot;Visible&quot;</span> IsEnabled=<span class="string">&quot;False&quot;</span> Content=<span class="string">&quot;Test Button&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleTwo&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;controls:ImageButton Style=<span class="string">&quot;&#123;DynamicResource ButtonStyleThree&#125;&quot;</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/ScrollViewer&gt;</span><br><span class="line">&lt;/Window&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义控件"><a href="#自定义控件" class="headerlink" title="自定义控件"></a>自定义控件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Globalization;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Windows;</span><br><span class="line">using System.Windows.Controls;</span><br><span class="line">using System.Windows.Data;</span><br><span class="line">using System.Windows.Media.Animation;</span><br><span class="line">using System.Windows.Shapes;</span><br><span class="line"></span><br><span class="line">namespace Tempeture</span><br><span class="line">&#123;</span><br><span class="line">    public class AddBfh : IValueConverter</span><br><span class="line">    &#123;</span><br><span class="line">        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">float</span> f = (<span class="built_in">float</span>)value;</span><br><span class="line">            <span class="built_in">return</span> string.Format(<span class="string">&quot;&#123;0&#125;℃&quot;</span>,f);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class Temp:Button</span><br><span class="line">    &#123;</span><br><span class="line">        static <span class="function"><span class="title">Temp</span></span>() &#123;</span><br><span class="line">            DefaultStyleKeyProperty.OverrideMetadata(typeof(Temp),new FrameworkPropertyMetadata(typeof(Temp)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#region 基本控件</span></span><br><span class="line">        TextBlock txtMaxValue = null;</span><br><span class="line">        TextBlock txtMinValue = null;</span><br><span class="line">        TextBlock txtCurrentValue = null;</span><br><span class="line">        TextBlock txtPostion = null;</span><br><span class="line">        Rectangle rect = null;</span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 设置绑定</span></span><br><span class="line">        public override void <span class="function"><span class="title">OnApplyTemplate</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            base.OnApplyTemplate();</span><br><span class="line">            AddBfh addBfh = new AddBfh();</span><br><span class="line">            txtMaxValue = GetTemplateChild(<span class="string">&quot;MaxValue&quot;</span>) as TextBlock;</span><br><span class="line">            txtMinValue = GetTemplateChild(<span class="string">&quot;MinValue&quot;</span>) as TextBlock;</span><br><span class="line">            txtCurrentValue=GetTemplateChild(<span class="string">&quot;CurrentValue&quot;</span>) as TextBlock;</span><br><span class="line">            txtPostion=GetTemplateChild(<span class="string">&quot;Positions&quot;</span>) as TextBlock;</span><br><span class="line">            rect = GetTemplateChild(<span class="string">&quot;RectValue&quot;</span>) as Rectangle;</span><br><span class="line"></span><br><span class="line">            txtMaxValue.SetBinding(TextBlock.TextProperty,new Binding(<span class="string">&quot;MaxValue&quot;</span>) &#123; Source=this,Converter=addBfh&#125;);</span><br><span class="line">            txtMinValue.SetBinding(TextBlock.TextProperty, new Binding(<span class="string">&quot;MinValue&quot;</span>) &#123; Source=this,Converter=addBfh&#125;);</span><br><span class="line"></span><br><span class="line">            txtCurrentValue.SetBinding(TextBlock.TextProperty,new Binding(<span class="string">&quot;CurrentValue&quot;</span>) &#123; Source=this,Converter=addBfh&#125;);</span><br><span class="line">            txtPostion.SetBinding(TextBlock.TextProperty, new Binding(<span class="string">&quot;MeterPosition&quot;</span>) &#123; Source=this&#125;);</span><br><span class="line">            rect.SetBinding(Rectangle.HeightProperty, new Binding(<span class="string">&quot;CurrentValue&quot;</span>) &#123; Source = this &#125;) ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 最小值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public <span class="built_in">float</span> MinValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (<span class="built_in">float</span>)GetValue(MinValueProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(MinValueProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> MinValue.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty MinValueProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;MinValue&quot;</span>, typeof(<span class="built_in">float</span>), typeof(Temp), new PropertyMetadata(0.0f));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 最大值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public <span class="built_in">float</span> MaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (<span class="built_in">float</span>)GetValue(MaxValueProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(MaxValueProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> MaxValue.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty MaxValueProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;MaxValue&quot;</span>, typeof(<span class="built_in">float</span>), typeof(Temp), new PropertyMetadata(100.0f));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 当前值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public <span class="built_in">float</span> CurrentValue</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (<span class="built_in">float</span>)GetValue(CurrentValueProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(CurrentValueProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> CurrentValue.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty CurrentValueProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;CurrentValue&quot;</span>, typeof(<span class="built_in">float</span>), typeof(Temp), new PropertyMetadata(50f,CurrentValueChange));</span><br><span class="line"></span><br><span class="line">        private static void CurrentValueChange(DependencyObject d, DependencyPropertyChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            (d as Temp).StoryboardPlay(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void StoryboardPlay(DependencyPropertyChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Storyboard sb = new Storyboard();</span><br><span class="line">            DoubleAnimation da = new DoubleAnimation();</span><br><span class="line">            da.To = double.Parse(e.NewValue.ToString());</span><br><span class="line">            da.Duration = new Duration(TimeSpan.Parse(<span class="string">&quot;0:0:1&quot;</span>));</span><br><span class="line">            rect.BeginAnimation(Rectangle.HeightProperty,da);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">        <span class="comment">#region 位置信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public string MeterPosition</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (string)GetValue(MeterPositionProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(MeterPositionProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> MeterPosition.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty MeterPositionProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;MeterPosition&quot;</span>, typeof(string), typeof(Temp), new PropertyMetadata(<span class="string">&quot;Bash&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#endregion</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="资源样式-1"><a href="#资源样式-1" class="headerlink" title="资源样式"></a>资源样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;ResourceDictionary</span><br><span class="line">    xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">    xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">    xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:Tempeture&quot;</span>&gt;</span><br><span class="line">    &lt;Style TargetType=<span class="string">&quot;&#123;x:Type local:Temp&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;Setter Property=<span class="string">&quot;Template&quot;</span>&gt;</span><br><span class="line">            &lt;Setter.Value&gt;</span><br><span class="line">                &lt;ControlTemplate TargetType=<span class="string">&quot;&#123;x:Type local:Temp&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;Canvas xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span> x:Name=<span class="string">&quot;Tempreature&quot;</span> Width=<span class="string">&quot;250&quot;</span> Height=<span class="string">&quot;280&quot;</span> Clip=<span class="string">&quot;F1 M 0,0L 250,0L 250,280L 0,280L 0,0&quot;</span>&gt;</span><br><span class="line">                        &lt;Canvas x:Name=<span class="string">&quot;background&quot;</span> Width=<span class="string">&quot;250&quot;</span> Height=<span class="string">&quot;280&quot;</span> Canvas.Left=<span class="string">&quot;0&quot;</span> Canvas.Top=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">                            &lt;Path x:Name=<span class="string">&quot;Path&quot;</span> Width=<span class="string">&quot;230&quot;</span> Height=<span class="string">&quot;230&quot;</span> Canvas.Left=<span class="string">&quot;10&quot;</span> Canvas.Top=<span class="string">&quot;4.99991&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span> Data=<span class="string">&quot;F1 M 20,4.99991L 230,4.99991C 235.523,4.99991 240,9.47702 240,14.9999L 240,225C 240,230.523 235.523,235 230,235L 20,235C 14.4772,235 10,230.523 10,225L 10,14.9999C 10,9.47702 14.4772,4.99991 20,4.99991 Z &quot;</span>&gt;</span><br><span class="line">                                &lt;Path.Fill&gt;</span><br><span class="line">                                    &lt;LinearGradientBrush StartPoint=<span class="string">&quot;0.5,1.25168&quot;</span> EndPoint=<span class="string">&quot;0.5,-0.25168&quot;</span>&gt;</span><br><span class="line">                                        &lt;LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                            &lt;GradientStop Color=<span class="string">&quot;#FF000000&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                                            &lt;GradientStop Color=<span class="string">&quot;#FF4C4E4C&quot;</span> Offset=<span class="string">&quot;0.748837&quot;</span>/&gt;</span><br><span class="line">                                            &lt;GradientStop Color=<span class="string">&quot;#FF989D98&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/LinearGradientBrush.GradientStops&gt;</span><br><span class="line">                                    &lt;/LinearGradientBrush&gt;</span><br><span class="line">                                &lt;/Path.Fill&gt;</span><br><span class="line">                                &lt;Path.Effect&gt;</span><br><span class="line">                                    &lt;DropShadowEffect BlurRadius=<span class="string">&quot;8&quot;</span> ShadowDepth=<span class="string">&quot;3.77953&quot;</span> Opacity=<span class="string">&quot;0.599998&quot;</span> Color=<span class="string">&quot;#FF000000&quot;</span> Direction=<span class="string">&quot;315&quot;</span>/&gt;</span><br><span class="line">                                &lt;/Path.Effect&gt;</span><br><span class="line">                            &lt;/Path&gt;</span><br><span class="line">                            &lt;Viewbox x:Name=<span class="string">&quot;Group&quot;</span> Width=<span class="string">&quot;58&quot;</span> Height=<span class="string">&quot;191&quot;</span> Canvas.Left=<span class="string">&quot;15&quot;</span> Canvas.Top=<span class="string">&quot;29&quot;</span>&gt;</span><br><span class="line">                                &lt;Canvas Width=<span class="string">&quot;58&quot;</span> Height=<span class="string">&quot;191&quot;</span>&gt;</span><br><span class="line">                                    &lt;Path x:Name=<span class="string">&quot;Path_0&quot;</span> Width=<span class="string">&quot;20&quot;</span> Height=<span class="string">&quot;147&quot;</span> Canvas.Left=<span class="string">&quot;18.875&quot;</span> Canvas.Top=<span class="string">&quot;1.726&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span> StrokeThickness=<span class="string">&quot;6&quot;</span> StrokeStartLineCap=<span class="string">&quot;Round&quot;</span> StrokeEndLineCap=<span class="string">&quot;Round&quot;</span> StrokeLineJoin=<span class="string">&quot;Round&quot;</span> Stroke=<span class="string">&quot;#FF96C240&quot;</span> Fill=<span class="string">&quot;#0096C240&quot;</span> Data=<span class="string">&quot;F1 M 25.875,4.72554L 25.875,4.72554C 29.741,4.72554 32.875,7.85956 32.875,11.7255L 32.875,138.725C 32.875,142.591 29.741,145.725 25.875,145.725L 25.875,145.725C 22.009,145.725 18.875,142.591 18.875,138.725L 18.875,11.7255C 18.875,7.85956 22.009,4.72554 25.875,4.72554 Z &quot;</span>&gt;</span><br><span class="line">                                        &lt;Path.Effect&gt;</span><br><span class="line">                                            &lt;DropShadowEffect BlurRadius=<span class="string">&quot;8&quot;</span> ShadowDepth=<span class="string">&quot;3.77953&quot;</span> Opacity=<span class="string">&quot;0.599998&quot;</span> Color=<span class="string">&quot;#FF000000&quot;</span> Direction=<span class="string">&quot;315&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/Path.Effect&gt;</span><br><span class="line">                                    &lt;/Path&gt;</span><br><span class="line">                                    &lt;Ellipse x:Name=<span class="string">&quot;Ellipse&quot;</span> Width=<span class="string">&quot;49.647&quot;</span> Height=<span class="string">&quot;46.889&quot;</span> Canvas.Left=<span class="string">&quot;4.052&quot;</span> Canvas.Top=<span class="string">&quot;136.683&quot;</span> Stretch=<span class="string">&quot;Fill&quot;</span> Fill=<span class="string">&quot;#FF96C240&quot;</span>&gt;</span><br><span class="line">                                        &lt;Ellipse.Effect&gt;</span><br><span class="line">                                            &lt;DropShadowEffect BlurRadius=<span class="string">&quot;8&quot;</span> ShadowDepth=<span class="string">&quot;3.77953&quot;</span> Opacity=<span class="string">&quot;0.599998&quot;</span> Color=<span class="string">&quot;#FF000000&quot;</span> Direction=<span class="string">&quot;315&quot;</span>/&gt;</span><br><span class="line">                                        &lt;/Ellipse.Effect&gt;</span><br><span class="line">                                    &lt;/Ellipse&gt;</span><br><span class="line">                                    &lt;Rectangle x:Name=<span class="string">&quot;RectValue&quot;</span> Height=<span class="string">&quot;131&quot;</span> Canvas.Left=<span class="string">&quot;19.875&quot;</span> Canvas.Top=<span class="string">&quot;7&quot;</span> Width=<span class="string">&quot;18&quot;</span> Fill=<span class="string">&quot;#FF96C240&quot;</span> RenderTransformOrigin=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span><br><span class="line">                                        &lt;Rectangle.RenderTransform&gt;</span><br><span class="line">                                            &lt;TransformGroup&gt;</span><br><span class="line">                                                &lt;ScaleTransform/&gt;</span><br><span class="line">                                                &lt;SkewTransform/&gt;</span><br><span class="line">                                                &lt;RotateTransform/&gt;</span><br><span class="line">                                                &lt;TranslateTransform/&gt;</span><br><span class="line">                                            &lt;/TransformGroup&gt;</span><br><span class="line">                                        &lt;/Rectangle.RenderTransform&gt;</span><br><span class="line">                                    &lt;/Rectangle&gt;</span><br><span class="line">                                &lt;/Canvas&gt;</span><br><span class="line">                            &lt;/Viewbox&gt;</span><br><span class="line">                            &lt;Grid Width=<span class="string">&quot;230&quot;</span> Height=<span class="string">&quot;37&quot;</span> Canvas.Left=<span class="string">&quot;10&quot;</span> Canvas.Top=<span class="string">&quot;235&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock x:Name=<span class="string">&quot;Positions&quot;</span> FontSize=<span class="string">&quot;25&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                                &lt;/TextBlock&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                            &lt;Grid Width=<span class="string">&quot;130&quot;</span> Height=<span class="string">&quot;49&quot;</span> Canvas.Left=<span class="string">&quot;98&quot;</span> Canvas.Top=<span class="string">&quot;72&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock x:Name=<span class="string">&quot;CurrentValue&quot;</span> Text=<span class="string">&quot;123℃&quot;</span> Foreground=<span class="string">&quot;#FF96C240&quot;</span> FontSize=<span class="string">&quot;50&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                                    &lt;TextBlock.Effect&gt;</span><br><span class="line">                                        &lt;DropShadowEffect/&gt;</span><br><span class="line">                                    &lt;/TextBlock.Effect&gt;</span><br><span class="line">                                &lt;/TextBlock&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                            &lt;Grid Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;31&quot;</span> Canvas.Left=<span class="string">&quot;60&quot;</span> Canvas.Top=<span class="string">&quot;14&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock x:Name=<span class="string">&quot;MaxValue&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> Foreground=<span class="string">&quot;#FF96C240&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                                    &lt;TextBlock.Effect&gt;</span><br><span class="line">                                        &lt;DropShadowEffect/&gt;</span><br><span class="line">                                    &lt;/TextBlock.Effect&gt;</span><br><span class="line">                                &lt;/TextBlock&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                            &lt;Grid Width=<span class="string">&quot;60&quot;</span> Height=<span class="string">&quot;31&quot;</span> Canvas.Left=<span class="string">&quot;60&quot;</span> Canvas.Top=<span class="string">&quot;144&quot;</span>&gt;</span><br><span class="line">                                &lt;TextBlock x:Name=<span class="string">&quot;MinValue&quot;</span> Text=<span class="string">&quot;100℃&quot;</span> FontSize=<span class="string">&quot;20&quot;</span> Foreground=<span class="string">&quot;#FF96C240&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                                    &lt;TextBlock.Effect&gt;</span><br><span class="line">                                        &lt;DropShadowEffect/&gt;</span><br><span class="line">                                    &lt;/TextBlock.Effect&gt;</span><br><span class="line">                                &lt;/TextBlock&gt;</span><br><span class="line">                            &lt;/Grid&gt;</span><br><span class="line">                        &lt;/Canvas&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/ControlTemplate&gt;</span><br><span class="line">            &lt;/Setter.Value&gt;</span><br><span class="line">        &lt;/Setter&gt;</span><br><span class="line">    &lt;/Style&gt;</span><br><span class="line">&lt;/ResourceDictionary&gt;</span><br><span class="line"></span><br><span class="line">&lt;Window x:Class=<span class="string">&quot;Sample.MainWindow&quot;</span></span><br><span class="line">        xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">        xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">        xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">        xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">        xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:Sample&quot;</span> xmlns:tempeture=<span class="string">&quot;clr-namespace:Tempeture;assembly=Tempeture&quot;</span></span><br><span class="line">        mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">        Title=<span class="string">&quot;MainWindow&quot;</span> Height=<span class="string">&quot;350&quot;</span> Width=<span class="string">&quot;525&quot;</span>&gt;</span><br><span class="line">    &lt;StackPanel&gt;</span><br><span class="line">        &lt;tempeture:Temp x:Name=<span class="string">&quot;myMeter&quot;</span> MaxValue=<span class="string">&quot;100&quot;</span>/&gt;</span><br><span class="line">        &lt;TextBox Text=<span class="string">&quot;&#123;Binding ElementName=myMeter,Path=CurrentValue,UpdateSourceTrigger=PropertyChanged&#125;&quot;</span>/&gt;</span><br><span class="line">    &lt;/StackPanel&gt;</span><br><span class="line">&lt;/Window&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-样式和控件模板</title>
    <link href="https://drfengling.github.io/qm/75f53d80.html"/>
    <id>https://drfengling.github.io/qm/75f53d80.html</id>
    <published>2022-11-24T08:57:56.000Z</published>
    <updated>2022-11-24T09:14:44.336Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p>Style TargetType  设置为Button 不指定KEY.全局Button.BasedOn.样式继承</p><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p>1.属性触发器<br>2.数据触发器<br>3.事件触发器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-页面和导航</title>
    <link href="https://drfengling.github.io/qm/14e8ff67.html"/>
    <id>https://drfengling.github.io/qm/14e8ff67.html</id>
    <published>2022-11-24T06:04:38.000Z</published>
    <updated>2022-11-24T08:25:10.832Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="导航应用程序演绎"><a href="#导航应用程序演绎" class="headerlink" title="导航应用程序演绎"></a>导航应用程序演绎</h3><p>1.将导航的内容寄宿于窗口中<br>2.Xaml浏览器应用程序 扩展名.xbap 可以直接在浏览器中运行.</p><h3 id="4个核心"><a href="#4个核心" class="headerlink" title="4个核心"></a>4个核心</h3><p>1.页面:WPF将导航内容封装为多个页面.<br>2.超链接<br>3.NavigationServices<br>4.Journal 每次连接通过Jourmal记录作为历史记录.</p><h3 id="Page的宿主窗口"><a href="#Page的宿主窗口" class="headerlink" title="Page的宿主窗口"></a>Page的宿主窗口</h3><p>Page的宿主窗口包括浏览器,导航窗口和Frame.<br>NavigationWindow是一个顶层窗口,不允许嵌入到其他控件中,而Frame则为轻量级,可以嵌入到其他控件,如NavigationWindow或者Page,甚至其他Frame中.Frame默认没有导航工具栏,可以设置其NavigationUIVisiblity属性为Visible使其工具栏是否可见.</p><h3 id="导航链接"><a href="#导航链接" class="headerlink" title="导航链接"></a>导航链接</h3><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;HyperLink NavigateUri=<span class="string">&quot;Page2.xaml&quot;</span>&gt;开始阅读路由事件</span><br><span class="line">&lt;/HyperLink&gt;</span><br></pre></td></tr></table></figure><p>段落导航 NavigateUri的设置方法是”页面名#元素名”<br>HyperLink Click NavigationService Navigate方法导航.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">private Hyperlink_Click(object sender,RoutedEventArgs e)&#123;</span><br><span class="line">NavigationService.Navigate(newUri(<span class="string">&quot;pack://application:,,,/Page2.xaml&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他方式导航"><a href="#其他方式导航" class="headerlink" title="其他方式导航"></a>其他方式导航</h3><p>NavigationCommands.BrowseBack NavigationCommands.BrowseForward</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page x:Class=<span class="string">&quot;WpfApp1.Pages.LoginPage&quot;</span></span><br><span class="line">      xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">      xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">      xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span> </span><br><span class="line">      xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span> </span><br><span class="line">      xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:WpfApp1.Pages&quot;</span></span><br><span class="line"></span><br><span class="line">      Title=<span class="string">&quot;登陆页面&quot;</span> ShowsNavigationUI=<span class="string">&quot;True&quot;</span> WindowTitle=<span class="string">&quot;登录页面&quot;</span> Loaded=<span class="string">&quot;Page_Loaded&quot;</span>  PreviewLostKeyboardFocus=<span class="string">&quot;Page_PreviewLostKeyboardFocus&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Border BorderBrush=<span class="string">&quot;Black&quot;</span> BorderThickness=<span class="string">&quot;2&quot;</span> Margin=<span class="string">&quot;10&quot;</span>&gt;</span><br><span class="line">        &lt;Grid&gt;</span><br><span class="line">            &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;auto&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;4*&quot;</span>/&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;6*&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;用户名&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox Style=<span class="string">&quot;&#123;x:Null&#125;&quot;</span> x:Name=<span class="string">&quot;name&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;密码&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;PasswordBox x:Name=<span class="string">&quot;password&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;Button x:Name=<span class="string">&quot;btn&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Height=<span class="string">&quot;25&quot;</span> Width=<span class="string">&quot;80&quot;</span> HorizontalAlignment=<span class="string">&quot;Left&quot;</span> Margin=<span class="string">&quot;5 0 0 0&quot;</span></span><br><span class="line">                    Click=<span class="string">&quot;btn_Click&quot;</span> Content=<span class="string">&quot;登录&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;2&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span> HorizontalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">            &lt;Hyperlink NavigateUri=<span class="string">&quot;RegisterPage.xaml&quot;</span>&gt;</span><br><span class="line">                忘记密码了... ...    </span><br><span class="line">            &lt;/Hyperlink&gt;</span><br><span class="line">            &lt;/TextBlock&gt;</span><br><span class="line">            &lt;TextBlock Margin=<span class="string">&quot;0&quot;</span> Grid.Row=<span class="string">&quot;3&quot;</span> Grid.ColumnSpan=<span class="string">&quot;2&quot;</span> x:Name=<span class="string">&quot;hyperlinktext&quot;</span></span><br><span class="line">                       HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                如果没有注册,请单击</span><br><span class="line">                &lt;Hyperlink Click=<span class="string">&quot;Hyperlink_Click&quot;</span>&gt;</span><br><span class="line">                    注册</span><br><span class="line">                    &lt;/Hyperlink&gt;</span><br><span class="line">                页面</span><br><span class="line">                &lt;LineBreak/&gt;</span><br><span class="line">            &lt;/TextBlock&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Border&gt;</span><br><span class="line">&lt;/Page&gt;</span><br><span class="line"></span><br><span class="line">    public partial class LoginPage : Page</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">LoginPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public string FocusElement</span><br><span class="line">        &#123;</span><br><span class="line">            get &#123; <span class="built_in">return</span> (string)GetValue(FocusElementProperty); &#125;</span><br><span class="line">            <span class="built_in">set</span> &#123; SetValue(FocusElementProperty, value); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Using a DependencyProperty as the backing store <span class="keyword">for</span> FocusElement.  This enables animation, styling, binding, etc...</span><br><span class="line">        public static <span class="built_in">readonly</span> DependencyProperty FocusElementProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">&quot;FocusElement&quot;</span>, typeof(string), typeof(LoginPage), new FrameworkPropertyMetadata(null,FrameworkPropertyMetadataOptions.Journal));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        private void btn_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;User&gt; <span class="built_in">users</span> =((App) App.Current).<span class="built_in">users</span>;</span><br><span class="line">            int usercount = users.Count;</span><br><span class="line">            User user = new User(name.Text,password.ToString());</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; usercount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (name.Text == <span class="built_in">users</span>[i].Name &amp;&amp; password.Password == <span class="built_in">users</span>[i].Password) &#123;</span><br><span class="line">                    WelcomePage page = new WelcomePage(user,<span class="literal">false</span>);</span><br><span class="line">                    NavigationService.Navigate(page);</span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            NavigationService.Navigate(new Uri(<span class="string">&quot;pack://application:,,,/Pages/ErrorPage.xaml&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Page_PreviewLostKeyboardFocus(object sender, KeyboardFocusChangedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.NewFocus==this.name || e.NewFocus==this.password)</span><br><span class="line">            &#123;</span><br><span class="line">                this.FocusElement=(string)(((DependencyObject)e.NewFocus).GetValue(FrameworkElement.NameProperty));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Page_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (this.FocusElement != null) &#123;</span><br><span class="line">                IInputElement element = (IInputElement)LogicalTreeHelper.FindLogicalNode(this,this.FocusElement);</span><br><span class="line">                Keyboard.Focus(element);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Hyperlink_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            RegisterPage registerPage = new RegisterPage();</span><br><span class="line">            registerPage.Return += RegisterPage_Return;</span><br><span class="line">            this.NavigationService.Navigate(registerPage);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void RegisterPage_Return(object sender, ReturnEventArgs&lt;User&gt; e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e == null) &#123;</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            User user = e.Result;</span><br><span class="line">                <span class="keyword">if</span> (user != null) &#123;</span><br><span class="line">                this.name.Text = user.Name;</span><br><span class="line">                this.password.Password = password.Password;</span><br><span class="line">            &#125;</span><br><span class="line">            List&lt;User&gt; list = ((App)(App.Current)).<span class="built_in">users</span>;</span><br><span class="line">            list.Add(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;PageFunction x:Class=<span class="string">&quot;WpfApp1.Pages.RegisterPage&quot;</span></span><br><span class="line">      xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">      xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">      xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span> </span><br><span class="line">      xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span> </span><br><span class="line">      xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:WpfApp1.Pages&quot;</span> xmlns:bookmodels=<span class="string">&quot;clr-namespace:BookModels;assembly=BookModels&quot;</span></span><br><span class="line">              mc:Ignorable=<span class="string">&quot;d&quot;</span> </span><br><span class="line">      d:DesignHeight=<span class="string">&quot;450&quot;</span> d:DesignWidth=<span class="string">&quot;800&quot;</span></span><br><span class="line">      Title=<span class="string">&quot;RegisterPage&quot;</span></span><br><span class="line">              x:TypeArguments=<span class="string">&quot;bookmodels:User&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Border BorderBrush=<span class="string">&quot;Black&quot;</span> BorderThickness=<span class="string">&quot;2&quot;</span> &gt;</span><br><span class="line">        &lt;Grid&gt;</span><br><span class="line">            &lt;Grid.RowDefinitions&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line"></span><br><span class="line">                &lt;RowDefinition/&gt;</span><br><span class="line">                &lt;RowDefinition Height=<span class="string">&quot;auto&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;Grid.ColumnDefinitions&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;4*&quot;</span>/&gt;</span><br><span class="line">                &lt;ColumnDefinition Width=<span class="string">&quot;7*&quot;</span>/&gt;</span><br><span class="line">            &lt;/Grid.ColumnDefinitions&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">&quot;用户名&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">&quot;name&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;1&quot;</span> Text=<span class="string">&quot;密码&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;PasswordBox x:Name=<span class="string">&quot;password&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;TextBlock Grid.Row=<span class="string">&quot;2&quot;</span> Text=<span class="string">&quot;再次输入密码&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;PasswordBox x:Name=<span class="string">&quot;Secondpassword&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> Margin=<span class="string">&quot;5&quot;</span>/&gt;</span><br><span class="line">            &lt;StackPanel Orientation=<span class="string">&quot;Horizontal&quot;</span> Grid.Row=<span class="string">&quot;3&quot;</span> Grid.Column=<span class="string">&quot;1&quot;</span> HorizontalAlignment=<span class="string">&quot;Right&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;注册&quot;</span> Margin=<span class="string">&quot;30 0 0 0&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">                &lt;Button Content=<span class="string">&quot;取消&quot;</span> Margin=<span class="string">&quot;30 0 30 0&quot;</span> Command=<span class="string">&quot;Close&quot;</span>/&gt;</span><br><span class="line">            &lt;/StackPanel&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Border&gt;</span><br><span class="line">&lt;/PageFunction&gt;</span><br><span class="line"></span><br><span class="line">    public partial class RegisterPage : PageFunction&lt;User&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">RegisterPage</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            user = new User();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private User user;</span><br><span class="line"></span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            User user = CreateUser();</span><br><span class="line">            <span class="keyword">if</span> (user == null) <span class="built_in">return</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                OnReturn(new ReturnEventArgs&lt;User&gt;(user));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private User <span class="function"><span class="title">CreateUser</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (string.IsNullOrEmpty(name.Text) || string.IsNullOrEmpty(password.Password)||</span><br><span class="line">                string.IsNullOrEmpty(Secondpassword.Password) || password.Password!=Secondpassword.Password)</span><br><span class="line">            &#123;</span><br><span class="line">                BiaoZhuWindow biaoZhu=new BiaoZhuWindow();</span><br><span class="line">                biaoZhu.mes.Content = <span class="string">&quot;用户名或密码有误!&quot;</span>;</span><br><span class="line">                biaoZhu.Show();</span><br><span class="line">                <span class="built_in">return</span> null;</span><br><span class="line">            &#125;</span><br><span class="line">            user = new <span class="function"><span class="title">User</span></span>() &#123; Name=name.Text,Password=Secondpassword.Password&#125;;</span><br><span class="line">            <span class="built_in">return</span> user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-Command命令</title>
    <link href="https://drfengling.github.io/qm/d0627144.html"/>
    <id>https://drfengling.github.io/qm/d0627144.html</id>
    <published>2022-11-24T03:18:21.000Z</published>
    <updated>2022-11-24T06:00:44.075Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window.CommandBindings&gt;</span><br><span class="line">&lt;CommandBinding Command=<span class="string">&quot;Save&quot;</span> Executed=<span class="string">&quot;SaveExecuted&quot;</span> CanExecute=<span class="string">&quot;SaveCanExecute&quot;</span>/&gt;</span><br><span class="line">&lt;/Window.CommandBindings&gt;</span><br></pre></td></tr></table></figure><p>CommandBinding有两个重要事件,执行关联的Command时,会触发该Executed事件的处理函数,触发CanExecute事件时,相应的事件处理函数需要将传递来的参数e的CanExecute属性设为true或false.告知WPF命令系统该命令是否可用.</p><h3 id="Command模型"><a href="#Command模型" class="headerlink" title="Command模型"></a>Command模型</h3><p>WPFCommand模型包含如下4部分:<br>1.Command:应用程序需要执行的任务.<br>2.CommandBinding:连接Comamnd和特定应用程序逻辑,如前面CommandBinding连接Save命令及其处理函数.<br>3.Command Source:触发Command的对象,如前述的菜单栏和工具栏,单击可以触发绑定的Command.<br>4.Command target:Command应用再上面的对象.如前述的TextBox.</p><h3 id="Command-1"><a href="#Command-1" class="headerlink" title="Command"></a>Command</h3><p>1.ICommand接口<br>一个Command代表应用程序的任务.在WPF中所有Command都要实现ICommand接口,该接口有两个方法(Executed CanExecute)和一个事件(CanExecuteChanged)<br>1.Execute方法:当Command被触发时调用该方法,执行与命令相对应的操作.<br>2.CanExecute方法:用来判断该命令是否可应用到当前Command target上,如果该方法返回true可以<br>3.CanExecutedChanged事件:Command有执行或者不执行两种状态,状态改变时触发该事件.一般监听该事件的是CommandSource,它监听到该事件后会调用绑定的Command的CanExecute方法检查当前Command的状态,然后决定然后决定CommandSource是启用还是禁用.<br>Recommand的InputGuestures属性用来指定鼠标和键盘动作,从而可以关联命令和相应的鼠标键盘动作.<br>WPF内置的Command库<br>ApplicationCommands NavigationCommands EditingCommands ComponentCommands MeidaCommands</p><h3 id="Command-Sources"><a href="#Command-Sources" class="headerlink" title="Command Sources"></a>Command Sources</h3><p>CommandSource是能触发Command的对象按钮和菜单,包括键盘和鼠标操作都可以是Command Source.<br>CommandSource必须实现ICommandSource接口,该接口定义了3个属性<br>1.Command:Command Source触发的Command.<br>2.CommandParameter:Command执行时需要的参数.大多数情况下命令的执行不需要参数.<br>3.CommandTarget:Command应用对象.<br>WPF中实现ICommandSource接口的有ButtonBase,MenuItem,Hyperlink和InputBinding.</p><h3 id="Commanding"><a href="#Commanding" class="headerlink" title="Commanding"></a>Commanding</h3><p>CommandBinding关联Command和实现Command的事件处理函数<br>CommandBinding类包括Command属性,以及PreviewExecuted,Executed,PreviewCanExecute和CanExecute事件.如果一个元素派生自UIElement,ContentElement和UIElement3D之一,那么CommandBinding对象可以添加到该元素中.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window.CommandBindings&gt;</span><br><span class="line">&lt;CommandBinding Command=<span class="string">&quot;Close&quot;</span> Executed=<span class="string">&quot;CloseCommand&quot;</span>/&gt;</span><br><span class="line">&lt;ComandBinding Command=<span class="string">&quot;Save&quot;</span> Executed=<span class="string">&quot;SaveCommand&quot;</span>/&gt;</span><br><span class="line">&lt;/Window.CommandBindings&gt;</span><br><span class="line"></span><br><span class="line">CommandBinding SaveCommandBinding=new CommandBinding(ApplicationCommands.Save,SaveExecuted,SaveCanExecute);</span><br><span class="line">this.CommandBindings.Add(SaveCommandBinding);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Command-Target"><a href="#Command-Target" class="headerlink" title="Command Target"></a>Command Target</h3><p>Command Target是Command会应用在上面的对象.ComandSource 需要实现ICommandSource接口,其中就有一个属性是CommandTarget.当CommandSource不明确指定Command Target属性时,会把当前获得的焦点的元素认为是Comand Target.</p><h2 id="非规则窗口"><a href="#非规则窗口" class="headerlink" title="非规则窗口"></a>非规则窗口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">&quot;WpfApp1.BiaoZhuWindow&quot;</span></span><br><span class="line">        xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">        xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">       xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:WpfApp1.Pages&quot;</span></span><br><span class="line">        Title=<span class="string">&quot;BiaoZhuWindow&quot;</span></span><br><span class="line">        Background=<span class="string">&quot;Transparent&quot;</span> AllowsTransparency=<span class="string">&quot;True&quot;</span> WindowStyle=<span class="string">&quot;None&quot;</span></span><br><span class="line">        SizeToContent=<span class="string">&quot;WidthAndHeight&quot;</span> MouseLeftButtonDown=<span class="string">&quot;Window_MouseLeftButtonDown&quot;</span>&gt;</span><br><span class="line">    &lt;Window.CommandBindings&gt;</span><br><span class="line">        &lt;CommandBinding Command=<span class="string">&quot;Close&quot;</span> Executed=<span class="string">&quot;Close&quot;</span>/&gt;</span><br><span class="line">    &lt;/Window.CommandBindings&gt;</span><br><span class="line">    &lt;!--窗口的形状都绘制在Canvas面板中面--&gt;</span><br><span class="line">        &lt;Canvas Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">            &lt;!--窗口的轮廓--&gt;</span><br><span class="line">        &lt;Path Stroke=<span class="string">&quot;DarkGray&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">            &lt;Path.Fill&gt;</span><br><span class="line">                &lt;LinearGradientBrush StartPoint=<span class="string">&quot;0.2,0&quot;</span> EndPoint=<span class="string">&quot;0.8,1&quot;</span>&gt;</span><br><span class="line">                    &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">                    &lt;GradientStop Color=<span class="string">&quot;White&quot;</span> Offset=<span class="string">&quot;0.45&quot;</span>/&gt;</span><br><span class="line">                    &lt;GradientStop Color=<span class="string">&quot;LightBlue&quot;</span> Offset=<span class="string">&quot;0.9&quot;</span>/&gt;</span><br><span class="line">                    &lt;GradientStop Color=<span class="string">&quot;Gray&quot;</span> Offset=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">                &lt;/LinearGradientBrush&gt;</span><br><span class="line">            &lt;/Path.Fill&gt;</span><br><span class="line">            &lt;Path.Data&gt;</span><br><span class="line">                &lt;PathGeometry&gt;</span><br><span class="line">                    &lt;PathFigure StartPoint=<span class="string">&quot; 40,20&quot;</span> IsClosed=<span class="string">&quot;True&quot;</span>&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;160,20&quot;</span>/&gt;</span><br><span class="line">                        &lt;ArcSegment Point=<span class="string">&quot;180,40&quot;</span> Size=<span class="string">&quot;20,20&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;180,80&quot;</span>/&gt;</span><br><span class="line">                        &lt;ArcSegment Point=<span class="string">&quot;160,100&quot;</span> Size=<span class="string">&quot;20,20&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;90,100&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;60,150&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;60,100&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;40,100&quot;</span>/&gt;</span><br><span class="line">                        &lt;ArcSegment Point=<span class="string">&quot;20,80&quot;</span> Size=<span class="string">&quot;20,20&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span>/&gt;</span><br><span class="line">                        &lt;LineSegment Point=<span class="string">&quot;20,40&quot;</span>/&gt;</span><br><span class="line">                        &lt;ArcSegment Point=<span class="string">&quot;40,20&quot;</span> Size=<span class="string">&quot;20,20&quot;</span> SweepDirection=<span class="string">&quot;Clockwise&quot;</span>/&gt;</span><br><span class="line">                        </span><br><span class="line">                    &lt;/PathFigure&gt;</span><br><span class="line">                &lt;/PathGeometry&gt;</span><br><span class="line">            &lt;/Path.Data&gt;</span><br><span class="line">        &lt;/Path&gt;</span><br><span class="line">            &lt;!--拖拽我的标签--&gt;</span><br><span class="line">        &lt;Label  FontSize=<span class="string">&quot;15&quot;</span> HorizontalContentAlignment=<span class="string">&quot;Center&quot;</span></span><br><span class="line">               VerticalContentAlignment=<span class="string">&quot;Center&quot;</span> Width=<span class="string">&quot;200&quot;</span> Height=<span class="string">&quot;120&quot;</span> x:Name=<span class="string">&quot;mes&quot;</span> Content=<span class="string">&quot;早上好!&quot;</span>/&gt;</span><br><span class="line">        &lt;!--关闭按钮--&gt;</span><br><span class="line">        &lt;Button Command=<span class="string">&quot;Close&quot;</span> Canvas.Left=<span class="string">&quot;155&quot;</span> Canvas.Top=<span class="string">&quot;30&quot;</span>&gt;</span><br><span class="line">            &lt;Button.Template&gt;</span><br><span class="line">                &lt;ControlTemplate&gt;</span><br><span class="line">                    &lt;Canvas&gt;</span><br><span class="line">                        &lt;Rectangle Width=<span class="string">&quot;15&quot;</span> Height=<span class="string">&quot;15&quot;</span> Stroke=<span class="string">&quot;Black&quot;</span></span><br><span class="line">                                   RadiusX=<span class="string">&quot;3&quot;</span> RadiusY=<span class="string">&quot;3&quot;</span>&gt;</span><br><span class="line">                            &lt;Rectangle.Fill&gt;</span><br><span class="line">                                &lt;SolidColorBrush x:Name=<span class="string">&quot;myAnimateBrush&quot;</span> Color=<span class="string">&quot;Red&quot;</span>/&gt;</span><br><span class="line">                            &lt;/Rectangle.Fill&gt;</span><br><span class="line">                            </span><br><span class="line">                            </span><br><span class="line">                        &lt;/Rectangle&gt;</span><br><span class="line">                        &lt;Line X1=<span class="string">&quot;3&quot;</span> Y1=<span class="string">&quot;3&quot;</span> X2=<span class="string">&quot;12&quot;</span> Y2=<span class="string">&quot;12&quot;</span> Stroke=<span class="string">&quot;White&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                        &lt;Line X1=<span class="string">&quot;12&quot;</span> Y1=<span class="string">&quot;3&quot;</span> X2=<span class="string">&quot;3&quot;</span> Y2=<span class="string">&quot;12&quot;</span> Stroke=<span class="string">&quot;White&quot;</span> StrokeThickness=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">                    &lt;/Canvas&gt;</span><br><span class="line">                &lt;/ControlTemplate&gt;</span><br><span class="line">            &lt;/Button.Template&gt;</span><br><span class="line">        &lt;/Button&gt;</span><br><span class="line">    &lt;/Canvas&gt;</span><br><span class="line">&lt;/Window&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-路由事件</title>
    <link href="https://drfengling.github.io/qm/6f6c3460.html"/>
    <id>https://drfengling.github.io/qm/6f6c3460.html</id>
    <published>2022-11-23T07:34:40.000Z</published>
    <updated>2022-11-24T02:55:06.695Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="回顾-NET事件模型"><a href="#回顾-NET事件模型" class="headerlink" title="回顾.NET事件模型"></a>回顾.NET事件模型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">namespace BookModels</span><br><span class="line">&#123;</span><br><span class="line">    public delegate void WhiteBee(string param);//声明委托</span><br><span class="line">    public class XiaoLongNv</span><br><span class="line">    &#123;</span><br><span class="line">        public event WhiteBee WhiteBeeEvent;//玉峰事件</span><br><span class="line">        private string msg = <span class="string">&quot;I am in the bottom of JueQingGu&quot;</span>;</span><br><span class="line">        public void <span class="function"><span class="title">OnFlyBee</span></span>() &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;XiaoLongNv fly the bee in the bottom of JueQingGu,Hope Yangguo one day see.&quot;</span>);</span><br><span class="line">            WhiteBeeEvent(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class LaoWantong&#123;</span><br><span class="line">        public void ProcessBeeLetter(string msg) &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;LaoWantong: Samll Bee,Small Bee,dont fly.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class HuangRong &#123;</span><br><span class="line">        public void ProcessBeeLetter(string msg) &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Huangrong:\&quot;&#123;0&#125;\&quot;,that is ...&quot;</span>,msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class YangGuo &#123;</span><br><span class="line">        public void ProcessBeeLetter(string msg)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Yangguo:\&quot;&#123;0&#125;\&quot;,I Will get together with her!&quot;</span>,msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">Sign</span></span>() &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;YangGuo sadly say:Longer,where are you... ...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  XiaoLongNv longNv = new XiaoLongNv();</span><br><span class="line">            LaoWantong laoWantong = new LaoWantong();</span><br><span class="line">            HuangRong huangRong = new HuangRong();</span><br><span class="line">            YangGuo yangGuo = new YangGuo();</span><br><span class="line"></span><br><span class="line">            longNv.WhiteBeeEvent += laoWantong.ProcessBeeLetter;</span><br><span class="line">            longNv.WhiteBeeEvent+=huangRong.ProcessBeeLetter;</span><br><span class="line">            // longNv.WhiteBeeEvent+=yangGuo.ProcessBeeLetter;//没有订阅事件</span><br><span class="line">            longNv.OnFlyBee();</span><br><span class="line">            yangGuo.Sign();</span><br></pre></td></tr></table></figure><p>不过这种事件看起来不像.Net事件.改写后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">namespace BookModels</span><br><span class="line">&#123;</span><br><span class="line">    public class WhiteBeeEventArgs : EventArgs</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="built_in">readonly</span> string _msg;</span><br><span class="line">        public WhiteBeeEventArgs(string msg)</span><br><span class="line">        &#123;</span><br><span class="line">            _msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class XiaoLongNv2 &#123;</span><br><span class="line">        public event WhiteBeeEventHandler WhiteBeeEvent;</span><br><span class="line">        private string msg = <span class="string">&quot;I am in the bottom of JueQingGu&quot;</span>;</span><br><span class="line">        public void <span class="function"><span class="title">OnFlyBee</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;XiaoLongNv fly the bee in the bottom of JueQingGu,Hope Yangguo one day see.&quot;</span>);</span><br><span class="line">            WhiteBeeEventArgs args = new WhiteBeeEventArgs(msg);</span><br><span class="line">            WhiteBeeEvent(this, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class LaoWantong2</span><br><span class="line">    &#123;</span><br><span class="line">        public void ProcessBeeLetter(object sender,WhiteBeeEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;LaoWantong: Samll Bee,Small Bee,dont fly.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class HuangRong2</span><br><span class="line">    &#123;</span><br><span class="line">        public void ProcessBeeLetter(object sender,WhiteBeeEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Huangrong:\&quot;&#123;0&#125;\&quot;,that is ...&quot;</span>, e._msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public class Yangguo2 &#123;</span><br><span class="line">        public void ProcessBeeLetter(object sender,WhiteBeeEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            XiaoLongNv2 xiaoLongNv2 = sender as XiaoLongNv2;</span><br><span class="line">            <span class="keyword">if</span> (xiaoLongNv2 != null) &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Yangguo:\&quot;&#123;0&#125;\&quot;,I Will get together with her!&quot;</span>,e._msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">Sign</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;YangGuo sadly say:Longer,where are you... ...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">//声明委托</span><br><span class="line">    public delegate void WhiteBeeEventHandler(object sender, WhiteBeeEventArgs e);</span><br><span class="line">&#125;</span><br><span class="line">            XiaoLongNv2 xiaoLongNv2 = new XiaoLongNv2();</span><br><span class="line">            LaoWantong2 laoWantong2 = new LaoWantong2();</span><br><span class="line">            HuangRong2 huangRong2=new HuangRong2();</span><br><span class="line">            Yangguo2 yangguo2 = new Yangguo2();</span><br><span class="line"></span><br><span class="line">            XiaoLongNv2 xiaoLongNv21 = new XiaoLongNv2();</span><br><span class="line">            xiaoLongNv21.WhiteBeeEvent+=laoWantong2.ProcessBeeLetter;</span><br><span class="line">            xiaoLongNv21.WhiteBeeEvent += huangRong2.ProcessBeeLetter;</span><br><span class="line">            xiaoLongNv21.OnFlyBee();</span><br><span class="line">            yangguo2.Sign();</span><br></pre></td></tr></table></figure><p>1.委托类型名称以EventHandler结束,原型有一个void返回值并接受两个输入参数,即一个Object类型和一个EventArgs类型(或继承自EventArgs)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate void WhiteBeeEventHandler(object sender,WhiteBeeEventArgs e);</span><br></pre></td></tr></table></figure><p>2.事件的命名为委托去掉EventHandler之后剩余的部分.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public event WhiteBeeEventHandler WhiteBee;</span><br></pre></td></tr></table></figure><p>3.继承自EventArgs的类型应该以EventArgs结尾.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class WhiteBeeEventArgs:EventArgs&#123;</span><br><span class="line">public <span class="built_in">readonly</span> string _msg;</span><br><span class="line">public WhiteBeeEventArgs(string msg)&#123;</span><br><span class="line">this._msg=msg;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="路由事件的定义"><a href="#路由事件的定义" class="headerlink" title="路由事件的定义"></a>路由事件的定义</h3><p>以Button的Click事件为例.该事件是个路由事件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public abstract class ButtonBase:ContentControl,ICommandSource&#123;</span><br><span class="line">//路由事件的定义</span><br><span class="line">public static <span class="built_in">readonly</span> RoutedEvent ClickEvent;</span><br><span class="line">//传统的事件包装器</span><br><span class="line">public event RoutedEventHandler Click&#123;</span><br><span class="line">add&#123;</span><br><span class="line">base.AddHandler(ClickEvent,value);</span><br><span class="line">&#125;</span><br><span class="line">remove&#123;</span><br><span class="line">base.Removehandler(ClickEvent,value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//事件的注册</span><br><span class="line">static <span class="function"><span class="title">ButtonBase</span></span>()&#123;</span><br><span class="line">ClickEvent=EventManager.RegisterRoutedEvent(<span class="string">&quot;Click&quot;</span>,RoutingStrategy.Bubble,typeof(RoutedEventHandler),typeof(ButtonBase));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同依赖属性一样,路由事件也需要注册,不同的是使用EventManager.RegisterRoutedEvent方法.<br>同依赖属性,用户不会直接使用路由事件,而是使用传统的Clr事件.有两种方式关联事件及其处理函数.<br>在代码中,仍然按照原方法关联和解除关联事件处理函数(+=/-=).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Button b2=new Button();</span><br><span class="line">//关联事件及其处理函数</span><br><span class="line">b2.Click+=new RoutedEventHandler(Onb2Click);</span><br><span class="line">//事件处理函数</span><br><span class="line">void Onb2Click(object sender,RoutedEventArgs e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">*********************************************************</span><br><span class="line">Button b2=new Button();</span><br><span class="line">//关联事件及其处理函数</span><br><span class="line">b2.AddHandler(Button.ClickEvent,new RoutedEventHandler(Onb2Clcik));</span><br><span class="line">//事件处理函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>传统的事件触发往往直接调用其委托(因为事件的本质是委托),而路由事件则通过一个RaiseEvent方法触发,调用该方法后所有关联该事件的对象都会得到通知.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RoutedEventArgs e=new RoutedEventArgs(ClickEvent,this);</span><br><span class="line">base.RaiseEvent(e);</span><br></pre></td></tr></table></figure><p>路由事件通过EventManager.RegisterRoutedEvent方法注册,通过AddHandler和RemoveHandler来关联和解除关联的事件处理函数,通过RaiseEvent方法来触发事件,通过传统的CLR事件封装后供用户调用,使得用户同使用传统的CLR事件一样使用路由事件.</p><h3 id="路由事件的旅行"><a href="#路由事件的旅行" class="headerlink" title="路由事件的旅行"></a>路由事件的旅行</h3><p>1.路由事件的旅行策略<br>旅行当中,一般只出现两种角色:1.事件源.由其触发事件,是路由事件的起点.2.是事件监听者,通常针对监听的事件有一个相应的事件处理函数,当路由事件经过事件监听者,就好比经过一个客栈,要做短暂停留,由事件处理函数来处理该事件.<br>路由事件的策略有如下三种:<br>1.Bubbing:事件从事件源出发一路上溯直到根节点,很多路由事件使用该策略.<br>2.Direct 事件从事件源出发,围绕事件源转一圈结束.<br>3.Tunneling 事件源触发事件后,事件从根节点出发下沉直到事件源.</p><h4 id="改变旅行策略因素之一-事件处理函数"><a href="#改变旅行策略因素之一-事件处理函数" class="headerlink" title="改变旅行策略因素之一 事件处理函数"></a>改变旅行策略因素之一 事件处理函数</h4><p>最基本的路由事件处理函数原型<br>public delegate void RoutedEventHandler(Object sender,RoutedEventArgs e)<br>事件处理函数之间有微小差异.鼠标事件的处理函数原型<br>public delegate void MouseEventhandler(Object sender,MouseEventArgs e)<br>这种事件处理函数有如下两个特点<br>1.返回原型为void.<br>2.有两个参数,第一个是一个Object类型的对象.表示拥有该事件处理函数的对象.第二个是RoutedEventArgs或者是RoutedEventArgs的派生类.带有其路由事件的信息.<br>RoutedEventArgs结构包括4个成员变量.<br>Source 表明触发事件的源 如当键盘事件发生时,触发事件的源是当前获得焦点的对象.当鼠标事件发生时,触发事件的源是鼠标所在的最上层对象<br>OriginalSource 表明触发事件的源.一般来说OriginalSource和Source相同,区别在于Source表示逻辑树上的元素;OriginalSource是可视树中的元素.如单击窗口的边框,Source为Window,OriginalSource为Border.<br>RoutedEvent 路由事件对象<br>Handled 布尔值 为true 表示该事件已处理,这样可以停止路由事件.<br>Handled属性是改变路由事件旅行的元凶,一旦在某个事件处理函数中将Handled的值设置为true.路由事件就停止传递.<br>一个事件被标记为处理,事件处理函数则不可处理该事件,WPF提供了一种机制,即使事件被标记为处理,事件处理函数仍然可以处理.但是关联事件及其处理函数需要稍作处理.AddHandler重载了两个方法,其中之一如下,需要将第三个参数设为true.<br>public void Addhandler(RoutedEvent routedEvent,Delegate handler,bool handledEventsToo)</p><h4 id="改变旅行策略因素之二-类和实例事件处理函数"><a href="#改变旅行策略因素之二-类和实例事件处理函数" class="headerlink" title="改变旅行策略因素之二 类和实例事件处理函数"></a>改变旅行策略因素之二 类和实例事件处理函数</h4><p>事件处理函数有两种类型,一是前面所说的普通事件处理函数.二是通过EventManager.RegisterClassHandler方法将一个事件处理函数和一个类关联起来,这种事件处理函数,<br>称为类事件处理函数.其优先权高于前者.也就是说事件在旅行时,会先光临类事件处理函数,然后再光临类事件处理函数.</p><h3 id="路由事件示例"><a href="#路由事件示例" class="headerlink" title="路由事件示例"></a>路由事件示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">public class MySimpleButton:Button&#123;</span><br><span class="line">static <span class="function"><span class="title">MySimpleButton</span></span>()&#123;&#125;</span><br><span class="line">//创建和注册该事件,该事件路由策略为Bubble.</span><br><span class="line">public static <span class="built_in">readonly</span> RoutedEvent CustomClickEvent=EventManager.RegisterRoutedEvent(</span><br><span class="line"><span class="string">&quot;CustomClick&quot;</span>,RoutingStrategy.Bubble,typeof(RoutedEventHandler),typeof(MySimpleButton)</span><br><span class="line">);</span><br><span class="line">//Clr事件的包装器、</span><br><span class="line">public event RoutedEventHandler CustomClick&#123;</span><br><span class="line">add&#123;AddHandler(CustomClickEvent,value);&#125;</span><br><span class="line">remove&#123;RemoveHandler(CustomClickEvent,value);&#125;</span><br><span class="line">&#125;</span><br><span class="line">//触发CustomClickEvent</span><br><span class="line">void <span class="function"><span class="title">RaiseCustomClickEvent</span></span>()&#123;</span><br><span class="line">RoutedEventArgs newEventArgs=new RoutedEventArgs(MySimpleButton.CustomClickEvent);</span><br><span class="line">RaiseEvent(newEventArgs);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//OnClick触发CustomClickEvent</span><br><span class="line">protected override void <span class="function"><span class="title">OnClick</span></span>()&#123;</span><br><span class="line">RaiseCustomClickEvent();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;Window x:Class=<span class="string">&quot;WpfApp1.Window2&quot;</span></span><br><span class="line">        xmlns=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span><br><span class="line">        xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span><br><span class="line">        xmlns:d=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span><br><span class="line">        xmlns:mc=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span><br><span class="line">        xmlns:<span class="built_in">local</span>=<span class="string">&quot;clr-namespace:WpfApp1&quot;</span></span><br><span class="line">        xmlns:custom=<span class="string">&quot;clr-namespace:BookModels;assembly=BookModels&quot;</span></span><br><span class="line">        mc:Ignorable=<span class="string">&quot;d&quot;</span></span><br><span class="line">        Title=<span class="string">&quot;Window2&quot;</span> Height=<span class="string">&quot;450&quot;</span> Width=<span class="string">&quot;800&quot;</span> Loaded=<span class="string">&quot;Window_Loaded&quot;</span>&gt;</span><br><span class="line">    &lt;Grid Margin=<span class="string">&quot;3&quot;</span> custom:MySimpleButton.CustomClick=<span class="string">&quot;InsertList&quot;</span>  Name=<span class="string">&quot;grid1&quot;</span>&gt;</span><br><span class="line">        &lt;Grid.RowDefinitions&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">            &lt;RowDefinition Height=<span class="string">&quot;Auto&quot;</span>/&gt;</span><br><span class="line">        &lt;/Grid.RowDefinitions&gt;</span><br><span class="line">        &lt;custom:MySimpleButton x:Name=<span class="string">&quot;simpleBtn&quot;</span> CustomClick=<span class="string">&quot;InsertList&quot;</span>&gt;</span><br><span class="line">            MySimpleButton</span><br><span class="line">        &lt;/custom:MySimpleButton&gt;</span><br><span class="line">        &lt;ListBox Margin=<span class="string">&quot;5&quot;</span> Name=<span class="string">&quot;lstMessage&quot;</span> Grid.Row=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">        &lt;CheckBox Margin=<span class="string">&quot;5&quot;</span> Grid.Row=<span class="string">&quot;2&quot;</span> Name=<span class="string">&quot;chkHandle&quot;</span>&gt;Handle first event</span><br><span class="line">        &lt;/CheckBox&gt;</span><br><span class="line">        &lt;Button Grid.Row=<span class="string">&quot;3&quot;</span> HorizontalAlignment=<span class="string">&quot;Right&quot;</span> Margin=<span class="string">&quot;5&quot;</span> Padding=<span class="string">&quot;3&quot;</span></span><br><span class="line">                Click=<span class="string">&quot;Button_Click&quot;</span>&gt;Clear List</span><br><span class="line">        &lt;/Button&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br><span class="line"></span><br><span class="line">    public partial class Window2 : Window</span><br><span class="line">    &#123;</span><br><span class="line">        public <span class="function"><span class="title">Window2</span></span>()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            //MySimpleButton的类事件处理函数处理过Window能够得到通知</span><br><span class="line">            this.simpleBtn.ClassHandlerProcessed += SimpleBtn_ClassHandlerProcessed;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void SimpleBtn_ClassHandlerProcessed(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            eventCounter++;</span><br><span class="line">            string message = $<span class="string">&quot;#&#123;eventCounter&#125;:\r\n Windows Class Handler \r\n Sender:&#123;sender&#125;&quot;</span>;</span><br><span class="line">            lstMessage.Items.Add(message);</span><br><span class="line">        &#125;</span><br><span class="line">        private void ProcessHandlersToo(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            eventCounter++;</span><br><span class="line">            string message = $<span class="string">&quot;#&#123;eventCounter&#125;:\r\n ProcessHandlerToo \r\n Sender:&#123;sender&#125; \r\n Source:&#123;e.Source&#125; \r\n Original Source:&#123;e.OriginalSource&#125;&quot;</span>;</span><br><span class="line">            lstMessage.Items.Add(message);</span><br><span class="line">        &#125;</span><br><span class="line">        public int eventCounter = 0;</span><br><span class="line">        private void InsertList(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            eventCounter++;</span><br><span class="line">            string message=$<span class="string">&quot;#&#123;eventCounter&#125;:\r\n InsertList \r\n Sender:&#123;sender&#125; \r\n Source:&#123;e.Source&#125; \r\n Original Source:&#123;e.OriginalSource&#125;&quot;</span>;</span><br><span class="line">            lstMessage.Items.Add(message);</span><br><span class="line">            e.Handled = (bool)chkHandle.IsChecked;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            eventCounter = 0;</span><br><span class="line">            lstMessage.Items.Clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Window_Loaded(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            grid1.AddHandler(MySimpleButton.CustomClickEvent,new RoutedEventHandler(ProcessHandlersToo),<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-属性与依赖</title>
    <link href="https://drfengling.github.io/qm/b140a941.html"/>
    <id>https://drfengling.github.io/qm/b140a941.html</id>
    <published>2022-11-23T05:03:12.000Z</published>
    <updated>2022-11-23T07:33:48.157Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="属性与依赖"><a href="#属性与依赖" class="headerlink" title="属性与依赖"></a>属性与依赖</h3><p>依赖属性是一种类型为DependencyProperty的属性,其依赖属性标识则是依赖属性的实例.<br>1.DependencyObject:继承该类后才可以注册和拥有依赖属性<br>2.WPF属性系统:WPF通过提供一系列服务扩展普通的.Net属性.这些服务总称为WPF属性系统.<br>3..Net属性包装器:指属性的get和set的实现.在这个实现中均调用DependencyObject的GetValue和SetValue方法.<br>1.依赖属性对资源引用的支持<br>2.依赖属性对样式的支持<br>3.依赖属性对动画的支持<br>4.依赖属性对数据绑定的支持<br>5.依赖属性对属性值继承的支持<br>6.依赖属性对元数据重载的支持<br>依赖属性和普通.Net属性区别之一是有一个元数据对象.通过设置元数据对象,可以改变依赖属性的状态和行为.一般用到的元数据类是PropertyMetaData和FrameworkPropertyMetaData,前者是后者的基类.<br>PropertyMetaData—&gt;UIPropertyMetaData—&gt;FrameworkPropertyMetaData.<br>一般依赖属性的元数据类型为PropertyMetaData,而大部分控件的依赖属性,如按钮的WIdth及Background这样的依赖属性就会用到FrameworkPropertyMetaData元数据对象.<br>一般元数据对象包括如下类型的信息:<br>1.默认值<br>2.引用回调函数 其中PropertyChangedCallback,在属性值发生改变时调用;CoerceValueCallback用于限制属性值.<br>3.如果是框架级别的一些属性,则会有一些标识告知WPF该属性的某些状态信息.</p><p>7.依赖属性对WPF设计器的集成支持<br>###依赖属性的组成部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public static DependencyProperty Register(string name,Type propertyType,Type ownerType,PropertyMetadata typeMetadata,ValidateValueCallback validateValue validateValueCallback)</span><br></pre></td></tr></table></figure><p>第一个参数是指的属性名,这个名字和依赖属性相关的.Net属性名相同,第二个参数是指该.Net属性的类型.第三个属性是指该依赖属性属于什么类型.第四个参数是依赖属性的元数据.第五个参数是值验证的回调函数.该回调函数是负责检验值的最后一道关卡.</p><h3 id="自定义依赖属性"><a href="#自定义依赖属性" class="headerlink" title="自定义依赖属性"></a>自定义依赖属性</h3><p>实现依赖属性必须满足以下条件:<br>1.该类必须继承自DependencyObject类.只有DependencyObject类才可以注册和拥有依赖属性.<br>2.该类中必须定义一个public static readonly成员变量,类型为DependencyProperty.<br>3.该依赖属性必须以属性名+Property命名<br>4.必须调用DependencyProperty的注册方法,在WPF属性系统中注册该依赖属性或者使用依赖属性的AddOwner方法.两种方法均返回一个DependencyProperty类型的标识并将其保存在定义的DependencyProperty成员变量中.<br>5.为依赖属性实现一个.Net属性包装器.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//依赖属性</span><br><span class="line">public static <span class="built_in">readonly</span> DependencyProperty SpaceProperty;</span><br><span class="line">//.Net属性包装器</span><br><span class="line">public int Space&#123;<span class="built_in">set</span>&#123;setValue(SpaceProperty,value);&#125; get&#123;<span class="built_in">return</span> (int)GetValue(SpaceProperty);&#125;&#125;</span><br><span class="line">//静态的构造函数</span><br><span class="line">//定义元数据</span><br><span class="line">static SpaceButton&#123;</span><br><span class="line">FrameworkPropertyMetadata metadata=new FrameworkPropertyMetadata();</span><br><span class="line">metadata.DefaultValue=0;</span><br><span class="line">metadata.PropertyChangedCallback+=OnSpacePropertyChanged;</span><br><span class="line">//注册依赖属性</span><br><span class="line">SpaceProperty=DependencyProperty.Register(<span class="string">&quot;Space&quot;</span>,typeof(int),typeof(SpaceButton),metadata,ValidataSpaceValue);</span><br><span class="line">&#125;</span><br><span class="line">//值验证的回调函数</span><br><span class="line">static bool ValidateSpaceValue(object obj)&#123;</span><br><span class="line">int i=(int)obj;</span><br><span class="line"><span class="built_in">return</span> i&gt;=0;</span><br><span class="line">&#125;</span><br><span class="line">//属性值改变的回调函数</span><br><span class="line">static void OnSpacePropertyChanged(DependencyObject obj,DependencyPropertyChangedEventArgs args)&#123;</span><br><span class="line">SpaceButton btn=obj as SpaceButton;</span><br><span class="line">string txt=btn.Content as string;</span><br><span class="line"><span class="keyword">if</span>(txt==null)<span class="built_in">return</span>;</span><br><span class="line">btn.Content=btn.SpaceOutText(txt);</span><br><span class="line">&#125;</span><br><span class="line">//该方法为字符间距添加空格</span><br><span class="line">string SpaceOutText(string str)&#123;</span><br><span class="line"><span class="keyword">if</span>(str==null)<span class="built_in">return</span> null;</span><br><span class="line">StringBuilder build=new StringBuilder();</span><br><span class="line">//在其中添加Space个空格</span><br><span class="line">foreach(char ch <span class="keyword">in</span> str)&#123;</span><br><span class="line">build.Append(ch+new string(<span class="string">&#x27;  &#x27;</span>,Space));</span><br><span class="line"><span class="built_in">return</span> build.Tostring();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="为依赖属性增加属性值继承的特性"><a href="#为依赖属性增加属性值继承的特性" class="headerlink" title="为依赖属性增加属性值继承的特性."></a>为依赖属性增加属性值继承的特性.</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">static <span class="function"><span class="title">SpaceWindow</span></span>()&#123;</span><br><span class="line">FrameworkPropertyMetadata metadata=new FrameworkPropertyMetadata();</span><br><span class="line">metadata.Inherits=<span class="literal">true</span>;</span><br><span class="line">SpaceProperty=SpaceButton.SpaceProperty.AddOwner(typeof(SpaceWindow));</span><br><span class="line">SpaceProperty.OverriderMetadata(typeof(Window),metadata);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static <span class="built_in">readonly</span> DependencyProperty SpaceProperty;</span><br><span class="line">public int Space&#123;</span><br><span class="line"><span class="built_in">set</span>&#123;</span><br><span class="line">SetValue(SpaceProperty,value);</span><br><span class="line">&#125;</span><br><span class="line">get&#123;</span><br><span class="line"><span class="built_in">return</span> (int)GetValue(SpaceProperty);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册依赖属性Space不是通过注册而来,而是从SpaceButton的Space属性的AddOwner方法得来的.<br>即依赖属性可以选择把自身添加给其他属性,这是普通属性不可实现的.需要特别注意元数据不能再使用,必须新建一个,为了实现属性值继承,将Inherit标识为true.</p><h3 id="所有规则大排队"><a href="#所有规则大排队" class="headerlink" title="所有规则大排队"></a>所有规则大排队</h3><p>1.直接设置的值&gt;样式中触发器设置的值&gt;样式中Setter设置的值.</p><h3 id="依赖属性设置优先级列表"><a href="#依赖属性设置优先级列表" class="headerlink" title="依赖属性设置优先级列表."></a>依赖属性设置优先级列表.</h3><p>优先级列表.<br>1.限制 Coerce 2.动画 3. 本地值 包括再代码和Xaml中直接设置的值,以及动态资源引用和数据绑定.<br>4.模板的父类 TemplateParent Triggers Setters 在模板的父类中Triggers设置依赖属性值的优先级高于在Setter中设置依赖属性值.5.样式触发器 主要指在Application或者Page中的样式,不包括主题样式.<br>6.模板触发器 7.样式设置 8.主题样式 9.属性值继承 10.元数据的默认值</p><h3 id="附加属性和”等餐号”"><a href="#附加属性和”等餐号”" class="headerlink" title="附加属性和”等餐号”"></a>附加属性和”等餐号”</h3><h4 id="附加属性的本质"><a href="#附加属性的本质" class="headerlink" title="附加属性的本质"></a>附加属性的本质</h4><p>附加属性实质上是一个依赖属性,与普通的依赖属性相比有以下不同<br>1.注册不再是通过Register方法注册,而是通过RegisterAttached方法注册.<br>2.没有普通的.Net属性包装器,而是通过Get和Set属性名来实现属性包装.<br>3.没有普通的.Net属性.<br>一个附加属性IsBubbleSource</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static <span class="built_in">readonly</span> DependencyProperty IsBubbleSourceProperty=DependencyProperty.RegisterAttached(<span class="string">&quot;IsBubbleSource&quot;</span>,typeof(Boolean),typeof(AquariumObject),new FrameworkPropertyMetadata(<span class="literal">false</span>,FrameworkPropertyMetadataOptions.AffectsRender));</span><br><span class="line">public static void SetIsBubbleSource(UIElement element,Boolean value)&#123;</span><br><span class="line">element.SetValue(IsBubbleSourceProperty,value);</span><br><span class="line">&#125;</span><br><span class="line">public static Boolean GetIsBubbleSource(UIElement element)&#123;</span><br><span class="line"><span class="built_in">return</span> (Boolean)element.GetValue(IsBubbleSourceProperty);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>WPF-Xaml</title>
    <link href="https://drfengling.github.io/qm/2abf7006.html"/>
    <id>https://drfengling.github.io/qm/2abf7006.html</id>
    <published>2022-11-23T01:16:15.000Z</published>
    <updated>2022-11-23T03:52:09.291Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Do not just seek happiness for yourself.Seek happiness for all.Through kindness.Through mercy.</p><footer><strong>David Levithan，Wide Awake</strong></footer></blockquote><h3 id="附加属性"><a href="#附加属性" class="headerlink" title="附加属性"></a>附加属性</h3><p>附加属性是可以用于多个控件,但是在另一个类中定义的属性.附加属性的命名方式是”定义类型.属性”.这样可以让Xaml解析器将其与普通属性区分开.附加属性的设置可以使用Attribute和Property-Element语法.使用后者时类型必须是包含该属性的类型.</p><h3 id="Content属性"><a href="#Content属性" class="headerlink" title="Content属性"></a>Content属性</h3><h3 id="类型转换器"><a href="#类型转换器" class="headerlink" title="类型转换器"></a>类型转换器</h3><p>所有的类型转换器都派生自TypeConverter,TypeConverter提供的4个重要方法是CanConvertTo,CanConvertFrom,ConvertTo和ConvertFrom.<br>ConvertFrom方法将Xaml中的字符串转换为相应的CLR对象.ConvertTo方法将CLR对象转换为相应的字符串.CanConvertFrom用来检查能否从字符串转换为相应的CLR对象.CanConvertTo检查ClR对象能否转换为相应的字符串.可以true.</p><h4 id="自定义类型转换器"><a href="#自定义类型转换器" class="headerlink" title="自定义类型转换器"></a>自定义类型转换器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">[TypeConverter(typeof(MoneyConverter))]</span><br><span class="line">public class MoneyType</span><br><span class="line">&#123;</span><br><span class="line">    private string _value;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">MoneyType</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        _value = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public MoneyType(string value)</span><br><span class="line">    &#123;</span><br><span class="line">        _value = value;</span><br><span class="line">    &#125;</span><br><span class="line">    public override string <span class="function"><span class="title">ToString</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> _value.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">    public static MoneyType Parse(string value) &#123;</span><br><span class="line">        string str = (value as string).Trim();</span><br><span class="line">        <span class="keyword">if</span> (str[0] == <span class="string">&#x27;$&#x27;</span>) &#123;</span><br><span class="line">            string newprice = str.Remove(0,1);</span><br><span class="line">            double price = double.Parse(newprice);</span><br><span class="line">            <span class="built_in">return</span> new MoneyType(<span class="string">&quot;￥&quot;</span> + (price * 7.24).ToString(<span class="string">&quot;0.00&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[0] == <span class="string">&#x27;￥&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            string newprice = str.Remove(0, 1);</span><br><span class="line">            double price = double.Parse(newprice);</span><br><span class="line">            <span class="built_in">return</span> new MoneyType(<span class="string">&quot;$&quot;</span> + (price / 7.24).ToString(<span class="string">&quot;0.00&quot;</span>));</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            double price = double.Parse(str);</span><br><span class="line">            <span class="built_in">return</span> new MoneyType(<span class="string">&quot;&quot;</span>+price);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class MoneyConverter : TypeConverter</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 对象转换为Xaml字符串是否</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;context&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;sourceType&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sourceType==typeof(string))</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">return</span> base.CanConvertFrom(context, sourceType);</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// Xaml上下文转换为对应类型</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;context&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;destinationType&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (destinationType == typeof(string))</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">return</span> base.CanConvertTo(context, destinationType);</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 将Xaml上下文转换为对象</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;context&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;culture&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;value&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (value.GetType()!=typeof(string))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> base.ConvertFrom(context, culture, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> MoneyType.Parse((string)value);</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 将对象转为Xaml上下文</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;context&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;culture&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;value&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=<span class="string">&quot;destinationType&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(destinationType==typeof(string))</span><br><span class="line">        <span class="built_in">return</span> base.ConvertTo(context, culture, value, destinationType);</span><br><span class="line">        <span class="built_in">return</span> value.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="标记扩展"><a href="#标记扩展" class="headerlink" title="标记扩展"></a>标记扩展</h3><p>{x:null}表示一个空值 {x:static}代表引用一个类的静态变量 {}{HelloXaml}表示普通字符串</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WPF" scheme="https://drfengling.github.io/categories/WPF/"/>
    
    
    <category term="WPF" scheme="https://drfengling.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置详解及设置代理服务器</title>
    <link href="https://drfengling.github.io/qm/ec296788.html"/>
    <id>https://drfengling.github.io/qm/ec296788.html</id>
    <published>2022-05-12T07:45:38.000Z</published>
    <updated>2022-05-12T09:03:43.400Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>nginx配置详解及设置代理服务器</p><ol><li>nginx简单介绍<br>Nginx是⼀款⾃由的、开源的、⾼性能的HTTP服务器和反向代理服务器；同时也是⼀个IMAP、POP3、SMTP代理服务器；Nginx可以作<br>为⼀个HTTP服务器进⾏⽹站的发布处理，另外Nginx可以作为反向代理进⾏负载均衡的实现。通常我们主要使⽤nginx作为服务代理和负载<br>均衡。本⽂主要介绍如何使⽤nginx作为服务代理的。<span id="more"></span></li><li>nginx安装<br><a href="https://nginx.org/">https://nginx.org/</a><br>版本介绍<br><img src="/qm/ec296788/1.png"><br>Mainline version 处于开发阶段的版本<br>Stable version 属于比较稳定的版本,建议使用该版本<br>Legacy versions 一些旧的版本<br>下载后进行解压(Windows版本和Linux版本的目录结果都是一样的)<br><img src="/qm/ec296788/2.png"><br>conf 主要的配置文件<br>nginx.exe 启动文件<br>cmd命令行都可以启动nginx服务</li><li>nginx配置文件详解<br>Nginx服务代理和负载均衡都可以通过修改conf/nginx.conf文件进行配置</li><li>1nginx.conf文件配置属性详解<br>通过记事本或者其他软件打开时的内容如下所示(#号表示注释)<br>为了方便阅读,我直接在代码旁对各个属性进行解释<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义Nginx运⾏的⽤户和⽤户组</span></span><br><span class="line">user www www;</span><br><span class="line"><span class="comment">#nginx进程数，建议设置为等于CPU总核⼼数。</span></span><br><span class="line">worker_processes 8;</span><br><span class="line"><span class="comment">#全局错误⽇志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line">error_log /usr/local/nginx/logs/error.log info;</span><br><span class="line"><span class="comment">#进程pid⽂件</span></span><br><span class="line">pid /usr/local/nginx/logs/nginx.pid;</span><br><span class="line"><span class="comment">#指定进程可以打开的最⼤描述符：数⽬</span></span><br><span class="line"><span class="comment">#⼯作模式与连接数上限</span></span><br><span class="line"><span class="comment">#这个指令是指当⼀个nginx进程打开的最多⽂件描述符数⽬，理论值应该是最多打开⽂件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均</span></span><br><span class="line">匀，所以最好与<span class="built_in">ulimit</span> -n 的值保持⼀致。</span><br><span class="line"><span class="comment">#现在在linux 2.6内核下开启⽂件打开数为65535，worker_rlimit_nofile就相应应该填写65535。</span></span><br><span class="line"><span class="comment">#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。</span></span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型</span></span><br><span class="line">    <span class="comment">#是Linux 2.6以上版本内核中的⾼性能⽹络I/O模型，linux建议epoll，如果跑在FreeBSD上⾯，就⽤kqueue模型。</span></span><br><span class="line">    <span class="comment">#补充说明：</span></span><br><span class="line">    <span class="comment">#与apache相类，nginx针对不同的操作系统，有不同的事件模型</span></span><br><span class="line">    <span class="comment">#A）标准事件模型</span></span><br><span class="line">    <span class="comment">#Select、poll属于标准事件模型，如果当前系统不存在更有效的⽅法，nginx会选择select或poll</span></span><br><span class="line">    <span class="comment">#B）⾼效事件模型</span></span><br><span class="line">    <span class="comment">#Kqueue：使⽤于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使⽤双处理器的MacOS X系统使⽤kqueue可能会造成内核崩溃。</span></span><br><span class="line">    <span class="comment">#Epoll：使⽤于Linux内核2.6版本及以后的系统。</span></span><br><span class="line">    <span class="comment">#/dev/poll：使⽤于Solaris 7 11/99+，HP/UX 11.22+ (eventport)，IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。</span></span><br><span class="line">    <span class="comment">#Eventport：使⽤于Solaris 10。为了防⽌出现内核崩溃的问题，有必要安装安全补丁。</span></span><br><span class="line">    use epoll;</span><br><span class="line">    <span class="comment">#单个进程最⼤连接数（最⼤连接数=连接数*进程数）</span></span><br><span class="line">    <span class="comment">#根据硬件调整，和前⾯⼯作进程配合起来⽤，尽量⼤，但是别把cpu跑到100%就⾏。每个进程允许的最多连接数，理论上每台nginx服务器的最⼤连接数为</span></span><br><span class="line">。</span><br><span class="line">    worker_connections 65535;</span><br><span class="line">    <span class="comment">#keepalive超时时间。</span></span><br><span class="line">    keepalive_timeout 60;</span><br><span class="line">    <span class="comment">#客户端请求头部的缓冲区⼤⼩。这个可以根据你的系统分页⼤⼩来设置，⼀般⼀个请求头的⼤⼩不会超过1k，不过由于⼀般系统分页都要⼤于1k，所以这⾥</span></span><br><span class="line">设置为分页⼤⼩。</span><br><span class="line">    <span class="comment">#分页⼤⼩可以⽤命令getconf PAGESIZE 取得。</span></span><br><span class="line">    <span class="comment">#[root@web001 ~]# getconf PAGESIZE</span></span><br><span class="line">    <span class="comment">#4096</span></span><br><span class="line">    <span class="comment">#但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页⼤⼩”的整倍数。</span></span><br><span class="line">    client_header_buffer_size 4k;</span><br><span class="line">    <span class="comment">#这个将为打开⽂件指定缓存，默认是没有启⽤的，max指定缓存数量，建议和打开⽂件数⼀致，inactive是指经过多长时间⽂件没被请求后删除缓存。</span></span><br><span class="line">open_file_cache max=65535 inactive=60s;</span><br><span class="line">    <span class="comment">#这个是指多长时间检查⼀次缓存的有效信息。</span></span><br><span class="line">    <span class="comment">#语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使⽤字段:http, server, location 这个指令指定了何时需要检查open_file_cache中缓存项</span></span><br><span class="line">⽬的有效信息.</span><br><span class="line">    open_file_cache_valid 80s;</span><br><span class="line">    <span class="comment">#open_file_cache指令中的inactive参数时间内⽂件的最少使⽤次数，如果超过这个数字，⽂件描述符⼀直是在缓存中打开的，如上例，如果有⼀个⽂件在ina</span></span><br><span class="line">ctive时间内⼀次没被使⽤，它将被移除。</span><br><span class="line">    <span class="comment">#语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1 使⽤字段:http, server, location  这个指令指定了在open_file_cache指令⽆</span></span><br><span class="line">效的参数中⼀定的时间范围内可以使⽤的最⼩⽂件数,如果使⽤更⼤的值,⽂件描述符在cache中总是打开状态.</span><br><span class="line">    open_file_cache_min_uses 1;</span><br><span class="line">    <span class="comment">#语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off 使⽤字段:http, server, location 这个指令指定是否在搜索⼀个⽂件是记录cache错</span></span><br><span class="line">误.</span><br><span class="line">    open_file_cache_errors on;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#设定http服务器，利⽤它的反向代理功能提供负载均衡⽀持</span></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#⽂件扩展名与⽂件类型映射表</span></span><br><span class="line">    include mime.types;</span><br><span class="line">    <span class="comment">#默认⽂件类型</span></span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    <span class="comment">#默认编码</span></span><br><span class="line">    <span class="comment">#charset utf-8;</span></span><br><span class="line">    <span class="comment">#服务器名字的hash表⼤⼩</span></span><br><span class="line">    <span class="comment">#保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表</span></span><br><span class="line">的⼤⼩，并且是⼀路处理器缓存⼤⼩的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找<span class="built_in">hash</span>表键值成为可能。如果<span class="built_in">hash</span> bucket size等于⼀路处</span><br><span class="line">理器缓存的⼤⼩，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第⼀次是确定存储单元的地址，第⼆次是在存储单元中查找键值。因此，如果</span><br><span class="line">Nginx给出需要增⼤<span class="built_in">hash</span> max size 或 <span class="built_in">hash</span> bucket size的提⽰，那么⾸要的是增⼤前⼀个参数的⼤⼩.</span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    <span class="comment">#客户端请求头部的缓冲区⼤⼩。这个可以根据你的系统分页⼤⼩来设置，⼀般⼀个请求的头部⼤⼩不会超过1k，不过由于⼀般系统分页都要⼤于1k，所以这</span></span><br><span class="line">⾥设置为分页⼤⼩。分页⼤⼩可以⽤命令getconf PAGESIZE取得。</span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    <span class="comment">#客户请求头缓冲⼤⼩。nginx默认会⽤client_header_buffer_size这个buffer来读取header值，如果header过⼤，它会使⽤large_client_header_buffers来读</span></span><br><span class="line">取。</span><br><span class="line">    large_client_header_buffers 4 64k;</span><br><span class="line">    <span class="comment">#设定通过nginx上传⽂件的⼤⼩</span></span><br><span class="line">    client_max_body_size 8m;</span><br><span class="line">    <span class="comment">#开启⾼效⽂件传输模式，sendfile指令指定nginx是否调⽤sendfile函数来输出⽂件，对于普通应⽤设为 on，如果⽤来进⾏下载等应⽤磁盘IO重负载应⽤，可</span></span><br><span class="line">设置为off，以平衡磁盘与⽹络I/O处理速度，降低系统的负载。注意：如果图⽚显⽰不正常把这个改成off。</span><br><span class="line">    <span class="comment">#sendfile指令指定 nginx 是否调⽤sendfile 函数（zero copy ⽅式）来输出⽂件，对于普通应⽤，必须设为on。如果⽤来进⾏下载等应⽤磁盘IO重负载应⽤，</span></span><br><span class="line">可设置为off，以平衡磁盘与⽹络IO处理速度，降低系统<span class="built_in">uptime</span>。</span><br><span class="line">    sendfile on;</span><br><span class="line">    <span class="comment">#开启⽬录列表访问，合适下载服务器，默认关闭。</span></span><br><span class="line">    autoindex on;</span><br><span class="line">    <span class="comment">#此选项允许或禁⽌使⽤socke的TCP_CORK的选项，此选项仅在使⽤sendfile的时候使⽤</span></span><br><span class="line">    tcp_nopush on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    <span class="comment">#长连接超时时间，单位是秒</span></span><br><span class="line">    keepalive_timeout 120;</span><br><span class="line">    <span class="comment">#FastCGI相关参数是为了改善⽹站的性能：减少资源占⽤，提⾼访问速度。下⾯参数看字⾯意思都能理解。</span></span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 128k;</span><br><span class="line">    <span class="comment">#gzip模块设置</span></span><br><span class="line">    gzip on; <span class="comment">#开启gzip压缩输出</span></span><br><span class="line">    gzip_min_length 1k;    <span class="comment">#最⼩压缩⽂件⼤⼩</span></span><br><span class="line">gzip_buffers 4 16k;    <span class="comment">#压缩缓冲区</span></span><br><span class="line">    gzip_http_version 1.0;    <span class="comment">#压缩版本（默认1.1，前端如果是squid2.5请使⽤1.0）</span></span><br><span class="line">    gzip_comp_level 2;    <span class="comment">#压缩等级</span></span><br><span class="line">    gzip_types text/plain application/x-javascript text/css application/xml;    <span class="comment">#压缩类型，默认就已经包含textml，所以下⾯就不⽤再写了，写上去也不会有问题</span></span><br><span class="line">，但是会有⼀个warn。</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    <span class="comment">#开启限制IP连接数的时候需要使⽤</span></span><br><span class="line">    <span class="comment">#limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line">    <span class="comment">#负载均衡配置</span></span><br><span class="line">    upstream piao.jd.com &#123;</span><br><span class="line">        <span class="comment">#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表⽰权值，权值越⾼被分配到的⼏率越⼤。</span></span><br><span class="line">        server 192.168.80.121:80 weight=3;</span><br><span class="line">        server 192.168.80.122:80 weight=2;</span><br><span class="line">        server 192.168.80.123:80 weight=3;</span><br><span class="line">        <span class="comment">#nginx的upstream⽬前⽀持4种⽅式的分配</span></span><br><span class="line">        <span class="comment">#1、轮询（默认）</span></span><br><span class="line">        <span class="comment">#每个请求按时间顺序逐⼀分配到不同的后端服务器，如果后端服务器down掉，能⾃动剔除。</span></span><br><span class="line">        <span class="comment">#2、weight</span></span><br><span class="line">        <span class="comment">#指定轮询⼏率，weight和访问⽐率成正⽐，⽤于后端服务器性能不均的情况。</span></span><br><span class="line">        <span class="comment">#例如：</span></span><br><span class="line">        <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">        <span class="comment">#    server 192.168.0.14 weight=10;</span></span><br><span class="line">        <span class="comment">#    server 192.168.0.15 weight=10;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment">#2、ip_hash</span></span><br><span class="line">        <span class="comment">#每个请求按访问ip的hash结果分配，这样每个访客固定访问⼀个后端服务器，可以解决session的问题。</span></span><br><span class="line">        <span class="comment">#例如：</span></span><br><span class="line">        <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">        <span class="comment">#    ip_hash;</span></span><br><span class="line">        <span class="comment">#    server 192.168.0.14:88;</span></span><br><span class="line">        <span class="comment">#    server 192.168.0.15:80;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment">#3、fair（第三⽅）</span></span><br><span class="line">        <span class="comment">#按后端服务器的响应时间来分配请求，响应时间短的优先分配。</span></span><br><span class="line">        <span class="comment">#upstream backend &#123;</span></span><br><span class="line">        <span class="comment">#    server server1;</span></span><br><span class="line">        <span class="comment">#    server server2;</span></span><br><span class="line">        <span class="comment">#    fair;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment">#4、url_hash（第三⽅）</span></span><br><span class="line">        <span class="comment">#按访问url的hash结果来分配请求，使每个url定向到同⼀个后端服务器，后端服务器为缓存时⽐较有效。</span></span><br><span class="line">        <span class="comment">#例：在upstream中加⼊hash语句，server语句中不能写⼊weight等其他的参数，hash_method是使⽤的hash算法</span></span><br><span class="line">        <span class="comment">#upstream backend &#123;</span></span><br><span class="line">        <span class="comment">#    server squid1:3128;</span></span><br><span class="line">        <span class="comment">#    server squid2:3128;</span></span><br><span class="line">        <span class="comment">#    hash $request_uri;</span></span><br><span class="line">        <span class="comment">#    hash_method crc32;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment">#tips:</span></span><br><span class="line">        <span class="comment">#upstream bakend&#123;#定义负载均衡设备的Ip及设备状态&#125;&#123;</span></span><br><span class="line">        <span class="comment">#    ip_hash;</span></span><br><span class="line">        <span class="comment">#    server 127.0.0.1:9090 down;</span></span><br><span class="line">        <span class="comment">#    server 127.0.0.1:8080 weight=2;</span></span><br><span class="line">        <span class="comment">#    server 127.0.0.1:6060;</span></span><br><span class="line">        <span class="comment">#    server 127.0.0.1:7070 backup;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment">#在需要使⽤负载均衡的server中增加 proxy_pass http://bakend/;</span></span><br><span class="line">        <span class="comment">#每个设备的状态设置为:</span></span><br><span class="line">        <span class="comment">#1.down表⽰单前的server暂时不参与负载</span></span><br><span class="line">        <span class="comment">#2.weight为weight越⼤，负载的权重就越⼤。</span></span><br><span class="line">        <span class="comment">#3.max_fails：允许请求失败的次数默认为1.当超过最⼤次数时，返回proxy_next_upstream模块定义的错误</span></span><br><span class="line">        <span class="comment">#4.fail_timeout:max_fails次失败后，暂停的时间。</span></span><br><span class="line">        <span class="comment">#5.backup：其它所有的⾮backup机器down或者忙的时候，请求backup机器。所以这台机器压⼒会最轻。</span></span><br><span class="line">nginx⽀持同时设置多组的负载均衡，⽤来给不⽤的server来使⽤。</span><br><span class="line">        <span class="comment">#client_body_in_file_only设置为On 可以讲client post过来的数据记录到⽂件中⽤来做debug</span></span><br><span class="line">        <span class="comment">#client_body_temp_path设置记录⽂件的⽬录可以设置最多3层⽬录</span></span><br><span class="line">        <span class="comment">#location对URL进⾏匹配.可以进⾏重定向或者进⾏新的代理负载均衡</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#虚拟主机的配置</span></span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#监听端⼝</span></span><br><span class="line">        listen 80;</span><br><span class="line">        <span class="comment">#域名可以有多个，⽤空格隔开</span></span><br><span class="line">        server_name www.jd.com jd.com;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root /data/www/jd;</span><br><span class="line">        <span class="comment">#对******进⾏负载均衡</span></span><br><span class="line">        location ~ .*.(php|php5)?$</span><br><span class="line">        &#123;</span><br><span class="line">            fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#图⽚缓存时间设置</span></span><br><span class="line">        location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 10d;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#JS和CSS缓存时间设置</span></span><br><span class="line">        location ~ .*.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 1h;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#⽇志格式设定</span></span><br><span class="line">        <span class="comment">#$remote_addr与$http_x_forwarded_for⽤以记录客户端的ip地址；</span></span><br><span class="line">        <span class="comment">#$remote_user：⽤来记录客户端⽤户名称；</span></span><br><span class="line">        <span class="comment">#$time_local：⽤来记录访问时间与时区；</span></span><br><span class="line">        <span class="comment">#$request：⽤来记录请求的url与http协议；</span></span><br><span class="line">        <span class="comment">#$status：⽤来记录请求状态；成功是200，</span></span><br><span class="line">        <span class="comment">#$body_bytes_sent ：记录发送给客户端⽂件主体内容⼤⼩；</span></span><br><span class="line">        <span class="comment">#$http_referer：⽤来记录从那个页⾯链接访问过来的；</span></span><br><span class="line">        <span class="comment">#$http_user_agent：记录客户浏览器的相关信息；</span></span><br><span class="line">        <span class="comment">#通常web服务器放在反向代理的后⾯，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器</span></span><br><span class="line">在转发请求的http头信息中，可以增加x_forwarded_for信息，⽤以记录原有客户端的IP地址和原来客户端的请求的服务器地址。</span><br><span class="line">        log_format access <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">        <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">        <span class="string">&#x27;&quot;$http_user_agent&quot; $http_x_forwarded_for&#x27;</span>;</span><br><span class="line">        <span class="comment">#定义本虚拟主机的访问⽇志</span></span><br><span class="line">        access_log  /usr/local/nginx/logs/host.access.log  main;</span><br><span class="line">        access_log  /usr/local/nginx/logs/host.access.404.<span class="built_in">log</span>  log404;</span><br><span class="line">        <span class="comment">#对 &quot;/&quot; 启⽤反向代理</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:88;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取⽤户真实IP</span></span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="comment">#以下是⼀些反向代理的配置，可选。</span></span><br><span class="line">proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="comment">#允许客户端请求的最⼤单⽂件字节数</span></span><br><span class="line">            client_max_body_size 10m;</span><br><span class="line">            <span class="comment">#缓冲区代理缓冲⽤户端请求的最⼤字节数，</span></span><br><span class="line">            <span class="comment">#如果把它设置为⽐较⼤的数值，例如256k，那么，⽆论使⽤firefox还是IE浏览器，来提交任意⼩于256k的图⽚，都很正常。如果注释该指令，使⽤默</span></span><br><span class="line">认的client_body_buffer_size设置，也就是操作系统页⾯⼤⼩的两倍，8k或者16k，问题就出现了。</span><br><span class="line">            <span class="comment">#⽆论使⽤firefox4.0还是IE8.0，提交⼀个⽐较⼤，200k左右的图⽚，都返回500 Internal Server Error错误</span></span><br><span class="line">            client_body_buffer_size 128k;</span><br><span class="line">            <span class="comment">#表⽰使nginx阻⽌HTTP应答代码为400或者更⾼的应答。</span></span><br><span class="line">            proxy_intercept_errors on;</span><br><span class="line">            <span class="comment">#后端服务器连接的超时时间_发起握⼿等候响应超时时间</span></span><br><span class="line">            <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">            proxy_connect_timeout 90;</span><br><span class="line">            <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">            <span class="comment">#后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据</span></span><br><span class="line">            proxy_send_timeout 90;</span><br><span class="line">            <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">            <span class="comment">#连接成功后_等候后端服务器响应时间_其实已经进⼊后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）</span></span><br><span class="line">            proxy_read_timeout 90;</span><br><span class="line">            <span class="comment">#设置代理服务器（nginx）保存⽤户头信息的缓冲区⼤⼩</span></span><br><span class="line">            <span class="comment">#设置从被代理服务器读取的第⼀部分应答的缓冲区⼤⼩，通常情况下这部分应答中包含⼀个⼩的应答头，默认情况下这个值的⼤⼩为指令proxy_buffer</span></span><br><span class="line">s中指定的⼀个缓冲区的⼤⼩，不过可以将其设置为更⼩</span><br><span class="line">            proxy_buffer_size 4k;</span><br><span class="line">            <span class="comment">#proxy_buffers缓冲区，⽹页平均在32k以下的设置</span></span><br><span class="line">            <span class="comment">#设置⽤于读取应答（来⾃被代理服务器）的缓冲区数⽬和⼤⼩，默认情况也为分页⼤⼩，根据操作系统的不同可能是4k或者8k</span></span><br><span class="line">            proxy_buffers 4 32k;</span><br><span class="line">            <span class="comment">#⾼负荷下缓冲⼤⼩（proxy_buffers*2）</span></span><br><span class="line">            proxy_busy_buffers_size 64k;</span><br><span class="line">            <span class="comment">#设置在写⼊proxy_temp_path时数据的⼤⼩，预防⼀个⼯作进程在传递⽂件时阻塞太长</span></span><br><span class="line">            <span class="comment">#设定缓存⽂件夹⼤⼩，⼤于这个值，将从upstream服务器传</span></span><br><span class="line">            proxy_temp_file_write_size 64k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">        location /NginxStatus &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">            access_log on;</span><br><span class="line">            auth_basic <span class="string">&quot;NginxStatus&quot;</span>;</span><br><span class="line">            auth_basic_user_file confpasswd;</span><br><span class="line">            <span class="comment">#htpasswd⽂件的内容可以⽤apache提供的htpasswd⼯具来产⽣。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#本地动静分离反向代理配置</span></span><br><span class="line">        <span class="comment">#所有jsp的页⾯均交由tomcat或resin处理</span></span><br><span class="line">        location ~ .(jsp|jspx|<span class="keyword">do</span>)?$ &#123;</span><br><span class="line">            proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#所有静态⽂件由nginx直接读取不经过tomcat或resin</span></span><br><span class="line">        location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|</span><br><span class="line">        pdf|xls|mp3|wma)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 15d;</span><br><span class="line">&#125;</span><br><span class="line">        location ~ .*.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 1h;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>上⾯的⼀些配置详解仅供参考学习</li><li>2 配置服务代理：<br>第⼀步：打开nginx.conf⽂件，修改配置⽂件<br>为了⽅便阅读，我把⼀些不⽤的配置给删除了<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#http结构下可以有多个server。请求进来确定使⽤哪⼀个 server由 server_name 确定</span></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    server &#123; <span class="comment">#第⼀个server</span></span><br><span class="line">        listen       81;<span class="comment">#nginx的监听端⼝为81</span></span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8001;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location ~ /PMS/ &#123;</span><br><span class="line">          proxy_pass  http://localhost:8080; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>配置过程的注意事项：</li><li>1 nginx启动等命令</li><li>配置好后，需要重新启动nginx（来到nginx.exe⽂件下打开cmd界⾯）：<br>关闭的命令：nginx.exe - s stop</li><li>启动命令：nginx.exe</li><li>重新加载配置命令：nginx.exe - s reload</li><li>2 location 详解</li><li>2.1 location介绍<br>location :⼀个server下可以有多个location ，⽤来匹配 同⼀个域名下不同uri的访问<br>root 表⽰本地的根⽬录 ,可以写相对路径 也可以写绝对路径如 e：/nginx/html ；<br>index :访问主页 后⾯如果跟有多个页⾯ 则会依次判断 如果第⼀个不存在 则向后匹配；<br>proxy_pass ：转发 后跟系统地址</li><li>2.2 location匹配原则<br>location表达式<br>syntax: location [=|~ | <del>* |^</del>|@] /uri/ { - }<br>分为两种匹配模式，普通字符串匹配，正则匹配<br>⽆开头引量字符或以=开头表⽰普通字符电匹配<br>以~ 或 ~ * 开头表⽰正则匹配，~ * 表⽰不区分⼤⼩写<br>多个locati on时匹配规则<br>总体是先普通后正则原则，只识别URI部分，例如请求为/test/1/abc . do?arg=xxx</li><li>先查找是否有=开头的精确匹配。即Location = /test/1/abc.do {…}</li><li>再查找普通匹配，以最⼤前缀为规则，如有以下两个location<br>location /test/ {…}<br>location /test/1/ {…}<br>则匹配后⼀项</li><li>匹配到⼀个普通格式后，搜索并未结束。⽽是暂存当前结果，并继续再搜索正则模式</li><li>在所有正则模式lacation中找到第⼀个匹配项后，以此四配项为最终结果<br>所以正则匹配项匹配规则受定义前后顺序影响。但普通匹配不会</li><li>如果未找到正则匹配项，则以3中缓存的结果为最终结果</li><li>如果⼀个匹配都没有，返回404<br>location =/ {…} 与location / {…} 的差别<br>前⼀个是精确匹配，只响应/请求，所有/xxx类请求不会以前缀匹配形式匹配到它<br>⽽后⼀个正相反，所有请求必然都是以/开头，所以没有其它匹配结果时⼀⼆定会执⾏到它<br>location A- 1 {…} A-意思是⾲正则。表⽰匹配到此模式后不再继线正则搜索<br>#所有如果这样配置，相当于关团了正则匹配功能<br>#因为⼀个请求在普通匹配规则下没得到其它普通匹配结果时，最終匹配到这⾥<br>⽽这个^-指令⼜相当于不允许正则，.机当于匹配到此为⽌/test/abc.jsp</li></ol><p>**特别强调⼀点<br>在配置 proxy_pass 记得在url不要加上斜杠/</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;nginx配置详解及设置代理服务器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;nginx简单介绍&lt;br&gt;Nginx是⼀款⾃由的、开源的、⾼性能的HTTP服务器和反向代理服务器；同时也是⼀个IMAP、POP3、SMTP代理服务器；Nginx可以作&lt;br&gt;为⼀个HTTP服务器进⾏⽹站的发布处理，另外Nginx可以作为反向代理进⾏负载均衡的实现。通常我们主要使⽤nginx作为服务代理和负载&lt;br&gt;均衡。本⽂主要介绍如何使⽤nginx作为服务代理的。</summary>
    
    
    
    <category term="Web服务" scheme="https://drfengling.github.io/categories/Web%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="Nginx" scheme="https://drfengling.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>C#WCF方向(三)</title>
    <link href="https://drfengling.github.io/qm/31480aad.html"/>
    <id>https://drfengling.github.io/qm/31480aad.html</id>
    <published>2022-05-06T06:27:39.000Z</published>
    <updated>2022-05-12T09:04:07.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul><li>序列化机制</li><li>数据契约</li><li>消息契约</li><li>Demo<span id="more"></span><h3 id="序列化-Serialization"><a href="#序列化-Serialization" class="headerlink" title="序列化 Serialization"></a>序列化 Serialization</h3>A格式 转换 B格式<h3 id="Transformer"><a href="#Transformer" class="headerlink" title="Transformer"></a>Transformer</h3><h4 id="序列化器"><a href="#序列化器" class="headerlink" title="序列化器"></a>序列化器</h4></li></ul><p>1.BinaryFormatter 二进制平台<br>2.SoapFormatter SOAP<br>3.XmlSerializer Xml强大的控制 类型有限<br>4.DataContractSerializer WCF优化<br>5.NetDataContractSerializer WCF二进制<br>6.DataContractJsonSerializer JSON</p><h4 id="WCF序列化过程"><a href="#WCF序列化过程" class="headerlink" title="WCF序列化过程"></a>WCF序列化过程</h4><p>参数对象 序列化 传输 反序列化 执行操作 返回结果 序列化 传输</p><h3 id="数据契约"><a href="#数据契约" class="headerlink" title="数据契约"></a>数据契约</h3><h3 id="消息契约"><a href="#消息契约" class="headerlink" title="消息契约"></a>消息契约</h3><ul><li>允许完全控制消息体</li><li>SOAP消息头 Header</li><li>SOAP消息体 Body<h4 id="消息契约示例"><a href="#消息契约示例" class="headerlink" title="消息契约示例"></a>消息契约示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class MyMessage&#123;</span><br><span class="line">[MessageHeader]</span><br><span class="line">public string Operation;</span><br><span class="line">[MessageHeader]</span><br><span class="line">public string Name;</span><br><span class="line">[MessageBodyMember]</span><br><span class="line">public int Age;</span><br><span class="line">[MessageBodyMember]</span><br><span class="line">public string Home;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="WCF序列化器-支持的数据类型"><a href="#WCF序列化器-支持的数据类型" class="headerlink" title="WCF序列化器 支持的数据类型"></a>WCF序列化器 支持的数据类型</h4></li><li>无参构造函数的Pulbic类</li><li>数据契约类</li><li>集合类:Ienumerable,IDictionary,CollectionDataContract</li><li>枚举类</li><li>.NET基元类: Byte,Sbyte,Int16,Int32等</li><li>SerializableAttribute 属性标记的类型</li><li>原始XML类型和ADO.NET关系数据的类型</li></ul><h4 id="WCF使用XmlSerializer"><a href="#WCF使用XmlSerializer" class="headerlink" title="WCF使用XmlSerializer"></a>WCF使用XmlSerializer</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ServiceContract]</span><br><span class="line">[XmlSerializerFormat]</span><br><span class="line">public interface MyService&#123;</span><br><span class="line">[OperationContract]</span><br><span class="line">[XmlSerializerFormat]</span><br><span class="line">void MyMethod();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C-使用XmlSerializer"><a href="#C-使用XmlSerializer" class="headerlink" title="C#使用XmlSerializer"></a>C#使用XmlSerializer</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">XmlSerializer serializer=new XmlSerializer(typeof(Order));</span><br><span class="line">TextWriter writer=new StreamWriter(filename);</span><br><span class="line">Order order=new Order();</span><br><span class="line">serializer.Serialize(writer,po);</span><br><span class="line">writer.Close();</span><br></pre></td></tr></table></figure><h4 id="C-中使用DataContractSerializer"><a href="#C-中使用DataContractSerializer" class="headerlink" title="C#中使用DataContractSerializer"></a>C#中使用DataContractSerializer</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FileStream writer=new FileStream(filename,FileMode.Create);</span><br><span class="line">DataContractSerializer ser=new DataContractSerializer(typeof(Person));</span><br><span class="line">ser.WriteObject(writer,pl);</span><br><span class="line">writer.Close();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;序列化机制&lt;/li&gt;
&lt;li&gt;数据契约&lt;/li&gt;
&lt;li&gt;消息契约&lt;/li&gt;
&lt;li&gt;Demo</summary>
    
    
    
    <category term="C#" scheme="https://drfengling.github.io/categories/C/"/>
    
    
    <category term="WCF" scheme="https://drfengling.github.io/tags/WCF/"/>
    
  </entry>
  
  <entry>
    <title>C#WCF方向(二)</title>
    <link href="https://drfengling.github.io/qm/4fbb2a86.html"/>
    <id>https://drfengling.github.io/qm/4fbb2a86.html</id>
    <published>2022-05-04T01:24:05.000Z</published>
    <updated>2022-05-06T02:08:58.851Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>1.终结点 Endpoint<br>2.契约 Contract<br>3.宿主 Host<br>4.绑定 Binding<br>5.Demo:定义契约,终结点,配置绑定</p><span id="more"></span><h3 id="必备知识"><a href="#必备知识" class="headerlink" title="必备知识"></a>必备知识</h3><p>1.了解.Net Framework<br>2.了解Asp.net应用程序开发<br>3.熟悉Visual Studio</p><h3 id="可选知识"><a href="#可选知识" class="headerlink" title="可选知识"></a>可选知识</h3><p>1.Enterprise Services(COM+)<br>2..Net Remoting<br>3.Asp.Net web Service(ASMX)</p><h3 id="终结点-EndPoint"><a href="#终结点-EndPoint" class="headerlink" title="终结点 EndPoint"></a>终结点 EndPoint</h3><p>1.2种类型 终结点</p><ul><li>元数据终结点 </li><li>普通终结点</li></ul><h3 id="地址-Address"><a href="#地址-Address" class="headerlink" title="地址 Address"></a>地址 Address</h3><ul><li>相对地址</li><li>绝对地址</li><li>基地址 BaseAddress 基础地址 (下面<a href="http://localhost:6054/">http://localhost:6054</a>就是基地址)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;endpoint address=<span class="string">&quot;http://localhost:6054/ServiceDemo.svc&quot;</span></span><br><span class="line"> binding=<span class="string">&quot;basicHttpBinding&quot;</span> bindingConfiguration=<span class="string">&quot;BasicHttpBinding_IServiceDemo&quot;</span></span><br><span class="line"> contract=<span class="string">&quot;ServiceReferenceDemo.IServiceDemo&quot;</span> name=<span class="string">&quot;BasicHttpBinding_IServiceDemo&quot;</span>/&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="绑定-Binding"><a href="#绑定-Binding" class="headerlink" title="绑定 Binding"></a>绑定 Binding</h3><ul><li>绑定是特殊配置元素(称作“绑定元素”)的集合,服务运行库在每次构造客户端或服务终结点时都对这些元素进行评估</li><li>WCF里的传输协议,安全,事务,消息编码,超时等等都是由绑定来控制</li><li>控制WCF的一个接口<h4 id="绑定列表"><a href="#绑定列表" class="headerlink" title="绑定列表"></a>绑定列表</h4><img src="/qm/4fbb2a86/1.jpg"></li></ul><h4 id="Windows-Azure-AppFabric绑定"><a href="#Windows-Azure-AppFabric绑定" class="headerlink" title="Windows Azure AppFabric绑定"></a>Windows Azure AppFabric绑定</h4><ul><li>NetTcpRelayBinding 消息中途转发机制</li><li>NetOneWayRelayBinding 消息单向转发</li><li>NetEventRelayBinding 基于事件的</li><li>webHttpRelayBinding </li><li>WS2007HttpRelayBinding</li></ul><h4 id="WCF绑定和通道堆栈"><a href="#WCF绑定和通道堆栈" class="headerlink" title="WCF绑定和通道堆栈"></a>WCF绑定和通道堆栈</h4><p><img src="/qm/4fbb2a86/5.png"></p><h4 id="绑定的结构"><a href="#绑定的结构" class="headerlink" title="绑定的结构"></a>绑定的结构</h4><p><img src="/qm/4fbb2a86/6.png"></p><h4 id="绑定结构例子"><a href="#绑定结构例子" class="headerlink" title="绑定结构例子"></a>绑定结构例子</h4><p><img src="/qm/4fbb2a86/7.png"></p><h3 id="契约-Contract"><a href="#契约-Contract" class="headerlink" title="契约 Contract"></a>契约 Contract</h3><p>契约是通信参与方之间的约定</p><ul><li>数据契约 DataContract 实体类</li><li>操作契约 Operation Contract 服务方法</li><li>服务契约 Service Contract 服务</li><li>消息契约 Message Contract 对消息体的完整控制</li><li>错误契约 Fault Contract 把错误信息包装起来返回给客户端</li></ul><h4 id="数据契约"><a href="#数据契约" class="headerlink" title="数据契约"></a>数据契约</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[DataContract]//数据契约属性声明</span><br><span class="line">    public class UserData</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        [DataMember]//数据成员标记</span><br><span class="line">        public string Name&#123;<span class="built_in">set</span>;get;&#125;;</span><br><span class="line"></span><br><span class="line">        [DataMember(Name=<span class="string">&quot;UserEmail&quot;</span>)]//支持别名定义</span><br><span class="line">        public string Email&#123;<span class="built_in">set</span>;get;&#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h4><p>1.XmlSerialzer<br>2.DataContractSerializer<br>3.NetDataContractSerializer NetTcp使用的<br>4.DataContractJsonSerializer json数据序列化</p><h4 id="服务契约"><a href="#服务契约" class="headerlink" title="服务契约"></a>服务契约</h4><p>ServiceContract<br>定义约定的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[ServiceContract]//服务契约</span><br><span class="line">    public interface IServiceDemo</span><br><span class="line">    &#123;</span><br><span class="line">        [OperationContract]//操作契约</span><br><span class="line">        string GetData(int value);</span><br><span class="line"></span><br><span class="line">        [OperationContract]</span><br><span class="line">        UserData GetDataUsingDataContract(UserData user);</span><br><span class="line"></span><br><span class="line">        // TODO: Add your service operations here</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="操作契约"><a href="#操作契约" class="headerlink" title="操作契约"></a>操作契约</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[OperationContract]//操作契约</span><br><span class="line">        string GetData(int value);</span><br></pre></td></tr></table></figure><h4 id="消息契约-MessageContract"><a href="#消息契约-MessageContract" class="headerlink" title="消息契约 MessageContract"></a>消息契约 MessageContract</h4><p>1.允许完全控制消息体<br>2.SOAP消息头 header<br>3.SOAP 消息体 Body</p><h4 id="错误契约-FaultContract"><a href="#错误契约-FaultContract" class="headerlink" title="错误契约 FaultContract"></a>错误契约 FaultContract</h4><p>1.为了在客户端和服务端共享错误信息<br>2.错误处理</p><h3 id="宿主Host"><a href="#宿主Host" class="headerlink" title="宿主Host"></a>宿主Host</h3><p>IIS.EXE.WinForm.Wpf.WindowService.NT Service.COM+</p><h4 id="托管进程"><a href="#托管进程" class="headerlink" title="托管进程"></a>托管进程</h4><p><img src="/qm/4fbb2a86/2.png"></p><h4 id="怎么托管WCF服务"><a href="#怎么托管WCF服务" class="headerlink" title="怎么托管WCF服务"></a>怎么托管WCF服务</h4><p><img src="/qm/4fbb2a86/3.png"></p><h4 id="Window-Server-AppFabric"><a href="#Window-Server-AppFabric" class="headerlink" title="Window Server AppFabric"></a>Window Server AppFabric</h4><p><img src="/qm/4fbb2a86/4.png"></p><h3 id="WCF绑定学习资源"><a href="#WCF绑定学习资源" class="headerlink" title="WCF绑定学习资源"></a>WCF绑定学习资源</h3><ul><li>书籍<ul><li>Inside WCF,(Justin Smith) 《WCF技术内幕》</li><li>第8章 绑定</li></ul></li><li>文章<ul><li>Aaron Skonnard 深入学习WCF绑定</li></ul></li></ul><h3 id="WCF服务配置管理工具"><a href="#WCF服务配置管理工具" class="headerlink" title="WCF服务配置管理工具"></a>WCF服务配置管理工具</h3><p>点击Visual Studio导航栏 工具 WCF配置编辑器<br>打开配置文件app.config<br><img src="/qm/4fbb2a86/9.png"></p><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><ul><li>定义契约</li><li>配置终结点</li><li>使用绑定<h4 id="定义契约"><a href="#定义契约" class="headerlink" title="定义契约"></a>定义契约</h4></li></ul><p>1.打开Visual Studio,创建新项目,我们搜索wcf,选择wcf服务库,<br><img src="/qm/4fbb2a86/10.png"><br>2.自定义项目名称路径创建即可(后面不再图文赘述)<br><img src="/qm/4fbb2a86/11.png"><br>3.这里做简单更改</p><ul><li>IService1<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 注意: 使用“重构”菜单上的“重命名”命令，可以同时更改代码和配置文件中的接口名“IService1”。</span><br><span class="line">   [ServiceContract]</span><br><span class="line">   public interface IService1</span><br><span class="line">   &#123;</span><br><span class="line">       [OperationContract]</span><br><span class="line">       string SayHello(string Name);</span><br><span class="line">       [OperationContract]</span><br><span class="line">       string SayHellotoUser(User user);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   // 使用下面示例中说明的数据约定将复合类型添加到服务操作。</span><br><span class="line">   // 可以将 XSD 文件添加到项目中。在生成项目后，可以通过命名空间“WcfService.ContractType”直接使用其中定义的数据类型。</span><br><span class="line">   [DataContract]</span><br><span class="line">   public class User</span><br><span class="line">   &#123;</span><br><span class="line">       [DataMember]</span><br><span class="line">       public string FirstName &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">       [DataMember]</span><br><span class="line">       public string SecondName &#123; <span class="built_in">set</span>; get; &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li>Service1<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class Service1 : IService1</span><br><span class="line">    &#123;</span><br><span class="line">        public string SayHello(string Name)</span><br><span class="line">        &#123;</span><br><span class="line">            string result = $<span class="string">&quot;Hello,&#123;Name&#125;&quot;</span>;</span><br><span class="line">            Console.WriteLine(result);</span><br><span class="line">            <span class="built_in">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public string SayHellotoUser(User user)</span><br><span class="line">        &#123;</span><br><span class="line">            string result = $<span class="string">&quot;Hello,&#123;user.FirstName&#125;&#123;user.SecondName&#125;&quot;</span>;</span><br><span class="line">            Console.WriteLine(result);</span><br><span class="line">            <span class="built_in">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="配置终结点"><a href="#配置终结点" class="headerlink" title="配置终结点"></a>配置终结点</h4></li></ul><p>1.右键解决方案添加<br>2.新建项目 搜索控制台 选择控制台应用程序创建WcfHost<br><img src="/qm/4fbb2a86/13.png"><br>3.添加对定义契约的Wcf服务类库的引用,我们打开Program.cs文件创建打开服务.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">using (ServiceHost host=new ServiceHost(typeof(WcfService.Service1)))</span><br><span class="line">            &#123;</span><br><span class="line">                host.Open();</span><br><span class="line">                Console.WriteLine($<span class="string">&quot;Host is Running,and State is &#123;host.State&#125;&quot;</span>);</span><br><span class="line">                Console.ReadLine();</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>4.打开app.config 配置终结点 这里配置了4个终结点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;system.web&gt;</span><br><span class="line">    &lt;compilation debug=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">  &lt;/system.web&gt;</span><br><span class="line">  &lt;!-- 部署服务库项目时，必须将配置文件的内容添加到</span><br><span class="line"> 主机的 app.config 文件中。System.Configuration 不支持库的配置文件。 --&gt;</span><br><span class="line">  &lt;system.serviceModel&gt;</span><br><span class="line">    &lt;services&gt;</span><br><span class="line">      &lt;service name=<span class="string">&quot;WcfService.Service1&quot;</span>&gt;</span><br><span class="line">        &lt;host&gt;</span><br><span class="line">          &lt;baseAddresses&gt;</span><br><span class="line">  &lt;add baseAddress=<span class="string">&quot;http://localhost:8001&quot;</span>/&gt;</span><br><span class="line">  &lt;add baseAddress=<span class="string">&quot;net.tcp://localhost:8002&quot;</span>/&gt;</span><br><span class="line">            &lt;!--&lt;add baseAddress = <span class="string">&quot;http://localhost:8733/Design_Time_Addresses/WcfService/Service1/&quot;</span> /&gt;--&gt;</span><br><span class="line">          &lt;/baseAddresses&gt;</span><br><span class="line">        &lt;/host&gt;</span><br><span class="line">        &lt;!-- Service Endpoints --&gt;</span><br><span class="line">        &lt;!-- 除非完全限定，否则地址相对于上面提供的基址--&gt;</span><br><span class="line">  &lt;endpoint address=<span class="string">&quot;http://localhost:8001/WcfService&quot;</span> binding=<span class="string">&quot;wsHttpBinding&quot;</span> name=<span class="string">&quot;httpEndpoint&quot;</span> contract=<span class="string">&quot;WcfService.IService1&quot;</span>&gt;</span><br><span class="line">  &lt;/endpoint&gt;</span><br><span class="line">  &lt;endpoint address=<span class="string">&quot;net.tcp://localhost:8002/WcfService&quot;</span> binding=<span class="string">&quot;netTcpBinding&quot;</span> name=<span class="string">&quot;tcpEndpoint&quot;</span> contract=<span class="string">&quot;WcfService.IService1&quot;</span>&gt;</span><br><span class="line">  &lt;/endpoint&gt; </span><br><span class="line">        &lt;!-- Metadata Endpoints --&gt;</span><br><span class="line">        &lt;!-- 元数据交换终结点供相应的服务用于向客户端做自我介绍。 --&gt; </span><br><span class="line">        &lt;!-- 此终结点不使用安全绑定，应在部署前确保其安全或将其删除--&gt;</span><br><span class="line">  &lt;endpoint address=<span class="string">&quot;mex&quot;</span> binding=<span class="string">&quot;mexHttpBinding&quot;</span> contract=<span class="string">&quot;IMetadataExchange&quot;</span> name=<span class="string">&quot;httpMex&quot;</span>/&gt;</span><br><span class="line">  &lt;endpoint address=<span class="string">&quot;mex&quot;</span> binding=<span class="string">&quot;mexTcpBinding&quot;</span> contract=<span class="string">&quot;IMetadataExchange&quot;</span> name=<span class="string">&quot;tcpMex&quot;</span>/&gt;</span><br><span class="line">      &lt;/service&gt;</span><br><span class="line">    &lt;/services&gt;</span><br><span class="line">    &lt;behaviors&gt;</span><br><span class="line">      &lt;serviceBehaviors&gt;</span><br><span class="line">        &lt;behavior&gt;</span><br><span class="line">          &lt;!-- 为避免泄漏元数据信息，</span><br><span class="line">          请在部署前将以下值设置为 <span class="literal">false</span> --&gt;</span><br><span class="line">          &lt;serviceMetadata httpGetEnabled=<span class="string">&quot;True&quot;</span> httpsGetEnabled=<span class="string">&quot;True&quot;</span>/&gt;</span><br><span class="line">          &lt;!-- 要接收故障异常详细信息以进行调试，</span><br><span class="line">          请将以下值设置为 <span class="literal">true</span>。在部署前设置为 <span class="literal">false</span> </span><br><span class="line">          以避免泄漏异常信息 --&gt;</span><br><span class="line">          &lt;serviceDebug includeExceptionDetailInFaults=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">        &lt;/behavior&gt;</span><br><span class="line">      &lt;/serviceBehaviors&gt;</span><br><span class="line">    &lt;/behaviors&gt;</span><br><span class="line">  &lt;/system.serviceModel&gt;</span><br></pre></td></tr></table></figure><p>5.点击导航栏生成重新生成解决方案,设置WcfHost为启动项目<br>启动项目<br><img src="/qm/4fbb2a86/14.png"><br>6.我们关闭Visual Studio,找到Visual Studio右键以管理员权限运行,重新打开项目并启动.完成!<br><img src="/qm/4fbb2a86/15.png"><br>基于控制台的Wcf服务搭建完成,我们新建一个客户端来测试服务.</p><h4 id="使用绑定"><a href="#使用绑定" class="headerlink" title="使用绑定"></a>使用绑定</h4><p>1.右键解决方案,添加 新建项目 新建控制台应用程序WcfClient<br>2.点击引用, 点击发现或手动输入添加服务引用<br><img src="/qm/4fbb2a86/16.png"><br>3.打开Program.cs测试服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Service1Client client1 = new Service1Client(<span class="string">&quot;httpEndpoint&quot;</span>);</span><br><span class="line">            Console.WriteLine(client1.SayHello(<span class="string">&quot;浅梦风凌&quot;</span>));</span><br><span class="line">            User user1 = new User();</span><br><span class="line">            user1.FirstName = <span class="string">&quot;浅梦&quot;</span>;</span><br><span class="line">            user1.SecondName = <span class="string">&quot;风凌&quot;</span>;</span><br><span class="line">            Console.WriteLine(client1.SayHellotoUser(user1));</span><br><span class="line">            Console.Read();</span><br></pre></td></tr></table></figure><p>4.导航栏生成重新生成解决方案,启动<br>1.启动前右键解决方案,点击属性,配置多个启动项目<br><img src="/qm/4fbb2a86/17.png"><br>2.启动<br><img src="/qm/4fbb2a86/18.png"><br>好了,可以看到服务调用结果了.完成!我们的Wcf从创建服务到配置绑定到测试已经全部完成了。</p><h4 id="对tcp终结点的调用如下"><a href="#对tcp终结点的调用如下" class="headerlink" title="对tcp终结点的调用如下"></a>对tcp终结点的调用如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Service1Client client2 = new Service1Client(<span class="string">&quot;tcpEndpoint&quot;</span>);</span><br><span class="line">            Console.WriteLine(client2.SayHello(<span class="string">&quot;小猫&quot;</span>));</span><br><span class="line">            User user2 = new User();</span><br><span class="line">            user2.FirstName = <span class="string">&quot;海边的&quot;</span>;</span><br><span class="line">            user2.SecondName = <span class="string">&quot;海边&quot;</span>;</span><br><span class="line">            Console.WriteLine(client1.SayHellotoUser(user2));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h3&gt;&lt;p&gt;1.终结点 Endpoint&lt;br&gt;2.契约 Contract&lt;br&gt;3.宿主 Host&lt;br&gt;4.绑定 Binding&lt;br&gt;5.Demo:定义契约,终结点,配置绑定&lt;/p&gt;</summary>
    
    
    
    <category term="C#" scheme="https://drfengling.github.io/categories/C/"/>
    
    
    <category term="WCF" scheme="https://drfengling.github.io/tags/WCF/"/>
    
  </entry>
  
  <entry>
    <title>C#WCF方向(一)</title>
    <link href="https://drfengling.github.io/qm/e08ab1e4.html"/>
    <id>https://drfengling.github.io/qm/e08ab1e4.html</id>
    <published>2022-05-03T05:55:35.000Z</published>
    <updated>2022-05-04T01:40:47.529Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="WCF"><a href="#WCF" class="headerlink" title="WCF"></a>WCF</h2><p>开始入手WCF了,从零开始,记录一下WCF的学习笔记</p><h3 id="什么是WCF"><a href="#什么是WCF" class="headerlink" title="什么是WCF"></a>什么是WCF</h3><p>摘要<br>WCF是使用托管代码建立和运行面向服务（Service Oriented）应用程序的统一框架。它使得开发者能够建立一个跨平台的安全、可信赖、事务性的解决方案，且能与已有系统兼容协作。WCF是微软分布式应用程序开发的集大成者，它整合了.Net平台下所有的和分布式系统有关的技术，例如.Net Remoting、ASMX、WSE和MSMQ。以通信(Communiation)范围而论，它可以跨进程、跨机器、跨子网、企业网乃至于 Internet；以宿主程序而论，可以以ASP.NET，EXE，WPF，Windows Forms，NT Service，COM+作为宿主(Host)。</p><span id="more"></span><p>简述<br>1.WCF全称Windows Communication Foundation<br>2.是Miscrosoft为构建面向服务的应用提供的分布式通信编程框架<br>3.是.Net Framework的重要组成部分.<br>4.WCF4.0<br>历史<br>ASMX WSE WCF3.0 WCF3.5 WCF4.0 WCFN.0</p><h3 id="集成微软分布式技术"><a href="#集成微软分布式技术" class="headerlink" title="集成微软分布式技术"></a>集成微软分布式技术</h3><p>WCF:WSE. MSMQ.  Enterprise Service COM+ .NET Remoting ASP.NET Web Service</p><h3 id="托管方式多样化"><a href="#托管方式多样化" class="headerlink" title="托管方式多样化"></a>托管方式多样化</h3><p>托管(Host)<br>IIS EXE Winform wpf Window Service  NT Service COM+</p><h3 id="统一编程模型"><a href="#统一编程模型" class="headerlink" title="统一编程模型"></a>统一编程模型</h3><p>Client Talk to  (Binding,Address,Contract)<br>1.Address: 每一个WCF的Service都有一个唯一的地址。这个地址给出了Service的地址和传输协议(Transport Protocol)。<br>2.Binding:绑定制定了服务通过什么形式访问。只要类比传输协议, encoding (text, binary, etc) 以及 WS-* 协议，像transactional支持以及可信任的消息队列。<br>3.Contract:Contract描述了Service能提供的各种服务。Contract有四种，包括Service Contract, Data Contract, Fault Contract和Message Contract。</p><h3 id="WCF知识点"><a href="#WCF知识点" class="headerlink" title="WCF知识点"></a>WCF知识点</h3><p>1.契约 Contract<br>2.宿主 Host<br>3.绑定 Binding<br>4.事务 Transaction<br>5.消息队列 MSMQ<br>6.并发控制 Concurrency Control<br>7.错误处理 Error Handling<br>8.安全 Security<br>9.诊断与调试</p><h3 id="软件工程的发展历史"><a href="#软件工程的发展历史" class="headerlink" title="软件工程的发展历史"></a>软件工程的发展历史</h3><p>面向过程PO 面向对象OO 面向组件CO 面向服务SO</p><h3 id="SOA的特征"><a href="#SOA的特征" class="headerlink" title="SOA的特征"></a>SOA的特征</h3><p>1.Service Oriented Architecture<br>2.面向服务的架构<br>互操作 重用 松耦合</p><h3 id="Web服务类别"><a href="#Web服务类别" class="headerlink" title="Web服务类别"></a>Web服务类别</h3><p>SOAP REST<br>soap:简单对象访问协议<br>rest：轻量级WebApi服务</p><h3 id="Web服务使用的领域"><a href="#Web服务使用的领域" class="headerlink" title="Web服务使用的领域"></a>Web服务使用的领域</h3><p>开发中间产品 暴露接口服务 集成第三方系统</p><h3 id="应用系统中的Web服务"><a href="#应用系统中的Web服务" class="headerlink" title="应用系统中的Web服务"></a>应用系统中的Web服务</h3><p>表现层<br>服务层<br>业务逻辑层——&gt;  ESB企业服务总线   ——&gt;服务<br>数据访问层<br>数据 数据</p><h3 id="系统集成中的Web服务"><a href="#系统集成中的Web服务" class="headerlink" title="系统集成中的Web服务"></a>系统集成中的Web服务</h3><p>   电子商务网站订单系统<br>    |              |                |<br>银行服务 库存系统服务 短信服务</p><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>1.创建一个WCF服务程序 程序并调用<br>打开Visual Studio开发工具 我这里用的2022<br>左上角菜单 文件 点击新建 选择项目 打开了创建新项目的对话框 我们在搜索栏搜素wcf<br>搜索结果如下所示:<br><img src="/qm/e08ab1e4/1.jpg"><br>这里选择WCF服务应用程序<br><img src="/qm/e08ab1e4/2.jpg"><br>自定义下项目名 位置 这里选用.Net4.5.2框架 创建即可<br><img src="/qm/e08ab1e4/3.jpg"><br>创建完成后 默认会添加IService1.cs,Service1.svc文件,.svc扩展文件,它会做一些消息的路由工作,激活服务,会通过文件做一些处理.<br>IService1.cs<br>ServiceContract:服务契约<br>包含两个操作契约OperationContract：GetData,GetDataUsingDataContract 使用数据契约获取数据<br>DataContract:数据契约:<br>包含两个值 bool  StringValue<br>做下自定义更改<br>1.增加数据契约对象<br>我们在IService1.cs中创建一个类自定义命名我的如下新增一个用户数据对象,增加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[DataContract]//数据契约对象</span><br><span class="line">    public class UserData &#123; </span><br><span class="line">        [DataMember]</span><br><span class="line">        public string UserName &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">        [DataMember]</span><br><span class="line">        public string Email &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.增加服务契约接口<br>我们在IService1.cs中interface IService1中新增接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// TODO: 在此添加您的服务操作</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 自定义服务契约</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;user&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        [OperationContract]///注意:增加操作契约标记</span><br><span class="line">        UserData GetUserData(UserData user);</span><br></pre></td></tr></table></figure><p>3.在Service1.svc中新增实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">///新增实现</span><br><span class="line">       public UserData GetUserData(UserData user) &#123;</span><br><span class="line">           <span class="built_in">return</span> user;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>到此，我们已完成了简单的数据服务实现契约,点击导航栏生成——&gt;重新生成解决方案,确认无报错后执行下一步<br>4.在浏览器中查看<br>点击Service1.svc右键选择在浏览器中查看<br>visual Studio打开浏览器,跳转服务界面.<br><img src="/qm/e08ab1e4/4.jpg"><br>出现这个界面,说明你的服务是正常的.可以发布了.我们看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svcutil.exe http://localhost:60217/Service1.svc?wsdl</span><br></pre></td></tr></table></figure><p>wsdl:服务描述语言,对外公布的服务语言,你想让别人引用你的服务的话,就可以引用这个.<br>我们可以看到下方有客户端调用示例.后面客户端调用服务可以仿照使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">C<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    static void <span class="function"><span class="title">Main</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        Service1Client client = new Service1Client();</span><br><span class="line"></span><br><span class="line">        // 使用 <span class="string">&quot;client&quot;</span> 变量在服务上调用操作。</span><br><span class="line"></span><br><span class="line">        // 始终关闭客户端。</span><br><span class="line">        client.Close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Visual Basic</span><br><span class="line"></span><br><span class="line">Class Test</span><br><span class="line">    Shared Sub Main()</span><br><span class="line">        Dim client As Service1Client = New Service1Client()</span><br><span class="line">        <span class="string">&#x27; 使用 &quot;client&quot; 变量在服务上调用操作。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#x27;</span> 始终关闭客户端。</span><br><span class="line">        client.Close()</span><br><span class="line">    End Sub</span><br><span class="line">End Class</span><br></pre></td></tr></table></figure><p>5.新增WPF项目<br>我们在解决方案下新增一个WPF项目<br>(也可以新增一个网站项目,Winform项目等)<br><img src="/qm/e08ab1e4/5.jpg"><br>自定义名字WCFClient创建.<br>6.引用服务<br>在创建好的wpf项目中选择引用,右键选择添加服务引用,打开如下:<br><img src="/qm/e08ab1e4/6.jpg"><br>我们输入步骤4在浏览器打开后生成的公共服务语言</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:60217/Service1.svc?wsdl</span><br></pre></td></tr></table></figure><p>自定义命名空间名称ServiceReference确定.<br>提示:我们也可以点击发现.发现解决方案中的服务.<br>服务栏会为我们找到对应服务.<br><img src="/qm/e08ab1e4/7.jpg"><br>点击Service1.svc打开到IService1,即可查看右侧列表显示的三个服务接口,两个默认的服务接口契约,<br>和一个我们新增的GetUserData服务契约.(如果没有显示新增的接口,请返回WCF项目检查是否遗漏契约标记)<br>点击添加后的服务引用可以查看<br><img src="/qm/e08ab1e4/8.jpg"><br>7.使用Wpf调用服务</p><ul><li>打开MainWindow新增Button按钮,可以打开工具栏拖动Button到界面上,或编写Xaml文本增加,完成后调整布局.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">            Width=<span class="string">&quot;100&quot;</span></span><br><span class="line">            Height=<span class="string">&quot;30&quot;</span></span><br><span class="line">            Content=<span class="string">&quot;调用服务&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br></pre></td></tr></table></figure></li><li>点击Click事件F12进入后置代码,这里不做复杂框架处理,后置编写点击实现Wcf服务调用<br>具体实现如下:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 调用WCF服务.</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Service1Client client = new Service1Client();</span><br><span class="line">            string result1 = client.GetData(1);</span><br><span class="line">            UserData userData = client.GetUserData(new <span class="function"><span class="title">UserData</span></span>() &#123; Email=<span class="string">&quot;Drfengling@163.com&quot;</span>,UserName=<span class="string">&quot;浅梦风凌&quot;</span>&#125;);</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><p>8.生成调试服务</p><ul><li>点击导航栏生成 重新生成解决方案 确认无误后在点击事件处打断点调试</li><li>选择WCFClient为启动项目,点击导航栏调试开始调试,点击按钮调用服务,观察服务调用结果<br><img src="/qm/e08ab1e4/9.jpg"><br>可以看到我们在客户端完成了对服务端的调用,调用获取到了WCF服务结果.<br>快来动手试试搭建简单的服务调用吧.</li></ul><h3 id="WCF的新特性"><a href="#WCF的新特性" class="headerlink" title="WCF的新特性"></a>WCF的新特性</h3><p>WCF4.5新特性<br>1.支持契约优先(Contract First)的开发<br>2.Building发现配置错误<br>3.支持新异步流<br>4.?singleWSDL<br>5.Websockets支持在端口80和443<br>6.XML编辑器工具展示<br>7.ChannelFactory缓存支持<br>8.二进制编码器压缩支持<br>9.不管Fire and foget的UDP消息发交换模式<br>10.支持单个WCF终结点支持多个身份验证模式<br>11.支持WCF服务使用国际化域名（IDNs）</p><h3 id="WCF学习资源"><a href="#WCF学习资源" class="headerlink" title="WCF学习资源"></a>WCF学习资源</h3><p>1.最权威WCF书籍</p><ul><li>Programing WCF Service,(Juval Lowy)</li><li>《WCF服务编程》第三版</li><li>Inside WCF,(Justin Smith)</li><li>《WCF技术内幕》</li></ul><p>2.论坛</p><ul><li>微软WCF中文技术论坛<br><a href="http://social.msdn.microsoft.com/Forums/zh-CN/wcfzhchs/threads">http://social.msdn.microsoft.com/Forums/zh-CN/wcfzhchs/threads</a></li><li>微软WCF英文技术论坛</li><li>跟我一起从零开始学WCF系列课程(由于官网视频已经失效了,有兴趣可以看看这篇博客)<br><a href="https://www.cnblogs.com/dqj1024/archive/2012/07/21/2602342.html">https://www.cnblogs.com/dqj1024/archive/2012/07/21/2602342.html</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;WCF&quot;&gt;&lt;a href=&quot;#WCF&quot; class=&quot;headerlink&quot; title=&quot;WCF&quot;&gt;&lt;/a&gt;WCF&lt;/h2&gt;&lt;p&gt;开始入手WCF了,从零开始,记录一下WCF的学习笔记&lt;/p&gt;
&lt;h3 id=&quot;什么是WCF&quot;&gt;&lt;a href=&quot;#什么是WCF&quot; class=&quot;headerlink&quot; title=&quot;什么是WCF&quot;&gt;&lt;/a&gt;什么是WCF&lt;/h3&gt;&lt;p&gt;摘要&lt;br&gt;WCF是使用托管代码建立和运行面向服务（Service Oriented）应用程序的统一框架。它使得开发者能够建立一个跨平台的安全、可信赖、事务性的解决方案，且能与已有系统兼容协作。WCF是微软分布式应用程序开发的集大成者，它整合了.Net平台下所有的和分布式系统有关的技术，例如.Net Remoting、ASMX、WSE和MSMQ。以通信(Communiation)范围而论，它可以跨进程、跨机器、跨子网、企业网乃至于 Internet；以宿主程序而论，可以以ASP.NET，EXE，WPF，Windows Forms，NT Service，COM+作为宿主(Host)。&lt;/p&gt;</summary>
    
    
    
    <category term="C#" scheme="https://drfengling.github.io/categories/C/"/>
    
    
    <category term="WCF" scheme="https://drfengling.github.io/tags/WCF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客添加Gitalk评论</title>
    <link href="https://drfengling.github.io/qm/212a5789.html"/>
    <id>https://drfengling.github.io/qm/212a5789.html</id>
    <published>2022-04-27T03:09:16.000Z</published>
    <updated>2022-04-27T06:30:08.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。<br>更详细用法看官网<a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a>这里只记录有诱惑的操作</p><span id="more"></span><h4 id="1-申请秘钥"><a href="#1-申请秘钥" class="headerlink" title="1.申请秘钥"></a>1.申请秘钥</h4><p>申请一个 OAuth application <a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a><br><img src="https://gitee.com/lucas27/pic-bed/raw/master/picture/%E6%96%B0%E5%BB%BA%E5%BA%94%E7%94%A8.jpg"><br>获取 ID 和 secrets，必须要保存好，然后以后就看不到了，忘记了只能重建。<br>上面的填写成功之后进入,我们需要的是生成的Client ID 和Client Secret<br><img src="/qm/212a5789/1.jpg"></p><h4 id="2-存储仓库"><a href="#2-存储仓库" class="headerlink" title="2.存储仓库"></a>2.存储仓库</h4><p>您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论<br><img src="/qm/212a5789/2.jpg"><br>如上所示,我新建了一个dryunment用来存储线上评论.如果没有可以点New新建一个仓库</p><h4 id="3-博客配置"><a href="#3-博客配置" class="headerlink" title="3.博客配置"></a>3.博客配置</h4><p>上面的确认无误后，我们进行配置博客，引入gitalk。</p><p>  首先进入主题的配置文件_config.yml(注意是主题的配置文件，不是博客根目录下的配置文件)，添加gitalk配置(一定要仔细，缺一不可)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  owner: github用户名</span><br><span class="line">  admin: github用户名</span><br><span class="line">  repo: 博客的仓库名称(注意不是地址)</span><br><span class="line">  ClientID: 上面生成的Client ID</span><br><span class="line">  ClientSecret: 上面生成的Client Secret</span><br></pre></td></tr></table></figure><p>上面配置完之后,进入主题目录\themes\kratos-rebirth\layout_comments目录，在当前目录下新建一个gitalk.ejs文件，写入如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&lt;%- url_npm_cdn(&#x27;gitalk@1/dist/gitalk.css&#x27;) %&gt;&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;gitalk-container&quot;</span> class=<span class="string">&quot;post-comments lazy-load&lt;% if (theme.posts.comments?.enableBGImage) &#123; %&gt; bg-image&lt;% &#125; %&gt;&quot;</span> style=<span class="string">&quot;padding-left:2rem; padding-right:2rem;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var load_comm = () =&gt; &#123;</span><br><span class="line">        const init = () =&gt; &#123;</span><br><span class="line">            console.log(<span class="string">&#x27;Gitalk loading...&#x27;</span>);</span><br><span class="line">            const gitalk = new Gitalk(Object.assign(&#123;</span><br><span class="line">                <span class="built_in">id</span>: <span class="string">&#x27;&lt;%- url_for(page.path) %&gt;&#x27;</span>,</span><br><span class="line">                path: <span class="string">&#x27;&lt;%- url_for(page.path) %&gt;&#x27;</span></span><br><span class="line">            &#125;, JSON.parse(<span class="string">&#x27;&lt;%- JSON.stringify(theme.gitalk) %&gt;&#x27;</span>)));</span><br><span class="line"></span><br><span class="line">            gitalk.render(<span class="string">&#x27;gitalk-container&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof Gitalk === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">            const src = <span class="string">&#x27;&lt;%- url_npm_cdn(&quot;gitalk@1/dist/gitalk.min.js&quot;) %&gt;&#x27;</span>;</span><br><span class="line">            $.getScript(src, init);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            init();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">load_comm();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;Please <span class="built_in">enable</span> JavaScript to view the &lt;a href=<span class="string">&quot;https://github.com/gitalk/gitalk&quot;</span>&gt;comments powered by Gitalk.&lt;/a&gt;&lt;/noscript&gt;</span><br></pre></td></tr></table></figure><h4 id="4-博客部署"><a href="#4-博客部署" class="headerlink" title="4.博客部署"></a>4.博客部署</h4><p>键入命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地部署完成后可以打开博客文章访问就可以看到文章下方加载除评论区了,选择账号登录就可以进行评论了.<br>确认无误hexo d部署到服务器上<br><a href="https://drfengling.github.io/">https://drfengling.github.io</a><br>由于研究了多种博客评论系统 所以你看到的评论系统不一定是Gitalk.有问题评论区欢迎评论交流.<br>到此,Gitalk评论系统就完成啦，快来动手试试吧.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。&lt;br&gt;更详细用法看官网&lt;a href=&quot;https://github.com/gitalk/gitalk/blob/master/readme-cn.md&quot;&gt;https://github.com/gitalk/gitalk/blob/master/readme-cn.md&lt;/a&gt;这里只记录有诱惑的操作&lt;/p&gt;</summary>
    
    
    
    <category term="线上评论" scheme="https://drfengling.github.io/categories/%E7%BA%BF%E4%B8%8A%E8%AF%84%E8%AE%BA/"/>
    
    
    <category term="Gitalk" scheme="https://drfengling.github.io/tags/Gitalk/"/>
    
  </entry>
  
  <entry>
    <title>livere评论系统</title>
    <link href="https://drfengling.github.io/qm/d318877c.html"/>
    <id>https://drfengling.github.io/qm/d318877c.html</id>
    <published>2022-04-27T01:21:11.000Z</published>
    <updated>2022-04-27T02:54:19.927Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Hexo博客添加LiveRe评论系统"><a href="#Hexo博客添加LiveRe评论系统" class="headerlink" title="Hexo博客添加LiveRe评论系统"></a>Hexo博客添加LiveRe评论系统</h3><p>好久不见,又是长长的探索实践之旅了,最近在新加评论系统出现了各种问题,也有所得.<br>评论系统可以说五花八门啦，用得多的比如：Gitment、Gitalk、LiveRe、Disqus、disqusjs，twikoo, waline、Valine 等</p><span id="more"></span><h5 id="这里以LiveRe为例"><a href="#这里以LiveRe为例" class="headerlink" title="这里以LiveRe为例:"></a>这里以LiveRe为例:</h5><p>1.进入来必力官网 <a href="https://www.livere.com/">https://www.livere.com/</a><br>2.右上角个人头像点进去 有账号可以直接登录<br>3.没有就注册一个<a href="https://was.livere.me/register?lang=zh-cn">https://was.livere.me/register?lang=zh-cn</a>,填写自己的邮箱,我这里用了网易163邮箱,可以根据自己情况填写,填写密码完成注册.<br>4.注册以后登录进去，点击导航栏安装,选择City版进行安装，City版是免费的，对我们这种个人博客而言完全足够了<br><img src="/qm/d318877c/1.jpg"><br>5.接下来需要填写一些关于你想将LiveRe用于的博客的一些信息<br>6.填完之后，申请获取代码，此时其将会给你一段代码，该段代码等下需要加到你的个人博客的页面中，我们可以先将其复制并保存起来。</p><h3 id="LiveRe评论配置集成"><a href="#LiveRe评论配置集成" class="headerlink" title="LiveRe评论配置集成"></a>LiveRe评论配置集成</h3><p>1.回到我们的博客根目录打开themes主题文件夹 我用的是kratos-rebirth主题,以kratos-rebirth为例:<br><img src="/qm/d318877c/2.jpg"><br>打开_config.yml文件更改配置<br><img src="/qm/d318877c/3.jpg"><br>我们更改Post Page 文章页配置posts下属性comments的属性取值<br>这里用到的评论系统是livere 对应更改provider: livere<br>enableBGImage用来配置背景图片<br>2.找到\kratos-rebirth\layout_comments文件夹 更改 livere.ejs文件配置 没有可以创建一个<br>3.打开livere文件,新增来必力评论代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;lv-container&quot;</span> class=<span class="string">&quot;post-comments lazy-load &lt;% if (theme.posts.comments?.enableBGImage) &#123; %&gt; bg-image&lt;% &#125; %&gt;&quot;</span> data-id=<span class="string">&quot;&lt;%- theme.livere.id || &#x27;city&#x27; %&gt;&quot;</span> data-uid=<span class="string">&quot;&lt;%- theme.livere.uid %&gt;&quot;</span>&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   (<span class="keyword">function</span>(d, s) &#123;</span><br><span class="line">       var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (typeof LivereTower === <span class="string">&#x27;function&#x27;</span>) &#123; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">       j = d.createElement(s);</span><br><span class="line">       j.src = <span class="string">&#x27;https://cdn-city.livere.com/js/embed.dist.js&#x27;</span>;</span><br><span class="line">       j.async = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">       e.parentNode.insertBefore(j, e);</span><br><span class="line">   &#125;)(document, <span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- City版安装代码已完成 --&gt;</span><br></pre></td></tr></table></figure><p>老样子,先来三杯小鸟伏特加 powershell或命令行打开博客根目录<br>键入命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地部署完成后可以打开博客文章访问就可以看到文章下方加载除评论区了,选择账号登录就可以进行评论了.<br>确认无误hexo d部署到服务器上<br><a href="https://drfengling.github.io/">https://drfengling.github.io</a><br>由于研究了多种博客评论系统 所以你看到的评论系统不一定是livere.有问题评论区欢迎评论交流.<br>到此,livere评论系统就完成啦，快来动手试试吧.</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Hexo博客添加LiveRe评论系统&quot;&gt;&lt;a href=&quot;#Hexo博客添加LiveRe评论系统&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客添加LiveRe评论系统&quot;&gt;&lt;/a&gt;Hexo博客添加LiveRe评论系统&lt;/h3&gt;&lt;p&gt;好久不见,又是长长的探索实践之旅了,最近在新加评论系统出现了各种问题,也有所得.&lt;br&gt;评论系统可以说五花八门啦，用得多的比如：Gitment、Gitalk、LiveRe、Disqus、disqusjs，twikoo, waline、Valine 等&lt;/p&gt;</summary>
    
    
    
    <category term="线上评论" scheme="https://drfengling.github.io/categories/%E7%BA%BF%E4%B8%8A%E8%AF%84%E8%AE%BA/"/>
    
    
    <category term="livere" scheme="https://drfengling.github.io/tags/livere/"/>
    
  </entry>
  
  <entry>
    <title>博客美化(一)</title>
    <link href="https://drfengling.github.io/qm/5f88ef60.html"/>
    <id>https://drfengling.github.io/qm/5f88ef60.html</id>
    <published>2022-04-16T06:03:16.000Z</published>
    <updated>2022-04-30T07:39:08.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><h5 id="1-添加鼠标点击爱心效果"><a href="#1-添加鼠标点击爱心效果" class="headerlink" title="1.添加鼠标点击爱心效果"></a>1.添加鼠标点击爱心效果</h5><p>在\themes\kratos-rebirth\source\js下新建文件love.js,输入以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">&quot;function&quot;</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">&quot;rgb(&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;)&quot;</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><p>在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/love.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成!鼠标点击就可以看到小红心效果了</p><span id="more"></span><h5 id="2-添加鼠标点击烟花爆竹效果"><a href="#2-添加鼠标点击烟花爆竹效果" class="headerlink" title="2.添加鼠标点击烟花爆竹效果"></a>2.添加鼠标点击烟花爆竹效果</h5><p>在\themes\kratos-rebirth\source\js下新建文件fireworks.js,输入以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">&quot;linear&quot;</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=window.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!1)&#125;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">&quot;linear&quot;</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=window.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure><p>在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击烟花爆竹效果 --&gt;</span><br><span class="line">&lt;canvas class=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成!鼠标点击就可以看到烟花爆竹了<br><img src="/qm/5f88ef60/2.jpg"></p><h5 id="3-浏览器网页标题恶搞"><a href="#3-浏览器网页标题恶搞" class="headerlink" title="3.浏览器网页标题恶搞"></a>3.浏览器网页标题恶搞</h5><p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \themes\kratos-rebirth\source\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 浏览器搞笑标题</span><br><span class="line">var OriginTitle = document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> (document.hidden) &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/images/favicon.ico&quot;</span>);</span><br><span class="line">        document.title = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/images/favicon.ico&quot;</span>);</span><br><span class="line">        document.title = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27;</span> + OriginTitle;</span><br><span class="line">        titleTime = setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            document.title = OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其中 funny.ico 是用户切换到其他标签后你网站的图标，favicon.ico 是正常图标，然后在 \themes\kratos-rebirth\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--浏览器搞笑标题--&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/FunnyTitle.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="4-背景添加动态线条效果"><a href="#4-背景添加动态线条效果" class="headerlink" title="4.背景添加动态线条效果"></a>4.背景添加动态线条效果</h5><p>在 \themes\kratos-rebirth\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">color=<span class="string">&quot;220,220,220&quot;</span> opacity=<span class="string">&#x27;0.7&#x27;</span> zIndex=<span class="string">&quot;-2&quot;</span> count=<span class="string">&quot;200&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>其中：</p><p>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）<br>opacity：表示线条透明度（0~1），默认：0.5<br>count：表示线条的总数量，默认：150<br>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</p><h5 id="5-小宠物挂件-小仓鼠"><a href="#5-小宠物挂件-小仓鼠" class="headerlink" title="5.小宠物挂件(小仓鼠)"></a>5.小宠物挂件(小仓鼠)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe width=<span class="string">&quot;100%&quot;</span> height=<span class="string">&quot;300&quot;</span> frameborder=<span class="string">&quot;0&quot;</span> src=<span class="string">&quot;https://cdn.abowman.com/widgets/hamster/hamster.html?up_bgColor=425066&amp;up_bodyColor=C0C0C0&amp;up_earColor=C0C0C0&amp;up_snoutColor=FFFFFF&amp;up_eyeColor=392f41&amp;up_feetColor=FFFFFF&amp;up_tailColor=C0C0C0&amp;up_waterColor=87CEFA&amp;up_foodColor=cba920&amp;up_wheelColor=ffffff&amp;up_wheelOuterColor=ff4d4d&amp;up_wheelCenterColor=ffffff&amp;up_wheelSpokeColor=dedede&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><iframe width="100%" height="300" frameborder="0" src="https://cdn.abowman.com/widgets/hamster/hamster.html?up_bgColor=425066&up_bodyColor=C0C0C0&up_earColor=C0C0C0&up_snoutColor=FFFFFF&up_eyeColor=392f41&up_feetColor=FFFFFF&up_tailColor=C0C0C0&up_waterColor=87CEFA&up_foodColor=cba920&up_wheelColor=ffffff&up_wheelOuterColor=ff4d4d&up_wheelCenterColor=ffffff&up_wheelSpokeColor=dedede"></iframe><h5 id="6-天气预报"><a href="#6-天气预报" class="headerlink" title="6.天气预报"></a>6.天气预报</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe allowtransparency=<span class="string">&quot;true&quot;</span> frameborder=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;100%&quot;</span> height=<span class="string">&quot;200&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> src=<span class="string">&quot;//tianqi.2345.com/plugin/widget/index.htm?s=2&amp;z=1&amp;t=1&amp;v=0&amp;d=5&amp;bd=1&amp;k=000000&amp;f=&amp;ltf=009944&amp;htf=cc0000&amp;q=1&amp;e=1&amp;a=1&amp;c=54511&amp;w=100%&amp;h=200&amp;align=center&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><iframe allowtransparency="true" frameborder="0" width="100%" height="200" scrolling="no" src="//tianqi.2345.com/plugin/widget/index.htm?s=2&z=1&t=1&v=0&d=5&bd=1&k=000000&f=&ltf=009944&htf=cc0000&q=1&e=1&a=1&c=54511&w=100%&h=200&align=center"></iframe>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;博客美化&quot;&gt;&lt;a href=&quot;#博客美化&quot; class=&quot;headerlink&quot; title=&quot;博客美化&quot;&gt;&lt;/a&gt;博客美化&lt;/h2&gt;&lt;h5 id=&quot;1-添加鼠标点击爱心效果&quot;&gt;&lt;a href=&quot;#1-添加鼠标点击爱心效果&quot; class=&quot;headerlink&quot; title=&quot;1.添加鼠标点击爱心效果&quot;&gt;&lt;/a&gt;1.添加鼠标点击爱心效果&lt;/h5&gt;&lt;p&gt;在\themes\kratos-rebirth\source\js下新建文件love.js,输入以下内容:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;!&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e,t,a)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;n&lt;/span&gt;&lt;/span&gt;()&amp;#123;c(&lt;span class=&quot;string&quot;&gt;&amp;quot;.heart&amp;#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&amp;#125;.heart:after,.heart:before&amp;#123;content: &amp;#x27;&amp;#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&amp;#125;.heart:after&amp;#123;top: -5px;&amp;#125;.heart:before&amp;#123;left: -5px;&amp;#125;&amp;quot;&lt;/span&gt;),o(),r()&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;r&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(var e=0;e&amp;lt;d.length;e++)d[e].alpha&amp;lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&lt;span class=&quot;string&quot;&gt;&amp;quot;left:&amp;quot;&lt;/span&gt;+d[e].x+&lt;span class=&quot;string&quot;&gt;&amp;quot;px;top:&amp;quot;&lt;/span&gt;+d[e].y+&lt;span class=&quot;string&quot;&gt;&amp;quot;px;opacity:&amp;quot;&lt;/span&gt;+d[e].alpha+&lt;span class=&quot;string&quot;&gt;&amp;quot;;transform:scale(&amp;quot;&lt;/span&gt;+d[e].scale+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+d[e].scale+&lt;span class=&quot;string&quot;&gt;&amp;quot;) rotate(45deg);background:&amp;quot;&lt;/span&gt;+d[e].color+&lt;span class=&quot;string&quot;&gt;&amp;quot;;z-index:99999&amp;quot;&lt;/span&gt;);requestAnimationFrame(r)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;o&lt;/span&gt;&lt;/span&gt;()&amp;#123;var t=&lt;span class=&quot;string&quot;&gt;&amp;quot;function&amp;quot;&lt;/span&gt;==typeof e.onclick&amp;amp;&amp;amp;e.onclick;e.onclick=&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;t&amp;amp;&amp;amp;t(),i(e)&amp;#125;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; i(e)&amp;#123;var a=t.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;);a.className=&lt;span class=&quot;string&quot;&gt;&amp;quot;heart&amp;quot;&lt;/span&gt;,d.push(&amp;#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&amp;#125;),t.body.appendChild(a)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; c(e)&amp;#123;var a=t.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;style&amp;quot;&lt;/span&gt;);a.type=&lt;span class=&quot;string&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;;try&amp;#123;a.appendChild(t.createTextNode(e))&amp;#125;catch(t)&amp;#123;a.styleSheet.cssText=e&amp;#125;t.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;)[0].appendChild(a)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;rgb(&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&amp;#125;var d=[];e.requestAnimationFrame=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;setTimeout(e,1e3/60)&amp;#125;&amp;#125;(),n()&amp;#125;(window,document);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 页面点击小红心 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&amp;quot;/js/love.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完成!鼠标点击就可以看到小红心效果了&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="博客美化" scheme="https://drfengling.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
</feed>
